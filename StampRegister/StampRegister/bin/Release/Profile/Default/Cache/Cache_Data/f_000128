{"version":3,"file":"js/chunk-vendors-f4d1ac8d.b6c5418d.js","mappings":"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","sources":["webpack://@creators/cms-next/./node_modules/@sentry/core/esm/api.js","webpack://@creators/cms-next/./node_modules/@sentry/core/esm/transports/noop.js","webpack://@creators/cms-next/./node_modules/@sentry/core/esm/basebackend.js","webpack://@creators/cms-next/./node_modules/@sentry/core/esm/integration.js","webpack://@creators/cms-next/./node_modules/@sentry/core/esm/baseclient.js","webpack://@creators/cms-next/./node_modules/@sentry/core/esm/flags.js","webpack://@creators/cms-next/./node_modules/@sentry/core/esm/integrations/functiontostring.js","webpack://@creators/cms-next/./node_modules/@sentry/core/esm/integrations/inboundfilters.js","webpack://@creators/cms-next/./node_modules/@sentry/core/esm/request.js","webpack://@creators/cms-next/./node_modules/@sentry/core/esm/sdk.js","webpack://@creators/cms-next/./node_modules/@sentry/core/esm/transports/base.js","webpack://@creators/cms-next/./node_modules/@sentry/core/esm/version.js","webpack://@creators/cms-next/./node_modules/@sentry/hub/esm/flags.js","webpack://@creators/cms-next/./node_modules/@sentry/hub/esm/session.js","webpack://@creators/cms-next/./node_modules/@sentry/hub/esm/hub.js","webpack://@creators/cms-next/./node_modules/@sentry/hub/esm/scope.js","webpack://@creators/cms-next/./node_modules/@sentry/minimal/esm/index.js","webpack://@creators/cms-next/./node_modules/@sentry/tracing/esm/browser/backgroundtab.js","webpack://@creators/cms-next/./node_modules/@sentry/tracing/esm/browser/web-vitals/getCLS.js","webpack://@creators/cms-next/./node_modules/@sentry/tracing/esm/browser/web-vitals/getFID.js","webpack://@creators/cms-next/./node_modules/@sentry/tracing/esm/browser/web-vitals/getLCP.js","webpack://@creators/cms-next/./node_modules/@sentry/tracing/esm/browser/metrics.js","webpack://@creators/cms-next/./node_modules/@sentry/tracing/esm/browser/request.js","webpack://@creators/cms-next/./node_modules/@sentry/tracing/esm/browser/router.js","webpack://@creators/cms-next/./node_modules/@sentry/tracing/esm/browser/browsertracing.js","webpack://@creators/cms-next/./node_modules/@sentry/tracing/esm/browser/web-vitals/lib/bindReporter.js","webpack://@creators/cms-next/./node_modules/@sentry/tracing/esm/browser/web-vitals/lib/generateUniqueID.js","webpack://@creators/cms-next/./node_modules/@sentry/tracing/esm/browser/web-vitals/lib/getVisibilityWatcher.js","webpack://@creators/cms-next/./node_modules/@sentry/tracing/esm/browser/web-vitals/lib/initMetric.js","webpack://@creators/cms-next/./node_modules/@sentry/tracing/esm/browser/web-vitals/lib/observe.js","webpack://@creators/cms-next/./node_modules/@sentry/tracing/esm/browser/web-vitals/lib/onHidden.js","webpack://@creators/cms-next/./node_modules/@sentry/tracing/esm/constants.js","webpack://@creators/cms-next/./node_modules/@sentry/tracing/esm/errors.js","webpack://@creators/cms-next/./node_modules/@sentry/tracing/esm/flags.js","webpack://@creators/cms-next/./node_modules/@sentry/tracing/esm/hubextensions.js","webpack://@creators/cms-next/./node_modules/@sentry/tracing/esm/idletransaction.js","webpack://@creators/cms-next/./node_modules/@sentry/tracing/esm/index.js","webpack://@creators/cms-next/./node_modules/@sentry/tracing/esm/span.js","webpack://@creators/cms-next/./node_modules/@sentry/tracing/esm/transaction.js","webpack://@creators/cms-next/./node_modules/@sentry/tracing/esm/utils.js"],"sourcesContent":["import { dsnToString, makeDsn, urlEncode } from '@sentry/utils';\nvar SENTRY_API_VERSION = '7';\n/**\n * Helper class to provide urls, headers and metadata that can be used to form\n * different types of requests to Sentry endpoints.\n * Supports both envelopes and regular event requests.\n *\n * @deprecated Please use APIDetails\n **/\nvar API = /** @class */ (function () {\n    /** Create a new instance of API */\n    function API(dsn, metadata, tunnel) {\n        if (metadata === void 0) { metadata = {}; }\n        this.dsn = dsn;\n        this._dsnObject = makeDsn(dsn);\n        this.metadata = metadata;\n        this._tunnel = tunnel;\n    }\n    /** Returns the Dsn object. */\n    API.prototype.getDsn = function () {\n        return this._dsnObject;\n    };\n    /** Does this transport force envelopes? */\n    API.prototype.forceEnvelope = function () {\n        return !!this._tunnel;\n    };\n    /** Returns the prefix to construct Sentry ingestion API endpoints. */\n    API.prototype.getBaseApiEndpoint = function () {\n        return getBaseApiEndpoint(this._dsnObject);\n    };\n    /** Returns the store endpoint URL. */\n    API.prototype.getStoreEndpoint = function () {\n        return getStoreEndpoint(this._dsnObject);\n    };\n    /**\n     * Returns the store endpoint URL with auth in the query string.\n     *\n     * Sending auth as part of the query string and not as custom HTTP headers avoids CORS preflight requests.\n     */\n    API.prototype.getStoreEndpointWithUrlEncodedAuth = function () {\n        return getStoreEndpointWithUrlEncodedAuth(this._dsnObject);\n    };\n    /**\n     * Returns the envelope endpoint URL with auth in the query string.\n     *\n     * Sending auth as part of the query string and not as custom HTTP headers avoids CORS preflight requests.\n     */\n    API.prototype.getEnvelopeEndpointWithUrlEncodedAuth = function () {\n        return getEnvelopeEndpointWithUrlEncodedAuth(this._dsnObject, this._tunnel);\n    };\n    return API;\n}());\nexport { API };\n/** Initializes API Details */\nexport function initAPIDetails(dsn, metadata, tunnel) {\n    return {\n        initDsn: dsn,\n        metadata: metadata || {},\n        dsn: makeDsn(dsn),\n        tunnel: tunnel,\n    };\n}\n/** Returns the prefix to construct Sentry ingestion API endpoints. */\nfunction getBaseApiEndpoint(dsn) {\n    var protocol = dsn.protocol ? dsn.protocol + \":\" : '';\n    var port = dsn.port ? \":\" + dsn.port : '';\n    return protocol + \"//\" + dsn.host + port + (dsn.path ? \"/\" + dsn.path : '') + \"/api/\";\n}\n/** Returns the ingest API endpoint for target. */\nfunction _getIngestEndpoint(dsn, target) {\n    return \"\" + getBaseApiEndpoint(dsn) + dsn.projectId + \"/\" + target + \"/\";\n}\n/** Returns a URL-encoded string with auth config suitable for a query string. */\nfunction _encodedAuth(dsn) {\n    return urlEncode({\n        // We send only the minimum set of required information. See\n        // https://github.com/getsentry/sentry-javascript/issues/2572.\n        sentry_key: dsn.publicKey,\n        sentry_version: SENTRY_API_VERSION,\n    });\n}\n/** Returns the store endpoint URL. */\nfunction getStoreEndpoint(dsn) {\n    return _getIngestEndpoint(dsn, 'store');\n}\n/**\n * Returns the store endpoint URL with auth in the query string.\n *\n * Sending auth as part of the query string and not as custom HTTP headers avoids CORS preflight requests.\n */\nexport function getStoreEndpointWithUrlEncodedAuth(dsn) {\n    return getStoreEndpoint(dsn) + \"?\" + _encodedAuth(dsn);\n}\n/** Returns the envelope endpoint URL. */\nfunction _getEnvelopeEndpoint(dsn) {\n    return _getIngestEndpoint(dsn, 'envelope');\n}\n/**\n * Returns the envelope endpoint URL with auth in the query string.\n *\n * Sending auth as part of the query string and not as custom HTTP headers avoids CORS preflight requests.\n */\nexport function getEnvelopeEndpointWithUrlEncodedAuth(dsn, tunnel) {\n    return tunnel ? tunnel : _getEnvelopeEndpoint(dsn) + \"?\" + _encodedAuth(dsn);\n}\n/**\n * Returns an object that can be used in request headers.\n * This is needed for node and the old /store endpoint in sentry\n */\nexport function getRequestHeaders(dsn, clientName, clientVersion) {\n    // CHANGE THIS to use metadata but keep clientName and clientVersion compatible\n    var header = [\"Sentry sentry_version=\" + SENTRY_API_VERSION];\n    header.push(\"sentry_client=\" + clientName + \"/\" + clientVersion);\n    header.push(\"sentry_key=\" + dsn.publicKey);\n    if (dsn.pass) {\n        header.push(\"sentry_secret=\" + dsn.pass);\n    }\n    return {\n        'Content-Type': 'application/json',\n        'X-Sentry-Auth': header.join(', '),\n    };\n}\n/** Returns the url to the report dialog endpoint. */\nexport function getReportDialogEndpoint(dsnLike, dialogOptions) {\n    var dsn = makeDsn(dsnLike);\n    var endpoint = getBaseApiEndpoint(dsn) + \"embed/error-page/\";\n    var encodedOptions = \"dsn=\" + dsnToString(dsn);\n    for (var key in dialogOptions) {\n        if (key === 'dsn') {\n            continue;\n        }\n        if (key === 'user') {\n            if (!dialogOptions.user) {\n                continue;\n            }\n            if (dialogOptions.user.name) {\n                encodedOptions += \"&name=\" + encodeURIComponent(dialogOptions.user.name);\n            }\n            if (dialogOptions.user.email) {\n                encodedOptions += \"&email=\" + encodeURIComponent(dialogOptions.user.email);\n            }\n        }\n        else {\n            encodedOptions += \"&\" + encodeURIComponent(key) + \"=\" + encodeURIComponent(dialogOptions[key]);\n        }\n    }\n    return endpoint + \"?\" + encodedOptions;\n}\n//# sourceMappingURL=api.js.map","import { resolvedSyncPromise } from '@sentry/utils';\n/** Noop transport */\nvar NoopTransport = /** @class */ (function () {\n    function NoopTransport() {\n    }\n    /**\n     * @inheritDoc\n     */\n    NoopTransport.prototype.sendEvent = function (_) {\n        return resolvedSyncPromise({\n            reason: 'NoopTransport: Event has been skipped because no Dsn is configured.',\n            status: 'skipped',\n        });\n    };\n    /**\n     * @inheritDoc\n     */\n    NoopTransport.prototype.close = function (_) {\n        return resolvedSyncPromise(true);\n    };\n    return NoopTransport;\n}());\nexport { NoopTransport };\n//# sourceMappingURL=noop.js.map","import { __read } from \"tslib\";\nimport { logger, SentryError } from '@sentry/utils';\nimport { initAPIDetails } from './api';\nimport { IS_DEBUG_BUILD } from './flags';\nimport { createEventEnvelope, createSessionEnvelope } from './request';\nimport { NoopTransport } from './transports/noop';\n/**\n * This is the base implemention of a Backend.\n * @hidden\n */\nvar BaseBackend = /** @class */ (function () {\n    /** Creates a new backend instance. */\n    function BaseBackend(options) {\n        this._options = options;\n        if (!this._options.dsn) {\n            IS_DEBUG_BUILD && logger.warn('No DSN provided, backend will not do anything.');\n        }\n        this._transport = this._setupTransport();\n    }\n    /**\n     * @inheritDoc\n     */\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any, @typescript-eslint/explicit-module-boundary-types\n    BaseBackend.prototype.eventFromException = function (_exception, _hint) {\n        throw new SentryError('Backend has to implement `eventFromException` method');\n    };\n    /**\n     * @inheritDoc\n     */\n    BaseBackend.prototype.eventFromMessage = function (_message, _level, _hint) {\n        throw new SentryError('Backend has to implement `eventFromMessage` method');\n    };\n    /**\n     * @inheritDoc\n     */\n    BaseBackend.prototype.sendEvent = function (event) {\n        // TODO(v7): Remove the if-else\n        if (this._newTransport &&\n            this._options.dsn &&\n            this._options._experiments &&\n            this._options._experiments.newTransport) {\n            var api = initAPIDetails(this._options.dsn, this._options._metadata, this._options.tunnel);\n            var env = createEventEnvelope(event, api);\n            void this._newTransport.send(env).then(null, function (reason) {\n                IS_DEBUG_BUILD && logger.error('Error while sending event:', reason);\n            });\n        }\n        else {\n            void this._transport.sendEvent(event).then(null, function (reason) {\n                IS_DEBUG_BUILD && logger.error('Error while sending event:', reason);\n            });\n        }\n    };\n    /**\n     * @inheritDoc\n     */\n    BaseBackend.prototype.sendSession = function (session) {\n        if (!this._transport.sendSession) {\n            IS_DEBUG_BUILD && logger.warn(\"Dropping session because custom transport doesn't implement sendSession\");\n            return;\n        }\n        // TODO(v7): Remove the if-else\n        if (this._newTransport &&\n            this._options.dsn &&\n            this._options._experiments &&\n            this._options._experiments.newTransport) {\n            var api = initAPIDetails(this._options.dsn, this._options._metadata, this._options.tunnel);\n            var _a = __read(createSessionEnvelope(session, api), 1), env = _a[0];\n            void this._newTransport.send(env).then(null, function (reason) {\n                IS_DEBUG_BUILD && logger.error('Error while sending session:', reason);\n            });\n        }\n        else {\n            void this._transport.sendSession(session).then(null, function (reason) {\n                IS_DEBUG_BUILD && logger.error('Error while sending session:', reason);\n            });\n        }\n    };\n    /**\n     * @inheritDoc\n     */\n    BaseBackend.prototype.getTransport = function () {\n        return this._transport;\n    };\n    /**\n     * Sets up the transport so it can be used later to send requests.\n     */\n    BaseBackend.prototype._setupTransport = function () {\n        return new NoopTransport();\n    };\n    return BaseBackend;\n}());\nexport { BaseBackend };\n//# sourceMappingURL=basebackend.js.map","import { __read, __spread } from \"tslib\";\nimport { addGlobalEventProcessor, getCurrentHub } from '@sentry/hub';\nimport { addNonEnumerableProperty, logger } from '@sentry/utils';\nimport { IS_DEBUG_BUILD } from './flags';\nexport var installedIntegrations = [];\n/**\n * @private\n */\nfunction filterDuplicates(integrations) {\n    return integrations.reduce(function (acc, integrations) {\n        if (acc.every(function (accIntegration) { return integrations.name !== accIntegration.name; })) {\n            acc.push(integrations);\n        }\n        return acc;\n    }, []);\n}\n/** Gets integration to install */\nexport function getIntegrationsToSetup(options) {\n    var defaultIntegrations = (options.defaultIntegrations && __spread(options.defaultIntegrations)) || [];\n    var userIntegrations = options.integrations;\n    var integrations = __spread(filterDuplicates(defaultIntegrations));\n    if (Array.isArray(userIntegrations)) {\n        // Filter out integrations that are also included in user options\n        integrations = __spread(integrations.filter(function (integrations) {\n            return userIntegrations.every(function (userIntegration) { return userIntegration.name !== integrations.name; });\n        }), filterDuplicates(userIntegrations));\n    }\n    else if (typeof userIntegrations === 'function') {\n        integrations = userIntegrations(integrations);\n        integrations = Array.isArray(integrations) ? integrations : [integrations];\n    }\n    // Make sure that if present, `Debug` integration will always run last\n    var integrationsNames = integrations.map(function (i) { return i.name; });\n    var alwaysLastToRun = 'Debug';\n    if (integrationsNames.indexOf(alwaysLastToRun) !== -1) {\n        integrations.push.apply(integrations, __spread(integrations.splice(integrationsNames.indexOf(alwaysLastToRun), 1)));\n    }\n    return integrations;\n}\n/** Setup given integration */\nexport function setupIntegration(integration) {\n    if (installedIntegrations.indexOf(integration.name) !== -1) {\n        return;\n    }\n    integration.setupOnce(addGlobalEventProcessor, getCurrentHub);\n    installedIntegrations.push(integration.name);\n    IS_DEBUG_BUILD && logger.log(\"Integration installed: \" + integration.name);\n}\n/**\n * Given a list of integration instances this installs them all. When `withDefaults` is set to `true` then all default\n * integrations are added unless they were already provided before.\n * @param integrations array of integration instances\n * @param withDefault should enable default integrations\n */\nexport function setupIntegrations(options) {\n    var integrations = {};\n    getIntegrationsToSetup(options).forEach(function (integration) {\n        integrations[integration.name] = integration;\n        setupIntegration(integration);\n    });\n    // set the `initialized` flag so we don't run through the process again unecessarily; use `Object.defineProperty`\n    // because by default it creates a property which is nonenumerable, which we want since `initialized` shouldn't be\n    // considered a member of the index the way the actual integrations are\n    addNonEnumerableProperty(integrations, 'initialized', true);\n    return integrations;\n}\n//# sourceMappingURL=integration.js.map","import { __assign, __read, __spread, __values } from \"tslib\";\n/* eslint-disable max-lines */\nimport { Scope } from '@sentry/hub';\nimport { checkOrSetAlreadyCaught, dateTimestampInSeconds, isPlainObject, isPrimitive, isThenable, logger, makeDsn, normalize, rejectedSyncPromise, resolvedSyncPromise, SentryError, SyncPromise, truncate, uuid4, } from '@sentry/utils';\nimport { IS_DEBUG_BUILD } from './flags';\nimport { setupIntegrations } from './integration';\nvar ALREADY_SEEN_ERROR = \"Not capturing exception because it's already been captured.\";\n/**\n * Base implementation for all JavaScript SDK clients.\n *\n * Call the constructor with the corresponding backend constructor and options\n * specific to the client subclass. To access these options later, use\n * {@link Client.getOptions}. Also, the Backend instance is available via\n * {@link Client.getBackend}.\n *\n * If a Dsn is specified in the options, it will be parsed and stored. Use\n * {@link Client.getDsn} to retrieve the Dsn at any moment. In case the Dsn is\n * invalid, the constructor will throw a {@link SentryException}. Note that\n * without a valid Dsn, the SDK will not send any events to Sentry.\n *\n * Before sending an event via the backend, it is passed through\n * {@link BaseClient._prepareEvent} to add SDK information and scope data\n * (breadcrumbs and context). To add more custom information, override this\n * method and extend the resulting prepared event.\n *\n * To issue automatically created events (e.g. via instrumentation), use\n * {@link Client.captureEvent}. It will prepare the event and pass it through\n * the callback lifecycle. To issue auto-breadcrumbs, use\n * {@link Client.addBreadcrumb}.\n *\n * @example\n * class NodeClient extends BaseClient<NodeBackend, NodeOptions> {\n *   public constructor(options: NodeOptions) {\n *     super(NodeBackend, options);\n *   }\n *\n *   // ...\n * }\n */\nvar BaseClient = /** @class */ (function () {\n    /**\n     * Initializes this client instance.\n     *\n     * @param backendClass A constructor function to create the backend.\n     * @param options Options for the client.\n     */\n    function BaseClient(backendClass, options) {\n        /** Array of used integrations. */\n        this._integrations = {};\n        /** Number of calls being processed */\n        this._numProcessing = 0;\n        this._backend = new backendClass(options);\n        this._options = options;\n        if (options.dsn) {\n            this._dsn = makeDsn(options.dsn);\n        }\n    }\n    /**\n     * @inheritDoc\n     */\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any, @typescript-eslint/explicit-module-boundary-types\n    BaseClient.prototype.captureException = function (exception, hint, scope) {\n        var _this = this;\n        // ensure we haven't captured this very object before\n        if (checkOrSetAlreadyCaught(exception)) {\n            IS_DEBUG_BUILD && logger.log(ALREADY_SEEN_ERROR);\n            return;\n        }\n        var eventId = hint && hint.event_id;\n        this._process(this._getBackend()\n            .eventFromException(exception, hint)\n            .then(function (event) { return _this._captureEvent(event, hint, scope); })\n            .then(function (result) {\n            eventId = result;\n        }));\n        return eventId;\n    };\n    /**\n     * @inheritDoc\n     */\n    BaseClient.prototype.captureMessage = function (message, level, hint, scope) {\n        var _this = this;\n        var eventId = hint && hint.event_id;\n        var promisedEvent = isPrimitive(message)\n            ? this._getBackend().eventFromMessage(String(message), level, hint)\n            : this._getBackend().eventFromException(message, hint);\n        this._process(promisedEvent\n            .then(function (event) { return _this._captureEvent(event, hint, scope); })\n            .then(function (result) {\n            eventId = result;\n        }));\n        return eventId;\n    };\n    /**\n     * @inheritDoc\n     */\n    BaseClient.prototype.captureEvent = function (event, hint, scope) {\n        // ensure we haven't captured this very object before\n        if (hint && hint.originalException && checkOrSetAlreadyCaught(hint.originalException)) {\n            IS_DEBUG_BUILD && logger.log(ALREADY_SEEN_ERROR);\n            return;\n        }\n        var eventId = hint && hint.event_id;\n        this._process(this._captureEvent(event, hint, scope).then(function (result) {\n            eventId = result;\n        }));\n        return eventId;\n    };\n    /**\n     * @inheritDoc\n     */\n    BaseClient.prototype.captureSession = function (session) {\n        if (!this._isEnabled()) {\n            IS_DEBUG_BUILD && logger.warn('SDK not enabled, will not capture session.');\n            return;\n        }\n        if (!(typeof session.release === 'string')) {\n            IS_DEBUG_BUILD && logger.warn('Discarded session because of missing or non-string release');\n        }\n        else {\n            this._sendSession(session);\n            // After sending, we set init false to indicate it's not the first occurrence\n            session.update({ init: false });\n        }\n    };\n    /**\n     * @inheritDoc\n     */\n    BaseClient.prototype.getDsn = function () {\n        return this._dsn;\n    };\n    /**\n     * @inheritDoc\n     */\n    BaseClient.prototype.getOptions = function () {\n        return this._options;\n    };\n    /**\n     * @inheritDoc\n     */\n    BaseClient.prototype.getTransport = function () {\n        return this._getBackend().getTransport();\n    };\n    /**\n     * @inheritDoc\n     */\n    BaseClient.prototype.flush = function (timeout) {\n        var _this = this;\n        return this._isClientDoneProcessing(timeout).then(function (clientFinished) {\n            return _this.getTransport()\n                .close(timeout)\n                .then(function (transportFlushed) { return clientFinished && transportFlushed; });\n        });\n    };\n    /**\n     * @inheritDoc\n     */\n    BaseClient.prototype.close = function (timeout) {\n        var _this = this;\n        return this.flush(timeout).then(function (result) {\n            _this.getOptions().enabled = false;\n            return result;\n        });\n    };\n    /**\n     * Sets up the integrations\n     */\n    BaseClient.prototype.setupIntegrations = function () {\n        if (this._isEnabled() && !this._integrations.initialized) {\n            this._integrations = setupIntegrations(this._options);\n        }\n    };\n    /**\n     * @inheritDoc\n     */\n    BaseClient.prototype.getIntegration = function (integration) {\n        try {\n            return this._integrations[integration.id] || null;\n        }\n        catch (_oO) {\n            IS_DEBUG_BUILD && logger.warn(\"Cannot retrieve integration \" + integration.id + \" from the current Client\");\n            return null;\n        }\n    };\n    /** Updates existing session based on the provided event */\n    BaseClient.prototype._updateSessionFromEvent = function (session, event) {\n        var e_1, _a;\n        var crashed = false;\n        var errored = false;\n        var exceptions = event.exception && event.exception.values;\n        if (exceptions) {\n            errored = true;\n            try {\n                for (var exceptions_1 = __values(exceptions), exceptions_1_1 = exceptions_1.next(); !exceptions_1_1.done; exceptions_1_1 = exceptions_1.next()) {\n                    var ex = exceptions_1_1.value;\n                    var mechanism = ex.mechanism;\n                    if (mechanism && mechanism.handled === false) {\n                        crashed = true;\n                        break;\n                    }\n                }\n            }\n            catch (e_1_1) { e_1 = { error: e_1_1 }; }\n            finally {\n                try {\n                    if (exceptions_1_1 && !exceptions_1_1.done && (_a = exceptions_1.return)) _a.call(exceptions_1);\n                }\n                finally { if (e_1) throw e_1.error; }\n            }\n        }\n        // A session is updated and that session update is sent in only one of the two following scenarios:\n        // 1. Session with non terminal status and 0 errors + an error occurred -> Will set error count to 1 and send update\n        // 2. Session with non terminal status and 1 error + a crash occurred -> Will set status crashed and send update\n        var sessionNonTerminal = session.status === 'ok';\n        var shouldUpdateAndSend = (sessionNonTerminal && session.errors === 0) || (sessionNonTerminal && crashed);\n        if (shouldUpdateAndSend) {\n            session.update(__assign(__assign({}, (crashed && { status: 'crashed' })), { errors: session.errors || Number(errored || crashed) }));\n            this.captureSession(session);\n        }\n    };\n    /** Deliver captured session to Sentry */\n    BaseClient.prototype._sendSession = function (session) {\n        this._getBackend().sendSession(session);\n    };\n    /**\n     * Determine if the client is finished processing. Returns a promise because it will wait `timeout` ms before saying\n     * \"no\" (resolving to `false`) in order to give the client a chance to potentially finish first.\n     *\n     * @param timeout The time, in ms, after which to resolve to `false` if the client is still busy. Passing `0` (or not\n     * passing anything) will make the promise wait as long as it takes for processing to finish before resolving to\n     * `true`.\n     * @returns A promise which will resolve to `true` if processing is already done or finishes before the timeout, and\n     * `false` otherwise\n     */\n    BaseClient.prototype._isClientDoneProcessing = function (timeout) {\n        var _this = this;\n        return new SyncPromise(function (resolve) {\n            var ticked = 0;\n            var tick = 1;\n            var interval = setInterval(function () {\n                if (_this._numProcessing == 0) {\n                    clearInterval(interval);\n                    resolve(true);\n                }\n                else {\n                    ticked += tick;\n                    if (timeout && ticked >= timeout) {\n                        clearInterval(interval);\n                        resolve(false);\n                    }\n                }\n            }, tick);\n        });\n    };\n    /** Returns the current backend. */\n    BaseClient.prototype._getBackend = function () {\n        return this._backend;\n    };\n    /** Determines whether this SDK is enabled and a valid Dsn is present. */\n    BaseClient.prototype._isEnabled = function () {\n        return this.getOptions().enabled !== false && this._dsn !== undefined;\n    };\n    /**\n     * Adds common information to events.\n     *\n     * The information includes release and environment from `options`,\n     * breadcrumbs and context (extra, tags and user) from the scope.\n     *\n     * Information that is already present in the event is never overwritten. For\n     * nested objects, such as the context, keys are merged.\n     *\n     * @param event The original event.\n     * @param hint May contain additional information about the original exception.\n     * @param scope A scope containing event metadata.\n     * @returns A new event with more information.\n     */\n    BaseClient.prototype._prepareEvent = function (event, scope, hint) {\n        var _this = this;\n        var _a = this.getOptions(), _b = _a.normalizeDepth, normalizeDepth = _b === void 0 ? 3 : _b, _c = _a.normalizeMaxBreadth, normalizeMaxBreadth = _c === void 0 ? 1000 : _c;\n        var prepared = __assign(__assign({}, event), { event_id: event.event_id || (hint && hint.event_id ? hint.event_id : uuid4()), timestamp: event.timestamp || dateTimestampInSeconds() });\n        this._applyClientOptions(prepared);\n        this._applyIntegrationsMetadata(prepared);\n        // If we have scope given to us, use it as the base for further modifications.\n        // This allows us to prevent unnecessary copying of data if `captureContext` is not provided.\n        var finalScope = scope;\n        if (hint && hint.captureContext) {\n            finalScope = Scope.clone(finalScope).update(hint.captureContext);\n        }\n        // We prepare the result here with a resolved Event.\n        var result = resolvedSyncPromise(prepared);\n        // This should be the last thing called, since we want that\n        // {@link Hub.addEventProcessor} gets the finished prepared event.\n        if (finalScope) {\n            // In case we have a hub we reassign it.\n            result = finalScope.applyToEvent(prepared, hint);\n        }\n        return result.then(function (evt) {\n            if (evt) {\n                // TODO this is more of the hack trying to solve https://github.com/getsentry/sentry-javascript/issues/2809\n                // it is only attached as extra data to the event if the event somehow skips being normalized\n                evt.sdkProcessingMetadata = __assign(__assign({}, evt.sdkProcessingMetadata), { normalizeDepth: normalize(normalizeDepth) + \" (\" + typeof normalizeDepth + \")\" });\n            }\n            if (typeof normalizeDepth === 'number' && normalizeDepth > 0) {\n                return _this._normalizeEvent(evt, normalizeDepth, normalizeMaxBreadth);\n            }\n            return evt;\n        });\n    };\n    /**\n     * Applies `normalize` function on necessary `Event` attributes to make them safe for serialization.\n     * Normalized keys:\n     * - `breadcrumbs.data`\n     * - `user`\n     * - `contexts`\n     * - `extra`\n     * @param event Event\n     * @returns Normalized event\n     */\n    BaseClient.prototype._normalizeEvent = function (event, depth, maxBreadth) {\n        if (!event) {\n            return null;\n        }\n        var normalized = __assign(__assign(__assign(__assign(__assign({}, event), (event.breadcrumbs && {\n            breadcrumbs: event.breadcrumbs.map(function (b) { return (__assign(__assign({}, b), (b.data && {\n                data: normalize(b.data, depth, maxBreadth),\n            }))); }),\n        })), (event.user && {\n            user: normalize(event.user, depth, maxBreadth),\n        })), (event.contexts && {\n            contexts: normalize(event.contexts, depth, maxBreadth),\n        })), (event.extra && {\n            extra: normalize(event.extra, depth, maxBreadth),\n        }));\n        // event.contexts.trace stores information about a Transaction. Similarly,\n        // event.spans[] stores information about child Spans. Given that a\n        // Transaction is conceptually a Span, normalization should apply to both\n        // Transactions and Spans consistently.\n        // For now the decision is to skip normalization of Transactions and Spans,\n        // so this block overwrites the normalized event to add back the original\n        // Transaction information prior to normalization.\n        if (event.contexts && event.contexts.trace) {\n            // eslint-disable-next-line @typescript-eslint/no-unsafe-member-access\n            normalized.contexts.trace = event.contexts.trace;\n        }\n        normalized.sdkProcessingMetadata = __assign(__assign({}, normalized.sdkProcessingMetadata), { baseClientNormalized: true });\n        return normalized;\n    };\n    /**\n     *  Enhances event using the client configuration.\n     *  It takes care of all \"static\" values like environment, release and `dist`,\n     *  as well as truncating overly long values.\n     * @param event event instance to be enhanced\n     */\n    BaseClient.prototype._applyClientOptions = function (event) {\n        var options = this.getOptions();\n        var environment = options.environment, release = options.release, dist = options.dist, _a = options.maxValueLength, maxValueLength = _a === void 0 ? 250 : _a;\n        if (!('environment' in event)) {\n            event.environment = 'environment' in options ? environment : 'production';\n        }\n        if (event.release === undefined && release !== undefined) {\n            event.release = release;\n        }\n        if (event.dist === undefined && dist !== undefined) {\n            event.dist = dist;\n        }\n        if (event.message) {\n            event.message = truncate(event.message, maxValueLength);\n        }\n        var exception = event.exception && event.exception.values && event.exception.values[0];\n        if (exception && exception.value) {\n            exception.value = truncate(exception.value, maxValueLength);\n        }\n        var request = event.request;\n        if (request && request.url) {\n            request.url = truncate(request.url, maxValueLength);\n        }\n    };\n    /**\n     * This function adds all used integrations to the SDK info in the event.\n     * @param event The event that will be filled with all integrations.\n     */\n    BaseClient.prototype._applyIntegrationsMetadata = function (event) {\n        var integrationsArray = Object.keys(this._integrations);\n        if (integrationsArray.length > 0) {\n            event.sdk = event.sdk || {};\n            event.sdk.integrations = __spread((event.sdk.integrations || []), integrationsArray);\n        }\n    };\n    /**\n     * Tells the backend to send this event\n     * @param event The Sentry event to send\n     */\n    BaseClient.prototype._sendEvent = function (event) {\n        this._getBackend().sendEvent(event);\n    };\n    /**\n     * Processes the event and logs an error in case of rejection\n     * @param event\n     * @param hint\n     * @param scope\n     */\n    BaseClient.prototype._captureEvent = function (event, hint, scope) {\n        return this._processEvent(event, hint, scope).then(function (finalEvent) {\n            return finalEvent.event_id;\n        }, function (reason) {\n            IS_DEBUG_BUILD && logger.error(reason);\n            return undefined;\n        });\n    };\n    /**\n     * Processes an event (either error or message) and sends it to Sentry.\n     *\n     * This also adds breadcrumbs and context information to the event. However,\n     * platform specific meta data (such as the User's IP address) must be added\n     * by the SDK implementor.\n     *\n     *\n     * @param event The event to send to Sentry.\n     * @param hint May contain additional information about the original exception.\n     * @param scope A scope containing event metadata.\n     * @returns A SyncPromise that resolves with the event or rejects in case event was/will not be send.\n     */\n    BaseClient.prototype._processEvent = function (event, hint, scope) {\n        var _this = this;\n        // eslint-disable-next-line @typescript-eslint/unbound-method\n        var _a = this.getOptions(), beforeSend = _a.beforeSend, sampleRate = _a.sampleRate;\n        var transport = this.getTransport();\n        function recordLostEvent(outcome, category) {\n            if (transport.recordLostEvent) {\n                transport.recordLostEvent(outcome, category);\n            }\n        }\n        if (!this._isEnabled()) {\n            return rejectedSyncPromise(new SentryError('SDK not enabled, will not capture event.'));\n        }\n        var isTransaction = event.type === 'transaction';\n        // 1.0 === 100% events are sent\n        // 0.0 === 0% events are sent\n        // Sampling for transaction happens somewhere else\n        if (!isTransaction && typeof sampleRate === 'number' && Math.random() > sampleRate) {\n            recordLostEvent('sample_rate', 'event');\n            return rejectedSyncPromise(new SentryError(\"Discarding event because it's not included in the random sample (sampling rate = \" + sampleRate + \")\"));\n        }\n        return this._prepareEvent(event, scope, hint)\n            .then(function (prepared) {\n            if (prepared === null) {\n                recordLostEvent('event_processor', event.type || 'event');\n                throw new SentryError('An event processor returned null, will not send event.');\n            }\n            var isInternalException = hint && hint.data && hint.data.__sentry__ === true;\n            if (isInternalException || isTransaction || !beforeSend) {\n                return prepared;\n            }\n            var beforeSendResult = beforeSend(prepared, hint);\n            return _ensureBeforeSendRv(beforeSendResult);\n        })\n            .then(function (processedEvent) {\n            if (processedEvent === null) {\n                recordLostEvent('before_send', event.type || 'event');\n                throw new SentryError('`beforeSend` returned `null`, will not send event.');\n            }\n            var session = scope && scope.getSession && scope.getSession();\n            if (!isTransaction && session) {\n                _this._updateSessionFromEvent(session, processedEvent);\n            }\n            _this._sendEvent(processedEvent);\n            return processedEvent;\n        })\n            .then(null, function (reason) {\n            if (reason instanceof SentryError) {\n                throw reason;\n            }\n            _this.captureException(reason, {\n                data: {\n                    __sentry__: true,\n                },\n                originalException: reason,\n            });\n            throw new SentryError(\"Event processing pipeline threw an error, original event will not be sent. Details have been sent as a new event.\\nReason: \" + reason);\n        });\n    };\n    /**\n     * Occupies the client with processing and event\n     */\n    BaseClient.prototype._process = function (promise) {\n        var _this = this;\n        this._numProcessing += 1;\n        void promise.then(function (value) {\n            _this._numProcessing -= 1;\n            return value;\n        }, function (reason) {\n            _this._numProcessing -= 1;\n            return reason;\n        });\n    };\n    return BaseClient;\n}());\nexport { BaseClient };\n/**\n * Verifies that return value of configured `beforeSend` is of expected type.\n */\nfunction _ensureBeforeSendRv(rv) {\n    var nullErr = '`beforeSend` method has to return `null` or a valid event.';\n    if (isThenable(rv)) {\n        return rv.then(function (event) {\n            if (!(isPlainObject(event) || event === null)) {\n                throw new SentryError(nullErr);\n            }\n            return event;\n        }, function (e) {\n            throw new SentryError(\"beforeSend rejected with \" + e);\n        });\n    }\n    else if (!(isPlainObject(rv) || rv === null)) {\n        throw new SentryError(nullErr);\n    }\n    return rv;\n}\n//# sourceMappingURL=baseclient.js.map","/*\n * This file defines flags and constants that can be modified during compile time in order to facilitate tree shaking\n * for users.\n *\n * Debug flags need to be declared in each package individually and must not be imported across package boundaries,\n * because some build tools have trouble tree-shaking imported guards.\n *\n * As a convention, we define debug flags in a `flags.ts` file in the root of a package's `src` folder.\n *\n * Debug flag files will contain \"magic strings\" like `__SENTRY_DEBUG__` that may get replaced with actual values during\n * our, or the user's build process. Take care when introducing new flags - they must not throw if they are not\n * replaced.\n */\n/** Flag that is true for debug builds, false otherwise. */\nexport var IS_DEBUG_BUILD = typeof __SENTRY_DEBUG__ === 'undefined' ? true : __SENTRY_DEBUG__;\n//# sourceMappingURL=flags.js.map","import { getOriginalFunction } from '@sentry/utils';\nvar originalFunctionToString;\n/** Patch toString calls to return proper name for wrapped functions */\nvar FunctionToString = /** @class */ (function () {\n    function FunctionToString() {\n        /**\n         * @inheritDoc\n         */\n        this.name = FunctionToString.id;\n    }\n    /**\n     * @inheritDoc\n     */\n    FunctionToString.prototype.setupOnce = function () {\n        // eslint-disable-next-line @typescript-eslint/unbound-method\n        originalFunctionToString = Function.prototype.toString;\n        // eslint-disable-next-line @typescript-eslint/no-explicit-any\n        Function.prototype.toString = function () {\n            var args = [];\n            for (var _i = 0; _i < arguments.length; _i++) {\n                args[_i] = arguments[_i];\n            }\n            var context = getOriginalFunction(this) || this;\n            return originalFunctionToString.apply(context, args);\n        };\n    };\n    /**\n     * @inheritDoc\n     */\n    FunctionToString.id = 'FunctionToString';\n    return FunctionToString;\n}());\nexport { FunctionToString };\n//# sourceMappingURL=functiontostring.js.map","import { __read, __spread } from \"tslib\";\nimport { getEventDescription, isMatchingPattern, logger } from '@sentry/utils';\nimport { IS_DEBUG_BUILD } from '../flags';\n// \"Script error.\" is hard coded into browsers for errors that it can't read.\n// this is the result of a script being pulled in from an external domain and CORS.\nvar DEFAULT_IGNORE_ERRORS = [/^Script error\\.?$/, /^Javascript error: Script error\\.? on line 0$/];\n/** Inbound filters configurable by the user */\nvar InboundFilters = /** @class */ (function () {\n    function InboundFilters(_options) {\n        if (_options === void 0) { _options = {}; }\n        this._options = _options;\n        /**\n         * @inheritDoc\n         */\n        this.name = InboundFilters.id;\n    }\n    /**\n     * @inheritDoc\n     */\n    InboundFilters.prototype.setupOnce = function (addGlobalEventProcessor, getCurrentHub) {\n        addGlobalEventProcessor(function (event) {\n            var hub = getCurrentHub();\n            if (hub) {\n                var self_1 = hub.getIntegration(InboundFilters);\n                if (self_1) {\n                    var client = hub.getClient();\n                    var clientOptions = client ? client.getOptions() : {};\n                    var options = _mergeOptions(self_1._options, clientOptions);\n                    return _shouldDropEvent(event, options) ? null : event;\n                }\n            }\n            return event;\n        });\n    };\n    /**\n     * @inheritDoc\n     */\n    InboundFilters.id = 'InboundFilters';\n    return InboundFilters;\n}());\nexport { InboundFilters };\n/** JSDoc */\nexport function _mergeOptions(internalOptions, clientOptions) {\n    if (internalOptions === void 0) { internalOptions = {}; }\n    if (clientOptions === void 0) { clientOptions = {}; }\n    return {\n        allowUrls: __spread((internalOptions.whitelistUrls || []), (internalOptions.allowUrls || []), (clientOptions.whitelistUrls || []), (clientOptions.allowUrls || [])),\n        denyUrls: __spread((internalOptions.blacklistUrls || []), (internalOptions.denyUrls || []), (clientOptions.blacklistUrls || []), (clientOptions.denyUrls || [])),\n        ignoreErrors: __spread((internalOptions.ignoreErrors || []), (clientOptions.ignoreErrors || []), DEFAULT_IGNORE_ERRORS),\n        ignoreInternal: internalOptions.ignoreInternal !== undefined ? internalOptions.ignoreInternal : true,\n    };\n}\n/** JSDoc */\nexport function _shouldDropEvent(event, options) {\n    if (options.ignoreInternal && _isSentryError(event)) {\n        IS_DEBUG_BUILD &&\n            logger.warn(\"Event dropped due to being internal Sentry Error.\\nEvent: \" + getEventDescription(event));\n        return true;\n    }\n    if (_isIgnoredError(event, options.ignoreErrors)) {\n        IS_DEBUG_BUILD &&\n            logger.warn(\"Event dropped due to being matched by `ignoreErrors` option.\\nEvent: \" + getEventDescription(event));\n        return true;\n    }\n    if (_isDeniedUrl(event, options.denyUrls)) {\n        IS_DEBUG_BUILD &&\n            logger.warn(\"Event dropped due to being matched by `denyUrls` option.\\nEvent: \" + getEventDescription(event) + \".\\nUrl: \" + _getEventFilterUrl(event));\n        return true;\n    }\n    if (!_isAllowedUrl(event, options.allowUrls)) {\n        IS_DEBUG_BUILD &&\n            logger.warn(\"Event dropped due to not being matched by `allowUrls` option.\\nEvent: \" + getEventDescription(event) + \".\\nUrl: \" + _getEventFilterUrl(event));\n        return true;\n    }\n    return false;\n}\nfunction _isIgnoredError(event, ignoreErrors) {\n    if (!ignoreErrors || !ignoreErrors.length) {\n        return false;\n    }\n    return _getPossibleEventMessages(event).some(function (message) {\n        return ignoreErrors.some(function (pattern) { return isMatchingPattern(message, pattern); });\n    });\n}\nfunction _isDeniedUrl(event, denyUrls) {\n    // TODO: Use Glob instead?\n    if (!denyUrls || !denyUrls.length) {\n        return false;\n    }\n    var url = _getEventFilterUrl(event);\n    return !url ? false : denyUrls.some(function (pattern) { return isMatchingPattern(url, pattern); });\n}\nfunction _isAllowedUrl(event, allowUrls) {\n    // TODO: Use Glob instead?\n    if (!allowUrls || !allowUrls.length) {\n        return true;\n    }\n    var url = _getEventFilterUrl(event);\n    return !url ? true : allowUrls.some(function (pattern) { return isMatchingPattern(url, pattern); });\n}\nfunction _getPossibleEventMessages(event) {\n    if (event.message) {\n        return [event.message];\n    }\n    if (event.exception) {\n        try {\n            var _a = (event.exception.values && event.exception.values[0]) || {}, _b = _a.type, type = _b === void 0 ? '' : _b, _c = _a.value, value = _c === void 0 ? '' : _c;\n            return [\"\" + value, type + \": \" + value];\n        }\n        catch (oO) {\n            IS_DEBUG_BUILD && logger.error(\"Cannot extract message for event \" + getEventDescription(event));\n            return [];\n        }\n    }\n    return [];\n}\nfunction _isSentryError(event) {\n    try {\n        // @ts-ignore can't be a sentry error if undefined\n        // eslint-disable-next-line @typescript-eslint/no-unsafe-member-access\n        return event.exception.values[0].type === 'SentryError';\n    }\n    catch (e) {\n        // ignore\n    }\n    return false;\n}\nfunction _getLastValidUrl(frames) {\n    if (frames === void 0) { frames = []; }\n    for (var i = frames.length - 1; i >= 0; i--) {\n        var frame = frames[i];\n        if (frame && frame.filename !== '<anonymous>' && frame.filename !== '[native code]') {\n            return frame.filename || null;\n        }\n    }\n    return null;\n}\nfunction _getEventFilterUrl(event) {\n    try {\n        if (event.stacktrace) {\n            return _getLastValidUrl(event.stacktrace.frames);\n        }\n        var frames_1;\n        try {\n            // @ts-ignore we only care about frames if the whole thing here is defined\n            frames_1 = event.exception.values[0].stacktrace.frames;\n        }\n        catch (e) {\n            // ignore\n        }\n        return frames_1 ? _getLastValidUrl(frames_1) : null;\n    }\n    catch (oO) {\n        IS_DEBUG_BUILD && logger.error(\"Cannot extract url for event \" + getEventDescription(event));\n        return null;\n    }\n}\n//# sourceMappingURL=inboundfilters.js.map","import { __assign, __read, __spread } from \"tslib\";\nimport { createEnvelope, dsnToString, normalize, serializeEnvelope } from '@sentry/utils';\nimport { getEnvelopeEndpointWithUrlEncodedAuth, getStoreEndpointWithUrlEncodedAuth } from './api';\n/** Extract sdk info from from the API metadata */\nfunction getSdkMetadataForEnvelopeHeader(api) {\n    if (!api.metadata || !api.metadata.sdk) {\n        return;\n    }\n    var _a = api.metadata.sdk, name = _a.name, version = _a.version;\n    return { name: name, version: version };\n}\n/**\n * Apply SdkInfo (name, version, packages, integrations) to the corresponding event key.\n * Merge with existing data if any.\n **/\nfunction enhanceEventWithSdkInfo(event, sdkInfo) {\n    if (!sdkInfo) {\n        return event;\n    }\n    event.sdk = event.sdk || {};\n    event.sdk.name = event.sdk.name || sdkInfo.name;\n    event.sdk.version = event.sdk.version || sdkInfo.version;\n    event.sdk.integrations = __spread((event.sdk.integrations || []), (sdkInfo.integrations || []));\n    event.sdk.packages = __spread((event.sdk.packages || []), (sdkInfo.packages || []));\n    return event;\n}\n/** Creates an envelope from a Session */\nexport function createSessionEnvelope(session, api) {\n    var sdkInfo = getSdkMetadataForEnvelopeHeader(api);\n    var envelopeHeaders = __assign(__assign({ sent_at: new Date().toISOString() }, (sdkInfo && { sdk: sdkInfo })), (!!api.tunnel && { dsn: dsnToString(api.dsn) }));\n    // I know this is hacky but we don't want to add `sessions` to request type since it's never rate limited\n    var type = 'aggregates' in session ? 'sessions' : 'session';\n    // TODO (v7) Have to cast type because envelope items do not accept a `SentryRequestType`\n    var envelopeItem = [{ type: type }, session];\n    var envelope = createEnvelope(envelopeHeaders, [envelopeItem]);\n    return [envelope, type];\n}\n/** Creates a SentryRequest from a Session. */\nexport function sessionToSentryRequest(session, api) {\n    var _a = __read(createSessionEnvelope(session, api), 2), envelope = _a[0], type = _a[1];\n    return {\n        body: serializeEnvelope(envelope),\n        type: type,\n        url: getEnvelopeEndpointWithUrlEncodedAuth(api.dsn, api.tunnel),\n    };\n}\n/**\n * Create an Envelope from an event. Note that this is duplicated from below,\n * but on purpose as this will be refactored in v7.\n */\nexport function createEventEnvelope(event, api) {\n    var sdkInfo = getSdkMetadataForEnvelopeHeader(api);\n    var eventType = event.type || 'event';\n    var transactionSampling = (event.sdkProcessingMetadata || {}).transactionSampling;\n    var _a = transactionSampling || {}, samplingMethod = _a.method, sampleRate = _a.rate;\n    // TODO: Below is a temporary hack in order to debug a serialization error - see\n    // https://github.com/getsentry/sentry-javascript/issues/2809,\n    // https://github.com/getsentry/sentry-javascript/pull/4425, and\n    // https://github.com/getsentry/sentry-javascript/pull/4574.\n    //\n    // TL; DR: even though we normalize all events (which should prevent this), something is causing `JSON.stringify` to\n    // throw a circular reference error.\n    //\n    // When it's time to remove it:\n    // 1. Delete everything between here and where the request object `req` is created, EXCEPT the line deleting\n    //    `sdkProcessingMetadata`\n    // 2. Restore the original version of the request body, which is commented out\n    // 3. Search for either of the PR URLs above and pull out the companion hacks in the browser playwright tests and the\n    //    baseClient tests in this package\n    enhanceEventWithSdkInfo(event, api.metadata.sdk);\n    event.tags = event.tags || {};\n    event.extra = event.extra || {};\n    // In theory, all events should be marked as having gone through normalization and so\n    // we should never set this tag/extra data\n    if (!(event.sdkProcessingMetadata && event.sdkProcessingMetadata.baseClientNormalized)) {\n        event.tags.skippedNormalization = true;\n        event.extra.normalizeDepth = event.sdkProcessingMetadata ? event.sdkProcessingMetadata.normalizeDepth : 'unset';\n    }\n    // prevent this data from being sent to sentry\n    // TODO: This is NOT part of the hack - DO NOT DELETE\n    delete event.sdkProcessingMetadata;\n    var envelopeHeaders = __assign(__assign({ event_id: event.event_id, sent_at: new Date().toISOString() }, (sdkInfo && { sdk: sdkInfo })), (!!api.tunnel && { dsn: dsnToString(api.dsn) }));\n    var eventItem = [\n        {\n            type: eventType,\n            sample_rates: [{ id: samplingMethod, rate: sampleRate }],\n        },\n        event,\n    ];\n    return createEnvelope(envelopeHeaders, [eventItem]);\n}\n/** Creates a SentryRequest from an event. */\nexport function eventToSentryRequest(event, api) {\n    var sdkInfo = getSdkMetadataForEnvelopeHeader(api);\n    var eventType = event.type || 'event';\n    var useEnvelope = eventType === 'transaction' || !!api.tunnel;\n    var transactionSampling = (event.sdkProcessingMetadata || {}).transactionSampling;\n    var _a = transactionSampling || {}, samplingMethod = _a.method, sampleRate = _a.rate;\n    // TODO: Below is a temporary hack in order to debug a serialization error - see\n    // https://github.com/getsentry/sentry-javascript/issues/2809,\n    // https://github.com/getsentry/sentry-javascript/pull/4425, and\n    // https://github.com/getsentry/sentry-javascript/pull/4574.\n    //\n    // TL; DR: even though we normalize all events (which should prevent this), something is causing `JSON.stringify` to\n    // throw a circular reference error.\n    //\n    // When it's time to remove it:\n    // 1. Delete everything between here and where the request object `req` is created, EXCEPT the line deleting\n    //    `sdkProcessingMetadata`\n    // 2. Restore the original version of the request body, which is commented out\n    // 3. Search for either of the PR URLs above and pull out the companion hacks in the browser playwright tests and the\n    //    baseClient tests in this package\n    enhanceEventWithSdkInfo(event, api.metadata.sdk);\n    event.tags = event.tags || {};\n    event.extra = event.extra || {};\n    // In theory, all events should be marked as having gone through normalization and so\n    // we should never set this tag/extra data\n    if (!(event.sdkProcessingMetadata && event.sdkProcessingMetadata.baseClientNormalized)) {\n        event.tags.skippedNormalization = true;\n        event.extra.normalizeDepth = event.sdkProcessingMetadata ? event.sdkProcessingMetadata.normalizeDepth : 'unset';\n    }\n    // prevent this data from being sent to sentry\n    // TODO: This is NOT part of the hack - DO NOT DELETE\n    delete event.sdkProcessingMetadata;\n    var body;\n    try {\n        // 99.9% of events should get through just fine - no change in behavior for them\n        body = JSON.stringify(event);\n    }\n    catch (err) {\n        // Record data about the error without replacing original event data, then force renormalization\n        event.tags.JSONStringifyError = true;\n        event.extra.JSONStringifyError = err;\n        try {\n            body = JSON.stringify(normalize(event));\n        }\n        catch (newErr) {\n            // At this point even renormalization hasn't worked, meaning something about the event data has gone very wrong.\n            // Time to cut our losses and record only the new error. With luck, even in the problematic cases we're trying to\n            // debug with this hack, we won't ever land here.\n            var innerErr = newErr;\n            body = JSON.stringify({\n                message: 'JSON.stringify error after renormalization',\n                // setting `extra: { innerErr }` here for some reason results in an empty object, so unpack manually\n                extra: { message: innerErr.message, stack: innerErr.stack },\n            });\n        }\n    }\n    var req = {\n        // this is the relevant line of code before the hack was added, to make it easy to undo said hack once we've solved\n        // the mystery\n        // body: JSON.stringify(sdkInfo ? enhanceEventWithSdkInfo(event, api.metadata.sdk) : event),\n        body: body,\n        type: eventType,\n        url: useEnvelope\n            ? getEnvelopeEndpointWithUrlEncodedAuth(api.dsn, api.tunnel)\n            : getStoreEndpointWithUrlEncodedAuth(api.dsn),\n    };\n    // https://develop.sentry.dev/sdk/envelopes/\n    // Since we don't need to manipulate envelopes nor store them, there is no\n    // exported concept of an Envelope with operations including serialization and\n    // deserialization. Instead, we only implement a minimal subset of the spec to\n    // serialize events inline here.\n    if (useEnvelope) {\n        var envelopeHeaders = __assign(__assign({ event_id: event.event_id, sent_at: new Date().toISOString() }, (sdkInfo && { sdk: sdkInfo })), (!!api.tunnel && { dsn: dsnToString(api.dsn) }));\n        var eventItem = [\n            {\n                type: eventType,\n                sample_rates: [{ id: samplingMethod, rate: sampleRate }],\n            },\n            req.body,\n        ];\n        var envelope = createEnvelope(envelopeHeaders, [eventItem]);\n        req.body = serializeEnvelope(envelope);\n    }\n    return req;\n}\n//# sourceMappingURL=request.js.map","import { getCurrentHub } from '@sentry/hub';\nimport { logger } from '@sentry/utils';\nimport { IS_DEBUG_BUILD } from './flags';\n/**\n * Internal function to create a new SDK client instance. The client is\n * installed and then bound to the current scope.\n *\n * @param clientClass The client class to instantiate.\n * @param options Options to pass to the client.\n */\nexport function initAndBind(clientClass, options) {\n    if (options.debug === true) {\n        if (IS_DEBUG_BUILD) {\n            logger.enable();\n        }\n        else {\n            // use `console.warn` rather than `logger.warn` since by non-debug bundles have all `logger.x` statements stripped\n            // eslint-disable-next-line no-console\n            console.warn('[Sentry] Cannot initialize SDK with `debug` option using a non-debug bundle.');\n        }\n    }\n    var hub = getCurrentHub();\n    var scope = hub.getScope();\n    if (scope) {\n        scope.update(options.initialScope);\n    }\n    var client = new clientClass(options);\n    hub.bindClient(client);\n}\n//# sourceMappingURL=sdk.js.map","import { disabledUntil, eventStatusFromHttpCode, getEnvelopeType, isRateLimited, makePromiseBuffer, rejectedSyncPromise, resolvedSyncPromise, serializeEnvelope, updateRateLimits, } from '@sentry/utils';\nexport var ERROR_TRANSPORT_CATEGORY = 'error';\nexport var TRANSACTION_TRANSPORT_CATEGORY = 'transaction';\nexport var ATTACHMENT_TRANSPORT_CATEGORY = 'attachment';\nexport var SESSION_TRANSPORT_CATEGORY = 'session';\nexport var DEFAULT_TRANSPORT_BUFFER_SIZE = 30;\n/**\n * Creates a `NewTransport`\n *\n * @param options\n * @param makeRequest\n */\nexport function createTransport(options, makeRequest, buffer) {\n    if (buffer === void 0) { buffer = makePromiseBuffer(options.bufferSize || DEFAULT_TRANSPORT_BUFFER_SIZE); }\n    var rateLimits = {};\n    var flush = function (timeout) { return buffer.drain(timeout); };\n    function send(envelope) {\n        var envCategory = getEnvelopeType(envelope);\n        var category = envCategory === 'event' ? 'error' : envCategory;\n        var request = {\n            category: category,\n            body: serializeEnvelope(envelope),\n        };\n        // Don't add to buffer if transport is already rate-limited\n        if (isRateLimited(rateLimits, category)) {\n            return rejectedSyncPromise({\n                status: 'rate_limit',\n                reason: getRateLimitReason(rateLimits, category),\n            });\n        }\n        var requestTask = function () {\n            return makeRequest(request).then(function (_a) {\n                var body = _a.body, headers = _a.headers, reason = _a.reason, statusCode = _a.statusCode;\n                var status = eventStatusFromHttpCode(statusCode);\n                if (headers) {\n                    rateLimits = updateRateLimits(rateLimits, headers);\n                }\n                if (status === 'success') {\n                    return resolvedSyncPromise({ status: status, reason: reason });\n                }\n                return rejectedSyncPromise({\n                    status: status,\n                    reason: reason ||\n                        body ||\n                        (status === 'rate_limit' ? getRateLimitReason(rateLimits, category) : 'Unknown transport error'),\n                });\n            });\n        };\n        return buffer.add(requestTask);\n    }\n    return {\n        send: send,\n        flush: flush,\n    };\n}\nfunction getRateLimitReason(rateLimits, category) {\n    return \"Too many \" + category + \" requests, backing off until: \" + new Date(disabledUntil(rateLimits, category)).toISOString();\n}\n//# sourceMappingURL=base.js.map","export var SDK_VERSION = '6.19.7';\n//# sourceMappingURL=version.js.map","/*\n * This file defines flags and constants that can be modified during compile time in order to facilitate tree shaking\n * for users.\n *\n * Debug flags need to be declared in each package individually and must not be imported across package boundaries,\n * because some build tools have trouble tree-shaking imported guards.\n *\n * As a convention, we define debug flags in a `flags.ts` file in the root of a package's `src` folder.\n *\n * Debug flag files will contain \"magic strings\" like `__SENTRY_DEBUG__` that may get replaced with actual values during\n * our, or the user's build process. Take care when introducing new flags - they must not throw if they are not\n * replaced.\n */\n/** Flag that is true for debug builds, false otherwise. */\nexport var IS_DEBUG_BUILD = typeof __SENTRY_DEBUG__ === 'undefined' ? true : __SENTRY_DEBUG__;\n//# sourceMappingURL=flags.js.map","import { dropUndefinedKeys, timestampInSeconds, uuid4 } from '@sentry/utils';\n/**\n * @inheritdoc\n */\nvar Session = /** @class */ (function () {\n    function Session(context) {\n        this.errors = 0;\n        this.sid = uuid4();\n        this.duration = 0;\n        this.status = 'ok';\n        this.init = true;\n        this.ignoreDuration = false;\n        // Both timestamp and started are in seconds since the UNIX epoch.\n        var startingTime = timestampInSeconds();\n        this.timestamp = startingTime;\n        this.started = startingTime;\n        if (context) {\n            this.update(context);\n        }\n    }\n    /** JSDoc */\n    // eslint-disable-next-line complexity\n    Session.prototype.update = function (context) {\n        if (context === void 0) { context = {}; }\n        if (context.user) {\n            if (!this.ipAddress && context.user.ip_address) {\n                this.ipAddress = context.user.ip_address;\n            }\n            if (!this.did && !context.did) {\n                this.did = context.user.id || context.user.email || context.user.username;\n            }\n        }\n        this.timestamp = context.timestamp || timestampInSeconds();\n        if (context.ignoreDuration) {\n            this.ignoreDuration = context.ignoreDuration;\n        }\n        if (context.sid) {\n            // Good enough uuid validation. — Kamil\n            this.sid = context.sid.length === 32 ? context.sid : uuid4();\n        }\n        if (context.init !== undefined) {\n            this.init = context.init;\n        }\n        if (!this.did && context.did) {\n            this.did = \"\" + context.did;\n        }\n        if (typeof context.started === 'number') {\n            this.started = context.started;\n        }\n        if (this.ignoreDuration) {\n            this.duration = undefined;\n        }\n        else if (typeof context.duration === 'number') {\n            this.duration = context.duration;\n        }\n        else {\n            var duration = this.timestamp - this.started;\n            this.duration = duration >= 0 ? duration : 0;\n        }\n        if (context.release) {\n            this.release = context.release;\n        }\n        if (context.environment) {\n            this.environment = context.environment;\n        }\n        if (!this.ipAddress && context.ipAddress) {\n            this.ipAddress = context.ipAddress;\n        }\n        if (!this.userAgent && context.userAgent) {\n            this.userAgent = context.userAgent;\n        }\n        if (typeof context.errors === 'number') {\n            this.errors = context.errors;\n        }\n        if (context.status) {\n            this.status = context.status;\n        }\n    };\n    /** JSDoc */\n    Session.prototype.close = function (status) {\n        if (status) {\n            this.update({ status: status });\n        }\n        else if (this.status === 'ok') {\n            this.update({ status: 'exited' });\n        }\n        else {\n            this.update();\n        }\n    };\n    /** JSDoc */\n    Session.prototype.toJSON = function () {\n        return dropUndefinedKeys({\n            sid: \"\" + this.sid,\n            init: this.init,\n            // Make sure that sec is converted to ms for date constructor\n            started: new Date(this.started * 1000).toISOString(),\n            timestamp: new Date(this.timestamp * 1000).toISOString(),\n            status: this.status,\n            errors: this.errors,\n            did: typeof this.did === 'number' || typeof this.did === 'string' ? \"\" + this.did : undefined,\n            duration: this.duration,\n            attrs: {\n                release: this.release,\n                environment: this.environment,\n                ip_address: this.ipAddress,\n                user_agent: this.userAgent,\n            },\n        });\n    };\n    return Session;\n}());\nexport { Session };\n//# sourceMappingURL=session.js.map","import { __assign, __read, __spread } from \"tslib\";\nimport { consoleSandbox, dateTimestampInSeconds, getGlobalObject, getGlobalSingleton, isNodeEnv, logger, uuid4, } from '@sentry/utils';\nimport { IS_DEBUG_BUILD } from './flags';\nimport { Scope } from './scope';\nimport { Session } from './session';\n/**\n * API compatibility version of this hub.\n *\n * WARNING: This number should only be increased when the global interface\n * changes and new methods are introduced.\n *\n * @hidden\n */\nexport var API_VERSION = 4;\n/**\n * Default maximum number of breadcrumbs added to an event. Can be overwritten\n * with {@link Options.maxBreadcrumbs}.\n */\nvar DEFAULT_BREADCRUMBS = 100;\n/**\n * @inheritDoc\n */\nvar Hub = /** @class */ (function () {\n    /**\n     * Creates a new instance of the hub, will push one {@link Layer} into the\n     * internal stack on creation.\n     *\n     * @param client bound to the hub.\n     * @param scope bound to the hub.\n     * @param version number, higher number means higher priority.\n     */\n    function Hub(client, scope, _version) {\n        if (scope === void 0) { scope = new Scope(); }\n        if (_version === void 0) { _version = API_VERSION; }\n        this._version = _version;\n        /** Is a {@link Layer}[] containing the client and scope */\n        this._stack = [{}];\n        this.getStackTop().scope = scope;\n        if (client) {\n            this.bindClient(client);\n        }\n    }\n    /**\n     * @inheritDoc\n     */\n    Hub.prototype.isOlderThan = function (version) {\n        return this._version < version;\n    };\n    /**\n     * @inheritDoc\n     */\n    Hub.prototype.bindClient = function (client) {\n        var top = this.getStackTop();\n        top.client = client;\n        if (client && client.setupIntegrations) {\n            client.setupIntegrations();\n        }\n    };\n    /**\n     * @inheritDoc\n     */\n    Hub.prototype.pushScope = function () {\n        // We want to clone the content of prev scope\n        var scope = Scope.clone(this.getScope());\n        this.getStack().push({\n            client: this.getClient(),\n            scope: scope,\n        });\n        return scope;\n    };\n    /**\n     * @inheritDoc\n     */\n    Hub.prototype.popScope = function () {\n        if (this.getStack().length <= 1)\n            return false;\n        return !!this.getStack().pop();\n    };\n    /**\n     * @inheritDoc\n     */\n    Hub.prototype.withScope = function (callback) {\n        var scope = this.pushScope();\n        try {\n            callback(scope);\n        }\n        finally {\n            this.popScope();\n        }\n    };\n    /**\n     * @inheritDoc\n     */\n    Hub.prototype.getClient = function () {\n        return this.getStackTop().client;\n    };\n    /** Returns the scope of the top stack. */\n    Hub.prototype.getScope = function () {\n        return this.getStackTop().scope;\n    };\n    /** Returns the scope stack for domains or the process. */\n    Hub.prototype.getStack = function () {\n        return this._stack;\n    };\n    /** Returns the topmost scope layer in the order domain > local > process. */\n    Hub.prototype.getStackTop = function () {\n        return this._stack[this._stack.length - 1];\n    };\n    /**\n     * @inheritDoc\n     */\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any, @typescript-eslint/explicit-module-boundary-types\n    Hub.prototype.captureException = function (exception, hint) {\n        var eventId = (this._lastEventId = hint && hint.event_id ? hint.event_id : uuid4());\n        var finalHint = hint;\n        // If there's no explicit hint provided, mimic the same thing that would happen\n        // in the minimal itself to create a consistent behavior.\n        // We don't do this in the client, as it's the lowest level API, and doing this,\n        // would prevent user from having full control over direct calls.\n        if (!hint) {\n            var syntheticException = void 0;\n            try {\n                throw new Error('Sentry syntheticException');\n            }\n            catch (exception) {\n                syntheticException = exception;\n            }\n            finalHint = {\n                originalException: exception,\n                syntheticException: syntheticException,\n            };\n        }\n        this._invokeClient('captureException', exception, __assign(__assign({}, finalHint), { event_id: eventId }));\n        return eventId;\n    };\n    /**\n     * @inheritDoc\n     */\n    Hub.prototype.captureMessage = function (message, level, hint) {\n        var eventId = (this._lastEventId = hint && hint.event_id ? hint.event_id : uuid4());\n        var finalHint = hint;\n        // If there's no explicit hint provided, mimic the same thing that would happen\n        // in the minimal itself to create a consistent behavior.\n        // We don't do this in the client, as it's the lowest level API, and doing this,\n        // would prevent user from having full control over direct calls.\n        if (!hint) {\n            var syntheticException = void 0;\n            try {\n                throw new Error(message);\n            }\n            catch (exception) {\n                syntheticException = exception;\n            }\n            finalHint = {\n                originalException: message,\n                syntheticException: syntheticException,\n            };\n        }\n        this._invokeClient('captureMessage', message, level, __assign(__assign({}, finalHint), { event_id: eventId }));\n        return eventId;\n    };\n    /**\n     * @inheritDoc\n     */\n    Hub.prototype.captureEvent = function (event, hint) {\n        var eventId = hint && hint.event_id ? hint.event_id : uuid4();\n        if (event.type !== 'transaction') {\n            this._lastEventId = eventId;\n        }\n        this._invokeClient('captureEvent', event, __assign(__assign({}, hint), { event_id: eventId }));\n        return eventId;\n    };\n    /**\n     * @inheritDoc\n     */\n    Hub.prototype.lastEventId = function () {\n        return this._lastEventId;\n    };\n    /**\n     * @inheritDoc\n     */\n    Hub.prototype.addBreadcrumb = function (breadcrumb, hint) {\n        var _a = this.getStackTop(), scope = _a.scope, client = _a.client;\n        if (!scope || !client)\n            return;\n        // eslint-disable-next-line @typescript-eslint/unbound-method\n        var _b = (client.getOptions && client.getOptions()) || {}, _c = _b.beforeBreadcrumb, beforeBreadcrumb = _c === void 0 ? null : _c, _d = _b.maxBreadcrumbs, maxBreadcrumbs = _d === void 0 ? DEFAULT_BREADCRUMBS : _d;\n        if (maxBreadcrumbs <= 0)\n            return;\n        var timestamp = dateTimestampInSeconds();\n        var mergedBreadcrumb = __assign({ timestamp: timestamp }, breadcrumb);\n        var finalBreadcrumb = beforeBreadcrumb\n            ? consoleSandbox(function () { return beforeBreadcrumb(mergedBreadcrumb, hint); })\n            : mergedBreadcrumb;\n        if (finalBreadcrumb === null)\n            return;\n        scope.addBreadcrumb(finalBreadcrumb, maxBreadcrumbs);\n    };\n    /**\n     * @inheritDoc\n     */\n    Hub.prototype.setUser = function (user) {\n        var scope = this.getScope();\n        if (scope)\n            scope.setUser(user);\n    };\n    /**\n     * @inheritDoc\n     */\n    Hub.prototype.setTags = function (tags) {\n        var scope = this.getScope();\n        if (scope)\n            scope.setTags(tags);\n    };\n    /**\n     * @inheritDoc\n     */\n    Hub.prototype.setExtras = function (extras) {\n        var scope = this.getScope();\n        if (scope)\n            scope.setExtras(extras);\n    };\n    /**\n     * @inheritDoc\n     */\n    Hub.prototype.setTag = function (key, value) {\n        var scope = this.getScope();\n        if (scope)\n            scope.setTag(key, value);\n    };\n    /**\n     * @inheritDoc\n     */\n    Hub.prototype.setExtra = function (key, extra) {\n        var scope = this.getScope();\n        if (scope)\n            scope.setExtra(key, extra);\n    };\n    /**\n     * @inheritDoc\n     */\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    Hub.prototype.setContext = function (name, context) {\n        var scope = this.getScope();\n        if (scope)\n            scope.setContext(name, context);\n    };\n    /**\n     * @inheritDoc\n     */\n    Hub.prototype.configureScope = function (callback) {\n        var _a = this.getStackTop(), scope = _a.scope, client = _a.client;\n        if (scope && client) {\n            callback(scope);\n        }\n    };\n    /**\n     * @inheritDoc\n     */\n    Hub.prototype.run = function (callback) {\n        var oldHub = makeMain(this);\n        try {\n            callback(this);\n        }\n        finally {\n            makeMain(oldHub);\n        }\n    };\n    /**\n     * @inheritDoc\n     */\n    Hub.prototype.getIntegration = function (integration) {\n        var client = this.getClient();\n        if (!client)\n            return null;\n        try {\n            return client.getIntegration(integration);\n        }\n        catch (_oO) {\n            IS_DEBUG_BUILD && logger.warn(\"Cannot retrieve integration \" + integration.id + \" from the current Hub\");\n            return null;\n        }\n    };\n    /**\n     * @inheritDoc\n     */\n    Hub.prototype.startSpan = function (context) {\n        return this._callExtensionMethod('startSpan', context);\n    };\n    /**\n     * @inheritDoc\n     */\n    Hub.prototype.startTransaction = function (context, customSamplingContext) {\n        return this._callExtensionMethod('startTransaction', context, customSamplingContext);\n    };\n    /**\n     * @inheritDoc\n     */\n    Hub.prototype.traceHeaders = function () {\n        return this._callExtensionMethod('traceHeaders');\n    };\n    /**\n     * @inheritDoc\n     */\n    Hub.prototype.captureSession = function (endSession) {\n        if (endSession === void 0) { endSession = false; }\n        // both send the update and pull the session from the scope\n        if (endSession) {\n            return this.endSession();\n        }\n        // only send the update\n        this._sendSessionUpdate();\n    };\n    /**\n     * @inheritDoc\n     */\n    Hub.prototype.endSession = function () {\n        var layer = this.getStackTop();\n        var scope = layer && layer.scope;\n        var session = scope && scope.getSession();\n        if (session) {\n            session.close();\n        }\n        this._sendSessionUpdate();\n        // the session is over; take it off of the scope\n        if (scope) {\n            scope.setSession();\n        }\n    };\n    /**\n     * @inheritDoc\n     */\n    Hub.prototype.startSession = function (context) {\n        var _a = this.getStackTop(), scope = _a.scope, client = _a.client;\n        var _b = (client && client.getOptions()) || {}, release = _b.release, environment = _b.environment;\n        // Will fetch userAgent if called from browser sdk\n        var global = getGlobalObject();\n        var userAgent = (global.navigator || {}).userAgent;\n        var session = new Session(__assign(__assign(__assign({ release: release,\n            environment: environment }, (scope && { user: scope.getUser() })), (userAgent && { userAgent: userAgent })), context));\n        if (scope) {\n            // End existing session if there's one\n            var currentSession = scope.getSession && scope.getSession();\n            if (currentSession && currentSession.status === 'ok') {\n                currentSession.update({ status: 'exited' });\n            }\n            this.endSession();\n            // Afterwards we set the new session on the scope\n            scope.setSession(session);\n        }\n        return session;\n    };\n    /**\n     * Sends the current Session on the scope\n     */\n    Hub.prototype._sendSessionUpdate = function () {\n        var _a = this.getStackTop(), scope = _a.scope, client = _a.client;\n        if (!scope)\n            return;\n        var session = scope.getSession && scope.getSession();\n        if (session) {\n            if (client && client.captureSession) {\n                client.captureSession(session);\n            }\n        }\n    };\n    /**\n     * Internal helper function to call a method on the top client if it exists.\n     *\n     * @param method The method to call on the client.\n     * @param args Arguments to pass to the client function.\n     */\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    Hub.prototype._invokeClient = function (method) {\n        var _a;\n        var args = [];\n        for (var _i = 1; _i < arguments.length; _i++) {\n            args[_i - 1] = arguments[_i];\n        }\n        var _b = this.getStackTop(), scope = _b.scope, client = _b.client;\n        if (client && client[method]) {\n            // eslint-disable-next-line @typescript-eslint/no-unsafe-member-access, @typescript-eslint/no-explicit-any\n            (_a = client)[method].apply(_a, __spread(args, [scope]));\n        }\n    };\n    /**\n     * Calls global extension method and binding current instance to the function call\n     */\n    // @ts-ignore Function lacks ending return statement and return type does not include 'undefined'. ts(2366)\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    Hub.prototype._callExtensionMethod = function (method) {\n        var args = [];\n        for (var _i = 1; _i < arguments.length; _i++) {\n            args[_i - 1] = arguments[_i];\n        }\n        var carrier = getMainCarrier();\n        var sentry = carrier.__SENTRY__;\n        if (sentry && sentry.extensions && typeof sentry.extensions[method] === 'function') {\n            return sentry.extensions[method].apply(this, args);\n        }\n        IS_DEBUG_BUILD && logger.warn(\"Extension method \" + method + \" couldn't be found, doing nothing.\");\n    };\n    return Hub;\n}());\nexport { Hub };\n/**\n * Returns the global shim registry.\n *\n * FIXME: This function is problematic, because despite always returning a valid Carrier,\n * it has an optional `__SENTRY__` property, which then in turn requires us to always perform an unnecessary check\n * at the call-site. We always access the carrier through this function, so we can guarantee that `__SENTRY__` is there.\n **/\nexport function getMainCarrier() {\n    var carrier = getGlobalObject();\n    carrier.__SENTRY__ = carrier.__SENTRY__ || {\n        extensions: {},\n        hub: undefined,\n    };\n    return carrier;\n}\n/**\n * Replaces the current main hub with the passed one on the global object\n *\n * @returns The old replaced hub\n */\nexport function makeMain(hub) {\n    var registry = getMainCarrier();\n    var oldHub = getHubFromCarrier(registry);\n    setHubOnCarrier(registry, hub);\n    return oldHub;\n}\n/**\n * Returns the default hub instance.\n *\n * If a hub is already registered in the global carrier but this module\n * contains a more recent version, it replaces the registered version.\n * Otherwise, the currently registered hub will be returned.\n */\nexport function getCurrentHub() {\n    // Get main carrier (global for every environment)\n    var registry = getMainCarrier();\n    // If there's no hub, or its an old API, assign a new one\n    if (!hasHubOnCarrier(registry) || getHubFromCarrier(registry).isOlderThan(API_VERSION)) {\n        setHubOnCarrier(registry, new Hub());\n    }\n    // Prefer domains over global if they are there (applicable only to Node environment)\n    if (isNodeEnv()) {\n        return getHubFromActiveDomain(registry);\n    }\n    // Return hub that lives on a global object\n    return getHubFromCarrier(registry);\n}\n/**\n * Returns the active domain, if one exists\n * @deprecated No longer used; remove in v7\n * @returns The domain, or undefined if there is no active domain\n */\n// eslint-disable-next-line deprecation/deprecation\nexport function getActiveDomain() {\n    IS_DEBUG_BUILD && logger.warn('Function `getActiveDomain` is deprecated and will be removed in a future version.');\n    var sentry = getMainCarrier().__SENTRY__;\n    return sentry && sentry.extensions && sentry.extensions.domain && sentry.extensions.domain.active;\n}\n/**\n * Try to read the hub from an active domain, and fallback to the registry if one doesn't exist\n * @returns discovered hub\n */\nfunction getHubFromActiveDomain(registry) {\n    try {\n        var sentry = getMainCarrier().__SENTRY__;\n        var activeDomain = sentry && sentry.extensions && sentry.extensions.domain && sentry.extensions.domain.active;\n        // If there's no active domain, just return global hub\n        if (!activeDomain) {\n            return getHubFromCarrier(registry);\n        }\n        // If there's no hub on current domain, or it's an old API, assign a new one\n        if (!hasHubOnCarrier(activeDomain) || getHubFromCarrier(activeDomain).isOlderThan(API_VERSION)) {\n            var registryHubTopStack = getHubFromCarrier(registry).getStackTop();\n            setHubOnCarrier(activeDomain, new Hub(registryHubTopStack.client, Scope.clone(registryHubTopStack.scope)));\n        }\n        // Return hub that lives on a domain\n        return getHubFromCarrier(activeDomain);\n    }\n    catch (_Oo) {\n        // Return hub that lives on a global object\n        return getHubFromCarrier(registry);\n    }\n}\n/**\n * This will tell whether a carrier has a hub on it or not\n * @param carrier object\n */\nfunction hasHubOnCarrier(carrier) {\n    return !!(carrier && carrier.__SENTRY__ && carrier.__SENTRY__.hub);\n}\n/**\n * This will create a new {@link Hub} and add to the passed object on\n * __SENTRY__.hub.\n * @param carrier object\n * @hidden\n */\nexport function getHubFromCarrier(carrier) {\n    return getGlobalSingleton('hub', function () { return new Hub(); }, carrier);\n}\n/**\n * This will set passed {@link Hub} on the passed object's __SENTRY__.hub attribute\n * @param carrier object\n * @param hub Hub\n * @returns A boolean indicating success or failure\n */\nexport function setHubOnCarrier(carrier, hub) {\n    if (!carrier)\n        return false;\n    var __SENTRY__ = (carrier.__SENTRY__ = carrier.__SENTRY__ || {});\n    __SENTRY__.hub = hub;\n    return true;\n}\n//# sourceMappingURL=hub.js.map","import { __assign, __read, __spread } from \"tslib\";\nimport { dateTimestampInSeconds, getGlobalSingleton, isPlainObject, isThenable, SyncPromise } from '@sentry/utils';\n/**\n * Absolute maximum number of breadcrumbs added to an event.\n * The `maxBreadcrumbs` option cannot be higher than this value.\n */\nvar MAX_BREADCRUMBS = 100;\n/**\n * Holds additional event information. {@link Scope.applyToEvent} will be\n * called by the client before an event will be sent.\n */\nvar Scope = /** @class */ (function () {\n    function Scope() {\n        /** Flag if notifying is happening. */\n        this._notifyingListeners = false;\n        /** Callback for client to receive scope changes. */\n        this._scopeListeners = [];\n        /** Callback list that will be called after {@link applyToEvent}. */\n        this._eventProcessors = [];\n        /** Array of breadcrumbs. */\n        this._breadcrumbs = [];\n        /** User */\n        this._user = {};\n        /** Tags */\n        this._tags = {};\n        /** Extra */\n        this._extra = {};\n        /** Contexts */\n        this._contexts = {};\n        /**\n         * A place to stash data which is needed at some point in the SDK's event processing pipeline but which shouldn't get\n         * sent to Sentry\n         */\n        this._sdkProcessingMetadata = {};\n    }\n    /**\n     * Inherit values from the parent scope.\n     * @param scope to clone.\n     */\n    Scope.clone = function (scope) {\n        var newScope = new Scope();\n        if (scope) {\n            newScope._breadcrumbs = __spread(scope._breadcrumbs);\n            newScope._tags = __assign({}, scope._tags);\n            newScope._extra = __assign({}, scope._extra);\n            newScope._contexts = __assign({}, scope._contexts);\n            newScope._user = scope._user;\n            newScope._level = scope._level;\n            newScope._span = scope._span;\n            newScope._session = scope._session;\n            newScope._transactionName = scope._transactionName;\n            newScope._fingerprint = scope._fingerprint;\n            newScope._eventProcessors = __spread(scope._eventProcessors);\n            newScope._requestSession = scope._requestSession;\n        }\n        return newScope;\n    };\n    /**\n     * Add internal on change listener. Used for sub SDKs that need to store the scope.\n     * @hidden\n     */\n    Scope.prototype.addScopeListener = function (callback) {\n        this._scopeListeners.push(callback);\n    };\n    /**\n     * @inheritDoc\n     */\n    Scope.prototype.addEventProcessor = function (callback) {\n        this._eventProcessors.push(callback);\n        return this;\n    };\n    /**\n     * @inheritDoc\n     */\n    Scope.prototype.setUser = function (user) {\n        this._user = user || {};\n        if (this._session) {\n            this._session.update({ user: user });\n        }\n        this._notifyScopeListeners();\n        return this;\n    };\n    /**\n     * @inheritDoc\n     */\n    Scope.prototype.getUser = function () {\n        return this._user;\n    };\n    /**\n     * @inheritDoc\n     */\n    Scope.prototype.getRequestSession = function () {\n        return this._requestSession;\n    };\n    /**\n     * @inheritDoc\n     */\n    Scope.prototype.setRequestSession = function (requestSession) {\n        this._requestSession = requestSession;\n        return this;\n    };\n    /**\n     * @inheritDoc\n     */\n    Scope.prototype.setTags = function (tags) {\n        this._tags = __assign(__assign({}, this._tags), tags);\n        this._notifyScopeListeners();\n        return this;\n    };\n    /**\n     * @inheritDoc\n     */\n    Scope.prototype.setTag = function (key, value) {\n        var _a;\n        this._tags = __assign(__assign({}, this._tags), (_a = {}, _a[key] = value, _a));\n        this._notifyScopeListeners();\n        return this;\n    };\n    /**\n     * @inheritDoc\n     */\n    Scope.prototype.setExtras = function (extras) {\n        this._extra = __assign(__assign({}, this._extra), extras);\n        this._notifyScopeListeners();\n        return this;\n    };\n    /**\n     * @inheritDoc\n     */\n    Scope.prototype.setExtra = function (key, extra) {\n        var _a;\n        this._extra = __assign(__assign({}, this._extra), (_a = {}, _a[key] = extra, _a));\n        this._notifyScopeListeners();\n        return this;\n    };\n    /**\n     * @inheritDoc\n     */\n    Scope.prototype.setFingerprint = function (fingerprint) {\n        this._fingerprint = fingerprint;\n        this._notifyScopeListeners();\n        return this;\n    };\n    /**\n     * @inheritDoc\n     */\n    Scope.prototype.setLevel = function (level) {\n        this._level = level;\n        this._notifyScopeListeners();\n        return this;\n    };\n    /**\n     * @inheritDoc\n     */\n    Scope.prototype.setTransactionName = function (name) {\n        this._transactionName = name;\n        this._notifyScopeListeners();\n        return this;\n    };\n    /**\n     * Can be removed in major version.\n     * @deprecated in favor of {@link this.setTransactionName}\n     */\n    Scope.prototype.setTransaction = function (name) {\n        return this.setTransactionName(name);\n    };\n    /**\n     * @inheritDoc\n     */\n    Scope.prototype.setContext = function (key, context) {\n        var _a;\n        if (context === null) {\n            // eslint-disable-next-line @typescript-eslint/no-dynamic-delete\n            delete this._contexts[key];\n        }\n        else {\n            this._contexts = __assign(__assign({}, this._contexts), (_a = {}, _a[key] = context, _a));\n        }\n        this._notifyScopeListeners();\n        return this;\n    };\n    /**\n     * @inheritDoc\n     */\n    Scope.prototype.setSpan = function (span) {\n        this._span = span;\n        this._notifyScopeListeners();\n        return this;\n    };\n    /**\n     * @inheritDoc\n     */\n    Scope.prototype.getSpan = function () {\n        return this._span;\n    };\n    /**\n     * @inheritDoc\n     */\n    Scope.prototype.getTransaction = function () {\n        // Often, this span (if it exists at all) will be a transaction, but it's not guaranteed to be. Regardless, it will\n        // have a pointer to the currently-active transaction.\n        var span = this.getSpan();\n        return span && span.transaction;\n    };\n    /**\n     * @inheritDoc\n     */\n    Scope.prototype.setSession = function (session) {\n        if (!session) {\n            delete this._session;\n        }\n        else {\n            this._session = session;\n        }\n        this._notifyScopeListeners();\n        return this;\n    };\n    /**\n     * @inheritDoc\n     */\n    Scope.prototype.getSession = function () {\n        return this._session;\n    };\n    /**\n     * @inheritDoc\n     */\n    Scope.prototype.update = function (captureContext) {\n        if (!captureContext) {\n            return this;\n        }\n        if (typeof captureContext === 'function') {\n            var updatedScope = captureContext(this);\n            return updatedScope instanceof Scope ? updatedScope : this;\n        }\n        if (captureContext instanceof Scope) {\n            this._tags = __assign(__assign({}, this._tags), captureContext._tags);\n            this._extra = __assign(__assign({}, this._extra), captureContext._extra);\n            this._contexts = __assign(__assign({}, this._contexts), captureContext._contexts);\n            if (captureContext._user && Object.keys(captureContext._user).length) {\n                this._user = captureContext._user;\n            }\n            if (captureContext._level) {\n                this._level = captureContext._level;\n            }\n            if (captureContext._fingerprint) {\n                this._fingerprint = captureContext._fingerprint;\n            }\n            if (captureContext._requestSession) {\n                this._requestSession = captureContext._requestSession;\n            }\n        }\n        else if (isPlainObject(captureContext)) {\n            // eslint-disable-next-line no-param-reassign\n            captureContext = captureContext;\n            this._tags = __assign(__assign({}, this._tags), captureContext.tags);\n            this._extra = __assign(__assign({}, this._extra), captureContext.extra);\n            this._contexts = __assign(__assign({}, this._contexts), captureContext.contexts);\n            if (captureContext.user) {\n                this._user = captureContext.user;\n            }\n            if (captureContext.level) {\n                this._level = captureContext.level;\n            }\n            if (captureContext.fingerprint) {\n                this._fingerprint = captureContext.fingerprint;\n            }\n            if (captureContext.requestSession) {\n                this._requestSession = captureContext.requestSession;\n            }\n        }\n        return this;\n    };\n    /**\n     * @inheritDoc\n     */\n    Scope.prototype.clear = function () {\n        this._breadcrumbs = [];\n        this._tags = {};\n        this._extra = {};\n        this._user = {};\n        this._contexts = {};\n        this._level = undefined;\n        this._transactionName = undefined;\n        this._fingerprint = undefined;\n        this._requestSession = undefined;\n        this._span = undefined;\n        this._session = undefined;\n        this._notifyScopeListeners();\n        return this;\n    };\n    /**\n     * @inheritDoc\n     */\n    Scope.prototype.addBreadcrumb = function (breadcrumb, maxBreadcrumbs) {\n        var maxCrumbs = typeof maxBreadcrumbs === 'number' ? Math.min(maxBreadcrumbs, MAX_BREADCRUMBS) : MAX_BREADCRUMBS;\n        // No data has been changed, so don't notify scope listeners\n        if (maxCrumbs <= 0) {\n            return this;\n        }\n        var mergedBreadcrumb = __assign({ timestamp: dateTimestampInSeconds() }, breadcrumb);\n        this._breadcrumbs = __spread(this._breadcrumbs, [mergedBreadcrumb]).slice(-maxCrumbs);\n        this._notifyScopeListeners();\n        return this;\n    };\n    /**\n     * @inheritDoc\n     */\n    Scope.prototype.clearBreadcrumbs = function () {\n        this._breadcrumbs = [];\n        this._notifyScopeListeners();\n        return this;\n    };\n    /**\n     * Applies the current context and fingerprint to the event.\n     * Note that breadcrumbs will be added by the client.\n     * Also if the event has already breadcrumbs on it, we do not merge them.\n     * @param event Event\n     * @param hint May contain additional information about the original exception.\n     * @hidden\n     */\n    Scope.prototype.applyToEvent = function (event, hint) {\n        if (this._extra && Object.keys(this._extra).length) {\n            event.extra = __assign(__assign({}, this._extra), event.extra);\n        }\n        if (this._tags && Object.keys(this._tags).length) {\n            event.tags = __assign(__assign({}, this._tags), event.tags);\n        }\n        if (this._user && Object.keys(this._user).length) {\n            event.user = __assign(__assign({}, this._user), event.user);\n        }\n        if (this._contexts && Object.keys(this._contexts).length) {\n            event.contexts = __assign(__assign({}, this._contexts), event.contexts);\n        }\n        if (this._level) {\n            event.level = this._level;\n        }\n        if (this._transactionName) {\n            event.transaction = this._transactionName;\n        }\n        // We want to set the trace context for normal events only if there isn't already\n        // a trace context on the event. There is a product feature in place where we link\n        // errors with transaction and it relies on that.\n        if (this._span) {\n            event.contexts = __assign({ trace: this._span.getTraceContext() }, event.contexts);\n            var transactionName = this._span.transaction && this._span.transaction.name;\n            if (transactionName) {\n                event.tags = __assign({ transaction: transactionName }, event.tags);\n            }\n        }\n        this._applyFingerprint(event);\n        event.breadcrumbs = __spread((event.breadcrumbs || []), this._breadcrumbs);\n        event.breadcrumbs = event.breadcrumbs.length > 0 ? event.breadcrumbs : undefined;\n        event.sdkProcessingMetadata = this._sdkProcessingMetadata;\n        return this._notifyEventProcessors(__spread(getGlobalEventProcessors(), this._eventProcessors), event, hint);\n    };\n    /**\n     * Add data which will be accessible during event processing but won't get sent to Sentry\n     */\n    Scope.prototype.setSDKProcessingMetadata = function (newData) {\n        this._sdkProcessingMetadata = __assign(__assign({}, this._sdkProcessingMetadata), newData);\n        return this;\n    };\n    /**\n     * This will be called after {@link applyToEvent} is finished.\n     */\n    Scope.prototype._notifyEventProcessors = function (processors, event, hint, index) {\n        var _this = this;\n        if (index === void 0) { index = 0; }\n        return new SyncPromise(function (resolve, reject) {\n            var processor = processors[index];\n            if (event === null || typeof processor !== 'function') {\n                resolve(event);\n            }\n            else {\n                var result = processor(__assign({}, event), hint);\n                if (isThenable(result)) {\n                    void result\n                        .then(function (final) { return _this._notifyEventProcessors(processors, final, hint, index + 1).then(resolve); })\n                        .then(null, reject);\n                }\n                else {\n                    void _this._notifyEventProcessors(processors, result, hint, index + 1)\n                        .then(resolve)\n                        .then(null, reject);\n                }\n            }\n        });\n    };\n    /**\n     * This will be called on every set call.\n     */\n    Scope.prototype._notifyScopeListeners = function () {\n        var _this = this;\n        // We need this check for this._notifyingListeners to be able to work on scope during updates\n        // If this check is not here we'll produce endless recursion when something is done with the scope\n        // during the callback.\n        if (!this._notifyingListeners) {\n            this._notifyingListeners = true;\n            this._scopeListeners.forEach(function (callback) {\n                callback(_this);\n            });\n            this._notifyingListeners = false;\n        }\n    };\n    /**\n     * Applies fingerprint from the scope to the event if there's one,\n     * uses message if there's one instead or get rid of empty fingerprint\n     */\n    Scope.prototype._applyFingerprint = function (event) {\n        // Make sure it's an array first and we actually have something in place\n        event.fingerprint = event.fingerprint\n            ? Array.isArray(event.fingerprint)\n                ? event.fingerprint\n                : [event.fingerprint]\n            : [];\n        // If we have something on the scope, then merge it with event\n        if (this._fingerprint) {\n            event.fingerprint = event.fingerprint.concat(this._fingerprint);\n        }\n        // If we have no data at all, remove empty array default\n        if (event.fingerprint && !event.fingerprint.length) {\n            delete event.fingerprint;\n        }\n    };\n    return Scope;\n}());\nexport { Scope };\n/**\n * Returns the global event processors.\n */\nfunction getGlobalEventProcessors() {\n    return getGlobalSingleton('globalEventProcessors', function () { return []; });\n}\n/**\n * Add a EventProcessor to be kept globally.\n * @param callback EventProcessor to add\n */\nexport function addGlobalEventProcessor(callback) {\n    getGlobalEventProcessors().push(callback);\n}\n//# sourceMappingURL=scope.js.map","import { __assign, __read, __spread } from \"tslib\";\nimport { getCurrentHub } from '@sentry/hub';\n/**\n * This calls a function on the current hub.\n * @param method function to call on hub.\n * @param args to pass to function.\n */\n// eslint-disable-next-line @typescript-eslint/no-explicit-any\nfunction callOnHub(method) {\n    var args = [];\n    for (var _i = 1; _i < arguments.length; _i++) {\n        args[_i - 1] = arguments[_i];\n    }\n    var hub = getCurrentHub();\n    if (hub && hub[method]) {\n        // eslint-disable-next-line @typescript-eslint/no-explicit-any\n        return hub[method].apply(hub, __spread(args));\n    }\n    throw new Error(\"No hub defined or \" + method + \" was not found on the hub, please open a bug report.\");\n}\n/**\n * Captures an exception event and sends it to Sentry.\n *\n * @param exception An exception-like object.\n * @returns The generated eventId.\n */\n// eslint-disable-next-line @typescript-eslint/no-explicit-any, @typescript-eslint/explicit-module-boundary-types\nexport function captureException(exception, captureContext) {\n    var syntheticException = new Error('Sentry syntheticException');\n    return callOnHub('captureException', exception, {\n        captureContext: captureContext,\n        originalException: exception,\n        syntheticException: syntheticException,\n    });\n}\n/**\n * Captures a message event and sends it to Sentry.\n *\n * @param message The message to send to Sentry.\n * @param Severity Define the level of the message.\n * @returns The generated eventId.\n */\nexport function captureMessage(message, captureContext) {\n    var syntheticException = new Error(message);\n    // This is necessary to provide explicit scopes upgrade, without changing the original\n    // arity of the `captureMessage(message, level)` method.\n    var level = typeof captureContext === 'string' ? captureContext : undefined;\n    var context = typeof captureContext !== 'string' ? { captureContext: captureContext } : undefined;\n    return callOnHub('captureMessage', message, level, __assign({ originalException: message, syntheticException: syntheticException }, context));\n}\n/**\n * Captures a manually created event and sends it to Sentry.\n *\n * @param event The event to send to Sentry.\n * @returns The generated eventId.\n */\nexport function captureEvent(event) {\n    return callOnHub('captureEvent', event);\n}\n/**\n * Callback to set context information onto the scope.\n * @param callback Callback function that receives Scope.\n */\nexport function configureScope(callback) {\n    callOnHub('configureScope', callback);\n}\n/**\n * Records a new breadcrumb which will be attached to future events.\n *\n * Breadcrumbs will be added to subsequent events to provide more context on\n * user's actions prior to an error or crash.\n *\n * @param breadcrumb The breadcrumb to record.\n */\nexport function addBreadcrumb(breadcrumb) {\n    callOnHub('addBreadcrumb', breadcrumb);\n}\n/**\n * Sets context data with the given name.\n * @param name of the context\n * @param context Any kind of data. This data will be normalized.\n */\n// eslint-disable-next-line @typescript-eslint/no-explicit-any\nexport function setContext(name, context) {\n    callOnHub('setContext', name, context);\n}\n/**\n * Set an object that will be merged sent as extra data with the event.\n * @param extras Extras object to merge into current context.\n */\nexport function setExtras(extras) {\n    callOnHub('setExtras', extras);\n}\n/**\n * Set an object that will be merged sent as tags data with the event.\n * @param tags Tags context object to merge into current context.\n */\nexport function setTags(tags) {\n    callOnHub('setTags', tags);\n}\n/**\n * Set key:value that will be sent as extra data with the event.\n * @param key String of extra\n * @param extra Any kind of data. This data will be normalized.\n */\nexport function setExtra(key, extra) {\n    callOnHub('setExtra', key, extra);\n}\n/**\n * Set key:value that will be sent as tags data with the event.\n *\n * Can also be used to unset a tag, by passing `undefined`.\n *\n * @param key String key of tag\n * @param value Value of tag\n */\nexport function setTag(key, value) {\n    callOnHub('setTag', key, value);\n}\n/**\n * Updates user context information for future events.\n *\n * @param user User context object to be set in the current context. Pass `null` to unset the user.\n */\nexport function setUser(user) {\n    callOnHub('setUser', user);\n}\n/**\n * Creates a new scope with and executes the given operation within.\n * The scope is automatically removed once the operation\n * finishes or throws.\n *\n * This is essentially a convenience function for:\n *\n *     pushScope();\n *     callback();\n *     popScope();\n *\n * @param callback that will be enclosed into push/popScope.\n */\nexport function withScope(callback) {\n    callOnHub('withScope', callback);\n}\n/**\n * Calls a function on the latest client. Use this with caution, it's meant as\n * in \"internal\" helper so we don't need to expose every possible function in\n * the shim. It is not guaranteed that the client actually implements the\n * function.\n *\n * @param method The method to call on the client/client.\n * @param args Arguments to pass to the client/fontend.\n * @hidden\n */\n// eslint-disable-next-line @typescript-eslint/no-explicit-any\nexport function _callOnClient(method) {\n    var args = [];\n    for (var _i = 1; _i < arguments.length; _i++) {\n        args[_i - 1] = arguments[_i];\n    }\n    callOnHub.apply(void 0, __spread(['_invokeClient', method], args));\n}\n/**\n * Starts a new `Transaction` and returns it. This is the entry point to manual tracing instrumentation.\n *\n * A tree structure can be built by adding child spans to the transaction, and child spans to other spans. To start a\n * new child span within the transaction or any span, call the respective `.startChild()` method.\n *\n * Every child span must be finished before the transaction is finished, otherwise the unfinished spans are discarded.\n *\n * The transaction must be finished with a call to its `.finish()` method, at which point the transaction with all its\n * finished child spans will be sent to Sentry.\n *\n * @param context Properties of the new `Transaction`.\n * @param customSamplingContext Information given to the transaction sampling function (along with context-dependent\n * default values). See {@link Options.tracesSampler}.\n *\n * @returns The transaction which was just started\n */\nexport function startTransaction(context, customSamplingContext) {\n    return callOnHub('startTransaction', __assign({}, context), customSamplingContext);\n}\n//# sourceMappingURL=index.js.map","import { getGlobalObject, logger } from '@sentry/utils';\nimport { FINISH_REASON_TAG, IDLE_TRANSACTION_FINISH_REASONS } from '../constants';\nimport { IS_DEBUG_BUILD } from '../flags';\nimport { getActiveTransaction } from '../utils';\nvar global = getGlobalObject();\n/**\n * Add a listener that cancels and finishes a transaction when the global\n * document is hidden.\n */\nexport function registerBackgroundTabDetection() {\n    if (global && global.document) {\n        global.document.addEventListener('visibilitychange', function () {\n            var activeTransaction = getActiveTransaction();\n            if (global.document.hidden && activeTransaction) {\n                var statusType = 'cancelled';\n                IS_DEBUG_BUILD &&\n                    logger.log(\"[Tracing] Transaction: \" + statusType + \" -> since tab moved to the background, op: \" + activeTransaction.op);\n                // We should not set status if it is already set, this prevent important statuses like\n                // error or data loss from being overwritten on transaction.\n                if (!activeTransaction.status) {\n                    activeTransaction.setStatus(statusType);\n                }\n                activeTransaction.setTag('visibilitychange', 'document.hidden');\n                activeTransaction.setTag(FINISH_REASON_TAG, IDLE_TRANSACTION_FINISH_REASONS[2]);\n                activeTransaction.finish();\n            }\n        });\n    }\n    else {\n        IS_DEBUG_BUILD && logger.warn('[Tracing] Could not set up background tab detection due to lack of global document');\n    }\n}\n//# sourceMappingURL=backgroundtab.js.map","/*\n * Copyright 2020 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nimport { bindReporter } from './lib/bindReporter';\nimport { initMetric } from './lib/initMetric';\nimport { observe } from './lib/observe';\nimport { onHidden } from './lib/onHidden';\nexport var getCLS = function (onReport, reportAllChanges) {\n    var metric = initMetric('CLS', 0);\n    var report;\n    var sessionValue = 0;\n    var sessionEntries = [];\n    var entryHandler = function (entry) {\n        // Only count layout shifts without recent user input.\n        // TODO: Figure out why entry can be undefined\n        if (entry && !entry.hadRecentInput) {\n            var firstSessionEntry = sessionEntries[0];\n            var lastSessionEntry = sessionEntries[sessionEntries.length - 1];\n            // If the entry occurred less than 1 second after the previous entry and\n            // less than 5 seconds after the first entry in the session, include the\n            // entry in the current session. Otherwise, start a new session.\n            if (sessionValue &&\n                sessionEntries.length !== 0 &&\n                entry.startTime - lastSessionEntry.startTime < 1000 &&\n                entry.startTime - firstSessionEntry.startTime < 5000) {\n                sessionValue += entry.value;\n                sessionEntries.push(entry);\n            }\n            else {\n                sessionValue = entry.value;\n                sessionEntries = [entry];\n            }\n            // If the current session value is larger than the current CLS value,\n            // update CLS and the entries contributing to it.\n            if (sessionValue > metric.value) {\n                metric.value = sessionValue;\n                metric.entries = sessionEntries;\n                if (report) {\n                    report();\n                }\n            }\n        }\n    };\n    var po = observe('layout-shift', entryHandler);\n    if (po) {\n        report = bindReporter(onReport, metric, reportAllChanges);\n        onHidden(function () {\n            po.takeRecords().map(entryHandler);\n            report(true);\n        });\n    }\n};\n//# sourceMappingURL=getCLS.js.map","/*\n * Copyright 2020 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nimport { bindReporter } from './lib/bindReporter';\nimport { getVisibilityWatcher } from './lib/getVisibilityWatcher';\nimport { initMetric } from './lib/initMetric';\nimport { observe } from './lib/observe';\nimport { onHidden } from './lib/onHidden';\nexport var getFID = function (onReport, reportAllChanges) {\n    var visibilityWatcher = getVisibilityWatcher();\n    var metric = initMetric('FID');\n    var report;\n    var entryHandler = function (entry) {\n        // Only report if the page wasn't hidden prior to the first input.\n        if (report && entry.startTime < visibilityWatcher.firstHiddenTime) {\n            metric.value = entry.processingStart - entry.startTime;\n            metric.entries.push(entry);\n            report(true);\n        }\n    };\n    var po = observe('first-input', entryHandler);\n    if (po) {\n        report = bindReporter(onReport, metric, reportAllChanges);\n        onHidden(function () {\n            po.takeRecords().map(entryHandler);\n            po.disconnect();\n        }, true);\n    }\n};\n//# sourceMappingURL=getFID.js.map","/*\n * Copyright 2020 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nimport { bindReporter } from './lib/bindReporter';\nimport { getVisibilityWatcher } from './lib/getVisibilityWatcher';\nimport { initMetric } from './lib/initMetric';\nimport { observe } from './lib/observe';\nimport { onHidden } from './lib/onHidden';\nvar reportedMetricIDs = {};\nexport var getLCP = function (onReport, reportAllChanges) {\n    var visibilityWatcher = getVisibilityWatcher();\n    var metric = initMetric('LCP');\n    var report;\n    var entryHandler = function (entry) {\n        // The startTime attribute returns the value of the renderTime if it is not 0,\n        // and the value of the loadTime otherwise.\n        var value = entry.startTime;\n        // If the page was hidden prior to paint time of the entry,\n        // ignore it and mark the metric as final, otherwise add the entry.\n        if (value < visibilityWatcher.firstHiddenTime) {\n            metric.value = value;\n            metric.entries.push(entry);\n        }\n        if (report) {\n            report();\n        }\n    };\n    var po = observe('largest-contentful-paint', entryHandler);\n    if (po) {\n        report = bindReporter(onReport, metric, reportAllChanges);\n        var stopListening_1 = function () {\n            if (!reportedMetricIDs[metric.id]) {\n                po.takeRecords().map(entryHandler);\n                po.disconnect();\n                reportedMetricIDs[metric.id] = true;\n                report(true);\n            }\n        };\n        // Stop listening after input. Note: while scrolling is an input that\n        // stop LCP observation, it's unreliable since it can be programmatically\n        // generated. See: https://github.com/GoogleChrome/web-vitals/issues/75\n        ['keydown', 'click'].forEach(function (type) {\n            addEventListener(type, stopListening_1, { once: true, capture: true });\n        });\n        onHidden(stopListening_1, true);\n    }\n};\n//# sourceMappingURL=getLCP.js.map","import { __assign, __rest } from \"tslib\";\nimport { browserPerformanceTimeOrigin, getGlobalObject, htmlTreeAsString, isNodeEnv, logger } from '@sentry/utils';\nimport { IS_DEBUG_BUILD } from '../flags';\nimport { msToSec } from '../utils';\nimport { getCLS } from './web-vitals/getCLS';\nimport { getFID } from './web-vitals/getFID';\nimport { getLCP } from './web-vitals/getLCP';\nimport { getVisibilityWatcher } from './web-vitals/lib/getVisibilityWatcher';\nvar global = getGlobalObject();\n/** Class tracking metrics  */\nvar MetricsInstrumentation = /** @class */ (function () {\n    function MetricsInstrumentation(_reportAllChanges) {\n        if (_reportAllChanges === void 0) { _reportAllChanges = false; }\n        this._reportAllChanges = _reportAllChanges;\n        this._measurements = {};\n        this._performanceCursor = 0;\n        if (!isNodeEnv() && global && global.performance && global.document) {\n            if (global.performance.mark) {\n                global.performance.mark('sentry-tracing-init');\n            }\n            this._trackCLS();\n            this._trackLCP();\n            this._trackFID();\n        }\n    }\n    /** Add performance related spans to a transaction */\n    MetricsInstrumentation.prototype.addPerformanceEntries = function (transaction) {\n        var _this = this;\n        if (!global || !global.performance || !global.performance.getEntries || !browserPerformanceTimeOrigin) {\n            // Gatekeeper if performance API not available\n            return;\n        }\n        IS_DEBUG_BUILD && logger.log('[Tracing] Adding & adjusting spans using Performance API');\n        var timeOrigin = msToSec(browserPerformanceTimeOrigin);\n        var responseStartTimestamp;\n        var requestStartTimestamp;\n        global.performance\n            .getEntries()\n            .slice(this._performanceCursor)\n            .forEach(function (entry) {\n            var startTime = msToSec(entry.startTime);\n            var duration = msToSec(entry.duration);\n            if (transaction.op === 'navigation' && timeOrigin + startTime < transaction.startTimestamp) {\n                return;\n            }\n            switch (entry.entryType) {\n                case 'navigation': {\n                    addNavigationSpans(transaction, entry, timeOrigin);\n                    responseStartTimestamp = timeOrigin + msToSec(entry.responseStart);\n                    requestStartTimestamp = timeOrigin + msToSec(entry.requestStart);\n                    break;\n                }\n                case 'mark':\n                case 'paint':\n                case 'measure': {\n                    var startTimestamp = addMeasureSpans(transaction, entry, startTime, duration, timeOrigin);\n                    // capture web vitals\n                    var firstHidden = getVisibilityWatcher();\n                    // Only report if the page wasn't hidden prior to the web vital.\n                    var shouldRecord = entry.startTime < firstHidden.firstHiddenTime;\n                    if (entry.name === 'first-paint' && shouldRecord) {\n                        IS_DEBUG_BUILD && logger.log('[Measurements] Adding FP');\n                        _this._measurements['fp'] = { value: entry.startTime };\n                        _this._measurements['mark.fp'] = { value: startTimestamp };\n                    }\n                    if (entry.name === 'first-contentful-paint' && shouldRecord) {\n                        IS_DEBUG_BUILD && logger.log('[Measurements] Adding FCP');\n                        _this._measurements['fcp'] = { value: entry.startTime };\n                        _this._measurements['mark.fcp'] = { value: startTimestamp };\n                    }\n                    break;\n                }\n                case 'resource': {\n                    var resourceName = entry.name.replace(global.location.origin, '');\n                    addResourceSpans(transaction, entry, resourceName, startTime, duration, timeOrigin);\n                    break;\n                }\n                default:\n                // Ignore other entry types.\n            }\n        });\n        this._performanceCursor = Math.max(performance.getEntries().length - 1, 0);\n        this._trackNavigator(transaction);\n        // Measurements are only available for pageload transactions\n        if (transaction.op === 'pageload') {\n            // normalize applicable web vital values to be relative to transaction.startTimestamp\n            var timeOrigin_1 = msToSec(browserPerformanceTimeOrigin);\n            // Generate TTFB (Time to First Byte), which measured as the time between the beginning of the transaction and the\n            // start of the response in milliseconds\n            if (typeof responseStartTimestamp === 'number') {\n                IS_DEBUG_BUILD && logger.log('[Measurements] Adding TTFB');\n                this._measurements['ttfb'] = { value: (responseStartTimestamp - transaction.startTimestamp) * 1000 };\n                if (typeof requestStartTimestamp === 'number' && requestStartTimestamp <= responseStartTimestamp) {\n                    // Capture the time spent making the request and receiving the first byte of the response.\n                    // This is the time between the start of the request and the start of the response in milliseconds.\n                    this._measurements['ttfb.requestTime'] = { value: (responseStartTimestamp - requestStartTimestamp) * 1000 };\n                }\n            }\n            ['fcp', 'fp', 'lcp'].forEach(function (name) {\n                if (!_this._measurements[name] || timeOrigin_1 >= transaction.startTimestamp) {\n                    return;\n                }\n                // The web vitals, fcp, fp, lcp, and ttfb, all measure relative to timeOrigin.\n                // Unfortunately, timeOrigin is not captured within the transaction span data, so these web vitals will need\n                // to be adjusted to be relative to transaction.startTimestamp.\n                var oldValue = _this._measurements[name].value;\n                var measurementTimestamp = timeOrigin_1 + msToSec(oldValue);\n                // normalizedValue should be in milliseconds\n                var normalizedValue = Math.abs((measurementTimestamp - transaction.startTimestamp) * 1000);\n                var delta = normalizedValue - oldValue;\n                IS_DEBUG_BUILD &&\n                    logger.log(\"[Measurements] Normalized \" + name + \" from \" + oldValue + \" to \" + normalizedValue + \" (\" + delta + \")\");\n                _this._measurements[name].value = normalizedValue;\n            });\n            if (this._measurements['mark.fid'] && this._measurements['fid']) {\n                // create span for FID\n                _startChild(transaction, {\n                    description: 'first input delay',\n                    endTimestamp: this._measurements['mark.fid'].value + msToSec(this._measurements['fid'].value),\n                    op: 'web.vitals',\n                    startTimestamp: this._measurements['mark.fid'].value,\n                });\n            }\n            // If FCP is not recorded we should not record the cls value\n            // according to the new definition of CLS.\n            if (!('fcp' in this._measurements)) {\n                delete this._measurements.cls;\n            }\n            transaction.setMeasurements(this._measurements);\n            tagMetricInfo(transaction, this._lcpEntry, this._clsEntry);\n            transaction.setTag('sentry_reportAllChanges', this._reportAllChanges);\n        }\n    };\n    /**\n     * Capture the information of the user agent.\n     */\n    MetricsInstrumentation.prototype._trackNavigator = function (transaction) {\n        var navigator = global.navigator;\n        if (!navigator) {\n            return;\n        }\n        // track network connectivity\n        var connection = navigator.connection;\n        if (connection) {\n            if (connection.effectiveType) {\n                transaction.setTag('effectiveConnectionType', connection.effectiveType);\n            }\n            if (connection.type) {\n                transaction.setTag('connectionType', connection.type);\n            }\n            if (isMeasurementValue(connection.rtt)) {\n                this._measurements['connection.rtt'] = { value: connection.rtt };\n            }\n            if (isMeasurementValue(connection.downlink)) {\n                this._measurements['connection.downlink'] = { value: connection.downlink };\n            }\n        }\n        if (isMeasurementValue(navigator.deviceMemory)) {\n            transaction.setTag('deviceMemory', String(navigator.deviceMemory));\n        }\n        if (isMeasurementValue(navigator.hardwareConcurrency)) {\n            transaction.setTag('hardwareConcurrency', String(navigator.hardwareConcurrency));\n        }\n    };\n    /** Starts tracking the Cumulative Layout Shift on the current page. */\n    MetricsInstrumentation.prototype._trackCLS = function () {\n        var _this = this;\n        // See:\n        // https://web.dev/evolving-cls/\n        // https://web.dev/cls-web-tooling/\n        getCLS(function (metric) {\n            var entry = metric.entries.pop();\n            if (!entry) {\n                return;\n            }\n            IS_DEBUG_BUILD && logger.log('[Measurements] Adding CLS');\n            _this._measurements['cls'] = { value: metric.value };\n            _this._clsEntry = entry;\n        });\n    };\n    /** Starts tracking the Largest Contentful Paint on the current page. */\n    MetricsInstrumentation.prototype._trackLCP = function () {\n        var _this = this;\n        getLCP(function (metric) {\n            var entry = metric.entries.pop();\n            if (!entry) {\n                return;\n            }\n            var timeOrigin = msToSec(browserPerformanceTimeOrigin);\n            var startTime = msToSec(entry.startTime);\n            IS_DEBUG_BUILD && logger.log('[Measurements] Adding LCP');\n            _this._measurements['lcp'] = { value: metric.value };\n            _this._measurements['mark.lcp'] = { value: timeOrigin + startTime };\n            _this._lcpEntry = entry;\n        }, this._reportAllChanges);\n    };\n    /** Starts tracking the First Input Delay on the current page. */\n    MetricsInstrumentation.prototype._trackFID = function () {\n        var _this = this;\n        getFID(function (metric) {\n            var entry = metric.entries.pop();\n            if (!entry) {\n                return;\n            }\n            var timeOrigin = msToSec(browserPerformanceTimeOrigin);\n            var startTime = msToSec(entry.startTime);\n            IS_DEBUG_BUILD && logger.log('[Measurements] Adding FID');\n            _this._measurements['fid'] = { value: metric.value };\n            _this._measurements['mark.fid'] = { value: timeOrigin + startTime };\n        });\n    };\n    return MetricsInstrumentation;\n}());\nexport { MetricsInstrumentation };\n/** Instrument navigation entries */\nfunction addNavigationSpans(transaction, entry, timeOrigin) {\n    ['unloadEvent', 'redirect', 'domContentLoadedEvent', 'loadEvent', 'connect'].forEach(function (event) {\n        addPerformanceNavigationTiming(transaction, entry, event, timeOrigin);\n    });\n    addPerformanceNavigationTiming(transaction, entry, 'secureConnection', timeOrigin, 'TLS/SSL', 'connectEnd');\n    addPerformanceNavigationTiming(transaction, entry, 'fetch', timeOrigin, 'cache', 'domainLookupStart');\n    addPerformanceNavigationTiming(transaction, entry, 'domainLookup', timeOrigin, 'DNS');\n    addRequest(transaction, entry, timeOrigin);\n}\n/** Create measure related spans */\nfunction addMeasureSpans(transaction, entry, startTime, duration, timeOrigin) {\n    var measureStartTimestamp = timeOrigin + startTime;\n    var measureEndTimestamp = measureStartTimestamp + duration;\n    _startChild(transaction, {\n        description: entry.name,\n        endTimestamp: measureEndTimestamp,\n        op: entry.entryType,\n        startTimestamp: measureStartTimestamp,\n    });\n    return measureStartTimestamp;\n}\n/** Create resource-related spans */\nexport function addResourceSpans(transaction, entry, resourceName, startTime, duration, timeOrigin) {\n    // we already instrument based on fetch and xhr, so we don't need to\n    // duplicate spans here.\n    if (entry.initiatorType === 'xmlhttprequest' || entry.initiatorType === 'fetch') {\n        return;\n    }\n    var data = {};\n    if ('transferSize' in entry) {\n        data['Transfer Size'] = entry.transferSize;\n    }\n    if ('encodedBodySize' in entry) {\n        data['Encoded Body Size'] = entry.encodedBodySize;\n    }\n    if ('decodedBodySize' in entry) {\n        data['Decoded Body Size'] = entry.decodedBodySize;\n    }\n    var startTimestamp = timeOrigin + startTime;\n    var endTimestamp = startTimestamp + duration;\n    _startChild(transaction, {\n        description: resourceName,\n        endTimestamp: endTimestamp,\n        op: entry.initiatorType ? \"resource.\" + entry.initiatorType : 'resource',\n        startTimestamp: startTimestamp,\n        data: data,\n    });\n}\n/** Create performance navigation related spans */\nfunction addPerformanceNavigationTiming(transaction, entry, event, timeOrigin, description, eventEnd) {\n    var end = eventEnd ? entry[eventEnd] : entry[event + \"End\"];\n    var start = entry[event + \"Start\"];\n    if (!start || !end) {\n        return;\n    }\n    _startChild(transaction, {\n        op: 'browser',\n        description: (description !== null && description !== void 0 ? description : event),\n        startTimestamp: timeOrigin + msToSec(start),\n        endTimestamp: timeOrigin + msToSec(end),\n    });\n}\n/** Create request and response related spans */\nfunction addRequest(transaction, entry, timeOrigin) {\n    _startChild(transaction, {\n        op: 'browser',\n        description: 'request',\n        startTimestamp: timeOrigin + msToSec(entry.requestStart),\n        endTimestamp: timeOrigin + msToSec(entry.responseEnd),\n    });\n    _startChild(transaction, {\n        op: 'browser',\n        description: 'response',\n        startTimestamp: timeOrigin + msToSec(entry.responseStart),\n        endTimestamp: timeOrigin + msToSec(entry.responseEnd),\n    });\n}\n/**\n * Helper function to start child on transactions. This function will make sure that the transaction will\n * use the start timestamp of the created child span if it is earlier than the transactions actual\n * start timestamp.\n */\nexport function _startChild(transaction, _a) {\n    var startTimestamp = _a.startTimestamp, ctx = __rest(_a, [\"startTimestamp\"]);\n    if (startTimestamp && transaction.startTimestamp > startTimestamp) {\n        transaction.startTimestamp = startTimestamp;\n    }\n    return transaction.startChild(__assign({ startTimestamp: startTimestamp }, ctx));\n}\n/**\n * Checks if a given value is a valid measurement value.\n */\nfunction isMeasurementValue(value) {\n    return typeof value === 'number' && isFinite(value);\n}\n/** Add LCP / CLS data to transaction to allow debugging */\nfunction tagMetricInfo(transaction, lcpEntry, clsEntry) {\n    if (lcpEntry) {\n        IS_DEBUG_BUILD && logger.log('[Measurements] Adding LCP Data');\n        // Capture Properties of the LCP element that contributes to the LCP.\n        if (lcpEntry.element) {\n            transaction.setTag('lcp.element', htmlTreeAsString(lcpEntry.element));\n        }\n        if (lcpEntry.id) {\n            transaction.setTag('lcp.id', lcpEntry.id);\n        }\n        if (lcpEntry.url) {\n            // Trim URL to the first 200 characters.\n            transaction.setTag('lcp.url', lcpEntry.url.trim().slice(0, 200));\n        }\n        transaction.setTag('lcp.size', lcpEntry.size);\n    }\n    // See: https://developer.mozilla.org/en-US/docs/Web/API/LayoutShift\n    if (clsEntry && clsEntry.sources) {\n        IS_DEBUG_BUILD && logger.log('[Measurements] Adding CLS Data');\n        clsEntry.sources.forEach(function (source, index) {\n            return transaction.setTag(\"cls.source.\" + (index + 1), htmlTreeAsString(source.node));\n        });\n    }\n}\n//# sourceMappingURL=metrics.js.map","import { __assign, __read, __spread } from \"tslib\";\nimport { addInstrumentationHandler, isInstanceOf, isMatchingPattern } from '@sentry/utils';\nimport { getActiveTransaction, hasTracingEnabled } from '../utils';\nexport var DEFAULT_TRACING_ORIGINS = ['localhost', /^\\//];\nexport var defaultRequestInstrumentationOptions = {\n    traceFetch: true,\n    traceXHR: true,\n    tracingOrigins: DEFAULT_TRACING_ORIGINS,\n};\n/** Registers span creators for xhr and fetch requests  */\nexport function instrumentOutgoingRequests(_options) {\n    // eslint-disable-next-line @typescript-eslint/unbound-method\n    var _a = __assign(__assign({}, defaultRequestInstrumentationOptions), _options), traceFetch = _a.traceFetch, traceXHR = _a.traceXHR, tracingOrigins = _a.tracingOrigins, shouldCreateSpanForRequest = _a.shouldCreateSpanForRequest;\n    // We should cache url -> decision so that we don't have to compute\n    // regexp everytime we create a request.\n    var urlMap = {};\n    var defaultShouldCreateSpan = function (url) {\n        if (urlMap[url]) {\n            return urlMap[url];\n        }\n        var origins = tracingOrigins;\n        urlMap[url] =\n            origins.some(function (origin) { return isMatchingPattern(url, origin); }) &&\n                !isMatchingPattern(url, 'sentry_key');\n        return urlMap[url];\n    };\n    // We want that our users don't have to re-implement shouldCreateSpanForRequest themselves\n    // That's why we filter out already unwanted Spans from tracingOrigins\n    var shouldCreateSpan = defaultShouldCreateSpan;\n    if (typeof shouldCreateSpanForRequest === 'function') {\n        shouldCreateSpan = function (url) {\n            return defaultShouldCreateSpan(url) && shouldCreateSpanForRequest(url);\n        };\n    }\n    var spans = {};\n    if (traceFetch) {\n        addInstrumentationHandler('fetch', function (handlerData) {\n            fetchCallback(handlerData, shouldCreateSpan, spans);\n        });\n    }\n    if (traceXHR) {\n        addInstrumentationHandler('xhr', function (handlerData) {\n            xhrCallback(handlerData, shouldCreateSpan, spans);\n        });\n    }\n}\n/**\n * Create and track fetch request spans\n */\nexport function fetchCallback(handlerData, shouldCreateSpan, spans) {\n    if (!hasTracingEnabled() || !(handlerData.fetchData && shouldCreateSpan(handlerData.fetchData.url))) {\n        return;\n    }\n    if (handlerData.endTimestamp) {\n        var spanId = handlerData.fetchData.__span;\n        if (!spanId)\n            return;\n        var span = spans[spanId];\n        if (span) {\n            if (handlerData.response) {\n                // TODO (kmclb) remove this once types PR goes through\n                // eslint-disable-next-line @typescript-eslint/no-unsafe-member-access\n                span.setHttpStatus(handlerData.response.status);\n            }\n            else if (handlerData.error) {\n                span.setStatus('internal_error');\n            }\n            span.finish();\n            // eslint-disable-next-line @typescript-eslint/no-dynamic-delete\n            delete spans[spanId];\n        }\n        return;\n    }\n    var activeTransaction = getActiveTransaction();\n    if (activeTransaction) {\n        var span = activeTransaction.startChild({\n            data: __assign(__assign({}, handlerData.fetchData), { type: 'fetch' }),\n            description: handlerData.fetchData.method + \" \" + handlerData.fetchData.url,\n            op: 'http.client',\n        });\n        handlerData.fetchData.__span = span.spanId;\n        spans[span.spanId] = span;\n        var request = (handlerData.args[0] = handlerData.args[0]);\n        // eslint-disable-next-line @typescript-eslint/no-explicit-any\n        var options = (handlerData.args[1] = handlerData.args[1] || {});\n        var headers = options.headers;\n        if (isInstanceOf(request, Request)) {\n            headers = request.headers;\n        }\n        if (headers) {\n            // eslint-disable-next-line @typescript-eslint/no-unsafe-member-access\n            if (typeof headers.append === 'function') {\n                // eslint-disable-next-line @typescript-eslint/no-unsafe-member-access\n                headers.append('sentry-trace', span.toTraceparent());\n            }\n            else if (Array.isArray(headers)) {\n                headers = __spread(headers, [['sentry-trace', span.toTraceparent()]]);\n            }\n            else {\n                headers = __assign(__assign({}, headers), { 'sentry-trace': span.toTraceparent() });\n            }\n        }\n        else {\n            headers = { 'sentry-trace': span.toTraceparent() };\n        }\n        options.headers = headers;\n    }\n}\n/**\n * Create and track xhr request spans\n */\nexport function xhrCallback(handlerData, shouldCreateSpan, spans) {\n    if (!hasTracingEnabled() ||\n        (handlerData.xhr && handlerData.xhr.__sentry_own_request__) ||\n        !(handlerData.xhr && handlerData.xhr.__sentry_xhr__ && shouldCreateSpan(handlerData.xhr.__sentry_xhr__.url))) {\n        return;\n    }\n    var xhr = handlerData.xhr.__sentry_xhr__;\n    // check first if the request has finished and is tracked by an existing span which should now end\n    if (handlerData.endTimestamp) {\n        var spanId = handlerData.xhr.__sentry_xhr_span_id__;\n        if (!spanId)\n            return;\n        var span = spans[spanId];\n        if (span) {\n            span.setHttpStatus(xhr.status_code);\n            span.finish();\n            // eslint-disable-next-line @typescript-eslint/no-dynamic-delete\n            delete spans[spanId];\n        }\n        return;\n    }\n    // if not, create a new span to track it\n    var activeTransaction = getActiveTransaction();\n    if (activeTransaction) {\n        var span = activeTransaction.startChild({\n            data: __assign(__assign({}, xhr.data), { type: 'xhr', method: xhr.method, url: xhr.url }),\n            description: xhr.method + \" \" + xhr.url,\n            op: 'http.client',\n        });\n        handlerData.xhr.__sentry_xhr_span_id__ = span.spanId;\n        spans[handlerData.xhr.__sentry_xhr_span_id__] = span;\n        if (handlerData.xhr.setRequestHeader) {\n            try {\n                handlerData.xhr.setRequestHeader('sentry-trace', span.toTraceparent());\n            }\n            catch (_) {\n                // Error: InvalidStateError: Failed to execute 'setRequestHeader' on 'XMLHttpRequest': The object's state must be OPENED.\n            }\n        }\n    }\n}\n//# sourceMappingURL=request.js.map","import { addInstrumentationHandler, getGlobalObject, logger } from '@sentry/utils';\nimport { IS_DEBUG_BUILD } from '../flags';\nvar global = getGlobalObject();\n/**\n * Default function implementing pageload and navigation transactions\n */\nexport function instrumentRoutingWithDefaults(customStartTransaction, startTransactionOnPageLoad, startTransactionOnLocationChange) {\n    if (startTransactionOnPageLoad === void 0) { startTransactionOnPageLoad = true; }\n    if (startTransactionOnLocationChange === void 0) { startTransactionOnLocationChange = true; }\n    if (!global || !global.location) {\n        IS_DEBUG_BUILD && logger.warn('Could not initialize routing instrumentation due to invalid location');\n        return;\n    }\n    var startingUrl = global.location.href;\n    var activeTransaction;\n    if (startTransactionOnPageLoad) {\n        activeTransaction = customStartTransaction({ name: global.location.pathname, op: 'pageload' });\n    }\n    if (startTransactionOnLocationChange) {\n        addInstrumentationHandler('history', function (_a) {\n            var to = _a.to, from = _a.from;\n            /**\n             * This early return is there to account for some cases where a navigation transaction starts right after\n             * long-running pageload. We make sure that if `from` is undefined and a valid `startingURL` exists, we don't\n             * create an uneccessary navigation transaction.\n             *\n             * This was hard to duplicate, but this behavior stopped as soon as this fix was applied. This issue might also\n             * only be caused in certain development environments where the usage of a hot module reloader is causing\n             * errors.\n             */\n            if (from === undefined && startingUrl && startingUrl.indexOf(to) !== -1) {\n                startingUrl = undefined;\n                return;\n            }\n            if (from !== to) {\n                startingUrl = undefined;\n                if (activeTransaction) {\n                    IS_DEBUG_BUILD && logger.log(\"[Tracing] Finishing current transaction with op: \" + activeTransaction.op);\n                    // If there's an open transaction on the scope, we need to finish it before creating an new one.\n                    activeTransaction.finish();\n                }\n                activeTransaction = customStartTransaction({ name: global.location.pathname, op: 'navigation' });\n            }\n        });\n    }\n}\n//# sourceMappingURL=router.js.map","import { __assign } from \"tslib\";\nimport { getGlobalObject, logger } from '@sentry/utils';\nimport { IS_DEBUG_BUILD } from '../flags';\nimport { startIdleTransaction } from '../hubextensions';\nimport { DEFAULT_IDLE_TIMEOUT } from '../idletransaction';\nimport { extractTraceparentData, secToMs } from '../utils';\nimport { registerBackgroundTabDetection } from './backgroundtab';\nimport { MetricsInstrumentation } from './metrics';\nimport { defaultRequestInstrumentationOptions, instrumentOutgoingRequests, } from './request';\nimport { instrumentRoutingWithDefaults } from './router';\nexport var DEFAULT_MAX_TRANSACTION_DURATION_SECONDS = 600;\nvar DEFAULT_BROWSER_TRACING_OPTIONS = __assign({ idleTimeout: DEFAULT_IDLE_TIMEOUT, markBackgroundTransactions: true, maxTransactionDuration: DEFAULT_MAX_TRANSACTION_DURATION_SECONDS, routingInstrumentation: instrumentRoutingWithDefaults, startTransactionOnLocationChange: true, startTransactionOnPageLoad: true }, defaultRequestInstrumentationOptions);\n/**\n * The Browser Tracing integration automatically instruments browser pageload/navigation\n * actions as transactions, and captures requests, metrics and errors as spans.\n *\n * The integration can be configured with a variety of options, and can be extended to use\n * any routing library. This integration uses {@see IdleTransaction} to create transactions.\n */\nvar BrowserTracing = /** @class */ (function () {\n    function BrowserTracing(_options) {\n        /**\n         * @inheritDoc\n         */\n        this.name = BrowserTracing.id;\n        /** Store configured idle timeout so that it can be added as a tag to transactions */\n        this._configuredIdleTimeout = undefined;\n        var tracingOrigins = defaultRequestInstrumentationOptions.tracingOrigins;\n        // NOTE: Logger doesn't work in constructors, as it's initialized after integrations instances\n        if (_options) {\n            this._configuredIdleTimeout = _options.idleTimeout;\n            if (_options.tracingOrigins && Array.isArray(_options.tracingOrigins) && _options.tracingOrigins.length !== 0) {\n                tracingOrigins = _options.tracingOrigins;\n            }\n            else {\n                IS_DEBUG_BUILD && (this._emitOptionsWarning = true);\n            }\n        }\n        this.options = __assign(__assign(__assign({}, DEFAULT_BROWSER_TRACING_OPTIONS), _options), { tracingOrigins: tracingOrigins });\n        var _metricOptions = this.options._metricOptions;\n        this._metrics = new MetricsInstrumentation(_metricOptions && _metricOptions._reportAllChanges);\n    }\n    /**\n     * @inheritDoc\n     */\n    BrowserTracing.prototype.setupOnce = function (_, getCurrentHub) {\n        var _this = this;\n        this._getCurrentHub = getCurrentHub;\n        if (this._emitOptionsWarning) {\n            IS_DEBUG_BUILD &&\n                logger.warn('[Tracing] You need to define `tracingOrigins` in the options. Set an array of urls or patterns to trace.');\n            IS_DEBUG_BUILD &&\n                logger.warn(\"[Tracing] We added a reasonable default for you: \" + defaultRequestInstrumentationOptions.tracingOrigins);\n        }\n        // eslint-disable-next-line @typescript-eslint/unbound-method\n        var _a = this.options, instrumentRouting = _a.routingInstrumentation, startTransactionOnLocationChange = _a.startTransactionOnLocationChange, startTransactionOnPageLoad = _a.startTransactionOnPageLoad, markBackgroundTransactions = _a.markBackgroundTransactions, traceFetch = _a.traceFetch, traceXHR = _a.traceXHR, tracingOrigins = _a.tracingOrigins, shouldCreateSpanForRequest = _a.shouldCreateSpanForRequest;\n        instrumentRouting(function (context) { return _this._createRouteTransaction(context); }, startTransactionOnPageLoad, startTransactionOnLocationChange);\n        if (markBackgroundTransactions) {\n            registerBackgroundTabDetection();\n        }\n        instrumentOutgoingRequests({ traceFetch: traceFetch, traceXHR: traceXHR, tracingOrigins: tracingOrigins, shouldCreateSpanForRequest: shouldCreateSpanForRequest });\n    };\n    /** Create routing idle transaction. */\n    BrowserTracing.prototype._createRouteTransaction = function (context) {\n        var _this = this;\n        if (!this._getCurrentHub) {\n            IS_DEBUG_BUILD &&\n                logger.warn(\"[Tracing] Did not create \" + context.op + \" transaction because _getCurrentHub is invalid.\");\n            return undefined;\n        }\n        // eslint-disable-next-line @typescript-eslint/unbound-method\n        var _a = this.options, beforeNavigate = _a.beforeNavigate, idleTimeout = _a.idleTimeout, maxTransactionDuration = _a.maxTransactionDuration;\n        var parentContextFromHeader = context.op === 'pageload' ? getHeaderContext() : undefined;\n        var expandedContext = __assign(__assign(__assign({}, context), parentContextFromHeader), { trimEnd: true });\n        var modifiedContext = typeof beforeNavigate === 'function' ? beforeNavigate(expandedContext) : expandedContext;\n        // For backwards compatibility reasons, beforeNavigate can return undefined to \"drop\" the transaction (prevent it\n        // from being sent to Sentry).\n        var finalContext = modifiedContext === undefined ? __assign(__assign({}, expandedContext), { sampled: false }) : modifiedContext;\n        if (finalContext.sampled === false) {\n            IS_DEBUG_BUILD && logger.log(\"[Tracing] Will not send \" + finalContext.op + \" transaction because of beforeNavigate.\");\n        }\n        IS_DEBUG_BUILD && logger.log(\"[Tracing] Starting \" + finalContext.op + \" transaction on scope\");\n        var hub = this._getCurrentHub();\n        var location = getGlobalObject().location;\n        var idleTransaction = startIdleTransaction(hub, finalContext, idleTimeout, true, { location: location });\n        idleTransaction.registerBeforeFinishCallback(function (transaction, endTimestamp) {\n            _this._metrics.addPerformanceEntries(transaction);\n            adjustTransactionDuration(secToMs(maxTransactionDuration), transaction, endTimestamp);\n        });\n        idleTransaction.setTag('idleTimeout', this._configuredIdleTimeout);\n        return idleTransaction;\n    };\n    /**\n     * @inheritDoc\n     */\n    BrowserTracing.id = 'BrowserTracing';\n    return BrowserTracing;\n}());\nexport { BrowserTracing };\n/**\n * Gets transaction context from a sentry-trace meta.\n *\n * @returns Transaction context data from the header or undefined if there's no header or the header is malformed\n */\nexport function getHeaderContext() {\n    var header = getMetaContent('sentry-trace');\n    if (header) {\n        return extractTraceparentData(header);\n    }\n    return undefined;\n}\n/** Returns the value of a meta tag */\nexport function getMetaContent(metaName) {\n    var el = getGlobalObject().document.querySelector(\"meta[name=\" + metaName + \"]\");\n    return el ? el.getAttribute('content') : null;\n}\n/** Adjusts transaction value based on max transaction duration */\nfunction adjustTransactionDuration(maxDuration, transaction, endTimestamp) {\n    var diff = endTimestamp - transaction.startTimestamp;\n    var isOutdatedTransaction = endTimestamp && (diff > maxDuration || diff < 0);\n    if (isOutdatedTransaction) {\n        transaction.setStatus('deadline_exceeded');\n        transaction.setTag('maxTransactionDurationExceeded', 'true');\n    }\n}\n//# sourceMappingURL=browsertracing.js.map","/*\n * Copyright 2020 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nexport var bindReporter = function (callback, metric, reportAllChanges) {\n    var prevValue;\n    return function (forceReport) {\n        if (metric.value >= 0) {\n            if (forceReport || reportAllChanges) {\n                metric.delta = metric.value - (prevValue || 0);\n                // Report the metric if there's a non-zero delta or if no previous\n                // value exists (which can happen in the case of the document becoming\n                // hidden when the metric value is 0).\n                // See: https://github.com/GoogleChrome/web-vitals/issues/14\n                if (metric.delta || prevValue === undefined) {\n                    prevValue = metric.value;\n                    callback(metric);\n                }\n            }\n        }\n    };\n};\n//# sourceMappingURL=bindReporter.js.map","/*\n * Copyright 2020 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n/**\n * Performantly generate a unique, 30-char string by combining a version\n * number, the current timestamp with a 13-digit number integer.\n * @return {string}\n */\nexport var generateUniqueID = function () {\n    return \"v2-\" + Date.now() + \"-\" + (Math.floor(Math.random() * (9e12 - 1)) + 1e12);\n};\n//# sourceMappingURL=generateUniqueID.js.map","/*\n * Copyright 2020 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nimport { getGlobalObject } from '@sentry/utils';\nimport { onHidden } from './onHidden';\nvar firstHiddenTime = -1;\nvar initHiddenTime = function () {\n    return getGlobalObject().document.visibilityState === 'hidden' ? 0 : Infinity;\n};\nvar trackChanges = function () {\n    // Update the time if/when the document becomes hidden.\n    onHidden(function (_a) {\n        var timeStamp = _a.timeStamp;\n        firstHiddenTime = timeStamp;\n    }, true);\n};\nexport var getVisibilityWatcher = function () {\n    if (firstHiddenTime < 0) {\n        // If the document is hidden when this code runs, assume it was hidden\n        // since navigation start. This isn't a perfect heuristic, but it's the\n        // best we can do until an API is available to support querying past\n        // visibilityState.\n        firstHiddenTime = initHiddenTime();\n        trackChanges();\n    }\n    return {\n        get firstHiddenTime() {\n            return firstHiddenTime;\n        },\n    };\n};\n//# sourceMappingURL=getVisibilityWatcher.js.map","/*\n * Copyright 2020 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nimport { generateUniqueID } from './generateUniqueID';\nexport var initMetric = function (name, value) {\n    return {\n        name: name,\n        value: (value !== null && value !== void 0 ? value : -1),\n        delta: 0,\n        entries: [],\n        id: generateUniqueID(),\n    };\n};\n//# sourceMappingURL=initMetric.js.map","/*\n * Copyright 2020 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n/**\n * Takes a performance entry type and a callback function, and creates a\n * `PerformanceObserver` instance that will observe the specified entry type\n * with buffering enabled and call the callback _for each entry_.\n *\n * This function also feature-detects entry support and wraps the logic in a\n * try/catch to avoid errors in unsupporting browsers.\n */\nexport var observe = function (type, callback) {\n    try {\n        if (PerformanceObserver.supportedEntryTypes.includes(type)) {\n            // More extensive feature detect needed for Firefox due to:\n            // https://github.com/GoogleChrome/web-vitals/issues/142\n            if (type === 'first-input' && !('PerformanceEventTiming' in self)) {\n                return;\n            }\n            var po = new PerformanceObserver(function (l) { return l.getEntries().map(callback); });\n            po.observe({ type: type, buffered: true });\n            return po;\n        }\n    }\n    catch (e) {\n        // Do nothing.\n    }\n    return;\n};\n//# sourceMappingURL=observe.js.map","/*\n * Copyright 2020 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nimport { getGlobalObject } from '@sentry/utils';\nexport var onHidden = function (cb, once) {\n    var onHiddenOrPageHide = function (event) {\n        if (event.type === 'pagehide' || getGlobalObject().document.visibilityState === 'hidden') {\n            cb(event);\n            if (once) {\n                removeEventListener('visibilitychange', onHiddenOrPageHide, true);\n                removeEventListener('pagehide', onHiddenOrPageHide, true);\n            }\n        }\n    };\n    addEventListener('visibilitychange', onHiddenOrPageHide, true);\n    // Some browsers have buggy implementations of visibilitychange,\n    // so we use pagehide in addition, just to be safe.\n    addEventListener('pagehide', onHiddenOrPageHide, true);\n};\n//# sourceMappingURL=onHidden.js.map","// Store finish reasons in tuple to save on bundle size\n// Readonly type should enforce that this is not mutated.\nexport var FINISH_REASON_TAG = 'finishReason';\nexport var IDLE_TRANSACTION_FINISH_REASONS = ['heartbeatFailed', 'idleTimeout', 'documentHidden'];\n//# sourceMappingURL=constants.js.map","import { addInstrumentationHandler, logger } from '@sentry/utils';\nimport { IS_DEBUG_BUILD } from './flags';\nimport { getActiveTransaction } from './utils';\n/**\n * Configures global error listeners\n */\nexport function registerErrorInstrumentation() {\n    addInstrumentationHandler('error', errorCallback);\n    addInstrumentationHandler('unhandledrejection', errorCallback);\n}\n/**\n * If an error or unhandled promise occurs, we mark the active transaction as failed\n */\nfunction errorCallback() {\n    var activeTransaction = getActiveTransaction();\n    if (activeTransaction) {\n        var status_1 = 'internal_error';\n        IS_DEBUG_BUILD && logger.log(\"[Tracing] Transaction: \" + status_1 + \" -> Global error occured\");\n        activeTransaction.setStatus(status_1);\n    }\n}\n//# sourceMappingURL=errors.js.map","/*\n * This file defines flags and constants that can be modified during compile time in order to facilitate tree shaking\n * for users.\n *\n * Debug flags need to be declared in each package individually and must not be imported across package boundaries,\n * because some build tools have trouble tree-shaking imported guards.\n *\n * As a convention, we define debug flags in a `flags.ts` file in the root of a package's `src` folder.\n *\n * Debug flag files will contain \"magic strings\" like `__SENTRY_DEBUG__` that may get replaced with actual values during\n * our, or the user's build process. Take care when introducing new flags - they must not throw if they are not\n * replaced.\n */\n/** Flag that is true for debug builds, false otherwise. */\nexport var IS_DEBUG_BUILD = typeof __SENTRY_DEBUG__ === 'undefined' ? true : __SENTRY_DEBUG__;\n//# sourceMappingURL=flags.js.map","import { __assign, __read, __spread } from \"tslib\";\nimport { getMainCarrier } from '@sentry/hub';\nimport { dynamicRequire, isNaN, isNodeEnv, loadModule, logger } from '@sentry/utils';\nimport { registerErrorInstrumentation } from './errors';\nimport { IS_DEBUG_BUILD } from './flags';\nimport { IdleTransaction } from './idletransaction';\nimport { Transaction } from './transaction';\nimport { hasTracingEnabled } from './utils';\n/** Returns all trace headers that are currently on the top scope. */\nfunction traceHeaders() {\n    var scope = this.getScope();\n    if (scope) {\n        var span = scope.getSpan();\n        if (span) {\n            return {\n                'sentry-trace': span.toTraceparent(),\n            };\n        }\n    }\n    return {};\n}\n/**\n * Makes a sampling decision for the given transaction and stores it on the transaction.\n *\n * Called every time a transaction is created. Only transactions which emerge with a `sampled` value of `true` will be\n * sent to Sentry.\n *\n * @param transaction: The transaction needing a sampling decision\n * @param options: The current client's options, so we can access `tracesSampleRate` and/or `tracesSampler`\n * @param samplingContext: Default and user-provided data which may be used to help make the decision\n *\n * @returns The given transaction with its `sampled` value set\n */\nfunction sample(transaction, options, samplingContext) {\n    // nothing to do if tracing is not enabled\n    if (!hasTracingEnabled(options)) {\n        transaction.sampled = false;\n        return transaction;\n    }\n    // if the user has forced a sampling decision by passing a `sampled` value in their transaction context, go with that\n    if (transaction.sampled !== undefined) {\n        transaction.setMetadata({\n            transactionSampling: { method: 'explicitly_set' },\n        });\n        return transaction;\n    }\n    // we would have bailed already if neither `tracesSampler` nor `tracesSampleRate` were defined, so one of these should\n    // work; prefer the hook if so\n    var sampleRate;\n    if (typeof options.tracesSampler === 'function') {\n        sampleRate = options.tracesSampler(samplingContext);\n        transaction.setMetadata({\n            transactionSampling: {\n                method: 'client_sampler',\n                // cast to number in case it's a boolean\n                rate: Number(sampleRate),\n            },\n        });\n    }\n    else if (samplingContext.parentSampled !== undefined) {\n        sampleRate = samplingContext.parentSampled;\n        transaction.setMetadata({\n            transactionSampling: { method: 'inheritance' },\n        });\n    }\n    else {\n        sampleRate = options.tracesSampleRate;\n        transaction.setMetadata({\n            transactionSampling: {\n                method: 'client_rate',\n                // cast to number in case it's a boolean\n                rate: Number(sampleRate),\n            },\n        });\n    }\n    // Since this is coming from the user (or from a function provided by the user), who knows what we might get. (The\n    // only valid values are booleans or numbers between 0 and 1.)\n    if (!isValidSampleRate(sampleRate)) {\n        IS_DEBUG_BUILD && logger.warn('[Tracing] Discarding transaction because of invalid sample rate.');\n        transaction.sampled = false;\n        return transaction;\n    }\n    // if the function returned 0 (or false), or if `tracesSampleRate` is 0, it's a sign the transaction should be dropped\n    if (!sampleRate) {\n        IS_DEBUG_BUILD &&\n            logger.log(\"[Tracing] Discarding transaction because \" + (typeof options.tracesSampler === 'function'\n                ? 'tracesSampler returned 0 or false'\n                : 'a negative sampling decision was inherited or tracesSampleRate is set to 0'));\n        transaction.sampled = false;\n        return transaction;\n    }\n    // Now we roll the dice. Math.random is inclusive of 0, but not of 1, so strict < is safe here. In case sampleRate is\n    // a boolean, the < comparison will cause it to be automatically cast to 1 if it's true and 0 if it's false.\n    transaction.sampled = Math.random() < sampleRate;\n    // if we're not going to keep it, we're done\n    if (!transaction.sampled) {\n        IS_DEBUG_BUILD &&\n            logger.log(\"[Tracing] Discarding transaction because it's not included in the random sample (sampling rate = \" + Number(sampleRate) + \")\");\n        return transaction;\n    }\n    IS_DEBUG_BUILD && logger.log(\"[Tracing] starting \" + transaction.op + \" transaction - \" + transaction.name);\n    return transaction;\n}\n/**\n * Checks the given sample rate to make sure it is valid type and value (a boolean, or a number between 0 and 1).\n */\nfunction isValidSampleRate(rate) {\n    // we need to check NaN explicitly because it's of type 'number' and therefore wouldn't get caught by this typecheck\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    if (isNaN(rate) || !(typeof rate === 'number' || typeof rate === 'boolean')) {\n        IS_DEBUG_BUILD &&\n            logger.warn(\"[Tracing] Given sample rate is invalid. Sample rate must be a boolean or a number between 0 and 1. Got \" + JSON.stringify(rate) + \" of type \" + JSON.stringify(typeof rate) + \".\");\n        return false;\n    }\n    // in case sampleRate is a boolean, it will get automatically cast to 1 if it's true and 0 if it's false\n    if (rate < 0 || rate > 1) {\n        IS_DEBUG_BUILD &&\n            logger.warn(\"[Tracing] Given sample rate is invalid. Sample rate must be between 0 and 1. Got \" + rate + \".\");\n        return false;\n    }\n    return true;\n}\n/**\n * Creates a new transaction and adds a sampling decision if it doesn't yet have one.\n *\n * The Hub.startTransaction method delegates to this method to do its work, passing the Hub instance in as `this`, as if\n * it had been called on the hub directly. Exists as a separate function so that it can be injected into the class as an\n * \"extension method.\"\n *\n * @param this: The Hub starting the transaction\n * @param transactionContext: Data used to configure the transaction\n * @param CustomSamplingContext: Optional data to be provided to the `tracesSampler` function (if any)\n *\n * @returns The new transaction\n *\n * @see {@link Hub.startTransaction}\n */\nfunction _startTransaction(transactionContext, customSamplingContext) {\n    var client = this.getClient();\n    var options = (client && client.getOptions()) || {};\n    var transaction = new Transaction(transactionContext, this);\n    transaction = sample(transaction, options, __assign({ parentSampled: transactionContext.parentSampled, transactionContext: transactionContext }, customSamplingContext));\n    if (transaction.sampled) {\n        transaction.initSpanRecorder(options._experiments && options._experiments.maxSpans);\n    }\n    return transaction;\n}\n/**\n * Create new idle transaction.\n */\nexport function startIdleTransaction(hub, transactionContext, idleTimeout, onScope, customSamplingContext) {\n    var client = hub.getClient();\n    var options = (client && client.getOptions()) || {};\n    var transaction = new IdleTransaction(transactionContext, hub, idleTimeout, onScope);\n    transaction = sample(transaction, options, __assign({ parentSampled: transactionContext.parentSampled, transactionContext: transactionContext }, customSamplingContext));\n    if (transaction.sampled) {\n        transaction.initSpanRecorder(options._experiments && options._experiments.maxSpans);\n    }\n    return transaction;\n}\n/**\n * @private\n */\nexport function _addTracingExtensions() {\n    var carrier = getMainCarrier();\n    if (!carrier.__SENTRY__) {\n        return;\n    }\n    carrier.__SENTRY__.extensions = carrier.__SENTRY__.extensions || {};\n    if (!carrier.__SENTRY__.extensions.startTransaction) {\n        carrier.__SENTRY__.extensions.startTransaction = _startTransaction;\n    }\n    if (!carrier.__SENTRY__.extensions.traceHeaders) {\n        carrier.__SENTRY__.extensions.traceHeaders = traceHeaders;\n    }\n}\n/**\n * @private\n */\nfunction _autoloadDatabaseIntegrations() {\n    var carrier = getMainCarrier();\n    if (!carrier.__SENTRY__) {\n        return;\n    }\n    var packageToIntegrationMapping = {\n        mongodb: function () {\n            var integration = dynamicRequire(module, './integrations/node/mongo');\n            return new integration.Mongo();\n        },\n        mongoose: function () {\n            var integration = dynamicRequire(module, './integrations/node/mongo');\n            return new integration.Mongo({ mongoose: true });\n        },\n        mysql: function () {\n            var integration = dynamicRequire(module, './integrations/node/mysql');\n            return new integration.Mysql();\n        },\n        pg: function () {\n            var integration = dynamicRequire(module, './integrations/node/postgres');\n            return new integration.Postgres();\n        },\n    };\n    var mappedPackages = Object.keys(packageToIntegrationMapping)\n        .filter(function (moduleName) { return !!loadModule(moduleName); })\n        .map(function (pkg) {\n        try {\n            return packageToIntegrationMapping[pkg]();\n        }\n        catch (e) {\n            return undefined;\n        }\n    })\n        .filter(function (p) { return p; });\n    if (mappedPackages.length > 0) {\n        carrier.__SENTRY__.integrations = __spread((carrier.__SENTRY__.integrations || []), mappedPackages);\n    }\n}\n/**\n * This patches the global object and injects the Tracing extensions methods\n */\nexport function addExtensionMethods() {\n    _addTracingExtensions();\n    // Detect and automatically load specified integrations.\n    if (isNodeEnv()) {\n        _autoloadDatabaseIntegrations();\n    }\n    // If an error happens globally, we should make sure transaction status is set to error.\n    registerErrorInstrumentation();\n}\n//# sourceMappingURL=hubextensions.js.map","import { __extends, __values } from \"tslib\";\nimport { logger, timestampWithMs } from '@sentry/utils';\nimport { FINISH_REASON_TAG, IDLE_TRANSACTION_FINISH_REASONS } from './constants';\nimport { IS_DEBUG_BUILD } from './flags';\nimport { SpanRecorder } from './span';\nimport { Transaction } from './transaction';\nexport var DEFAULT_IDLE_TIMEOUT = 1000;\nexport var HEARTBEAT_INTERVAL = 5000;\n/**\n * @inheritDoc\n */\nvar IdleTransactionSpanRecorder = /** @class */ (function (_super) {\n    __extends(IdleTransactionSpanRecorder, _super);\n    function IdleTransactionSpanRecorder(_pushActivity, _popActivity, transactionSpanId, maxlen) {\n        if (transactionSpanId === void 0) { transactionSpanId = ''; }\n        var _this = _super.call(this, maxlen) || this;\n        _this._pushActivity = _pushActivity;\n        _this._popActivity = _popActivity;\n        _this.transactionSpanId = transactionSpanId;\n        return _this;\n    }\n    /**\n     * @inheritDoc\n     */\n    IdleTransactionSpanRecorder.prototype.add = function (span) {\n        var _this = this;\n        // We should make sure we do not push and pop activities for\n        // the transaction that this span recorder belongs to.\n        if (span.spanId !== this.transactionSpanId) {\n            // We patch span.finish() to pop an activity after setting an endTimestamp.\n            span.finish = function (endTimestamp) {\n                span.endTimestamp = typeof endTimestamp === 'number' ? endTimestamp : timestampWithMs();\n                _this._popActivity(span.spanId);\n            };\n            // We should only push new activities if the span does not have an end timestamp.\n            if (span.endTimestamp === undefined) {\n                this._pushActivity(span.spanId);\n            }\n        }\n        _super.prototype.add.call(this, span);\n    };\n    return IdleTransactionSpanRecorder;\n}(SpanRecorder));\nexport { IdleTransactionSpanRecorder };\n/**\n * An IdleTransaction is a transaction that automatically finishes. It does this by tracking child spans as activities.\n * You can have multiple IdleTransactions active, but if the `onScope` option is specified, the idle transaction will\n * put itself on the scope on creation.\n */\nvar IdleTransaction = /** @class */ (function (_super) {\n    __extends(IdleTransaction, _super);\n    function IdleTransaction(transactionContext, _idleHub, \n    /**\n     * The time to wait in ms until the idle transaction will be finished.\n     * @default 1000\n     */\n    _idleTimeout, \n    // Whether or not the transaction should put itself on the scope when it starts and pop itself off when it ends\n    _onScope) {\n        if (_idleTimeout === void 0) { _idleTimeout = DEFAULT_IDLE_TIMEOUT; }\n        if (_onScope === void 0) { _onScope = false; }\n        var _this = _super.call(this, transactionContext, _idleHub) || this;\n        _this._idleHub = _idleHub;\n        _this._idleTimeout = _idleTimeout;\n        _this._onScope = _onScope;\n        // Activities store a list of active spans\n        _this.activities = {};\n        // Amount of times heartbeat has counted. Will cause transaction to finish after 3 beats.\n        _this._heartbeatCounter = 0;\n        // We should not use heartbeat if we finished a transaction\n        _this._finished = false;\n        _this._beforeFinishCallbacks = [];\n        if (_idleHub && _onScope) {\n            // There should only be one active transaction on the scope\n            clearActiveTransaction(_idleHub);\n            // We set the transaction here on the scope so error events pick up the trace\n            // context and attach it to the error.\n            IS_DEBUG_BUILD && logger.log(\"Setting idle transaction on scope. Span ID: \" + _this.spanId);\n            _idleHub.configureScope(function (scope) { return scope.setSpan(_this); });\n        }\n        _this._initTimeout = setTimeout(function () {\n            if (!_this._finished) {\n                _this.finish();\n            }\n        }, _this._idleTimeout);\n        return _this;\n    }\n    /** {@inheritDoc} */\n    IdleTransaction.prototype.finish = function (endTimestamp) {\n        var e_1, _a;\n        var _this = this;\n        if (endTimestamp === void 0) { endTimestamp = timestampWithMs(); }\n        this._finished = true;\n        this.activities = {};\n        if (this.spanRecorder) {\n            IS_DEBUG_BUILD &&\n                logger.log('[Tracing] finishing IdleTransaction', new Date(endTimestamp * 1000).toISOString(), this.op);\n            try {\n                for (var _b = __values(this._beforeFinishCallbacks), _c = _b.next(); !_c.done; _c = _b.next()) {\n                    var callback = _c.value;\n                    callback(this, endTimestamp);\n                }\n            }\n            catch (e_1_1) { e_1 = { error: e_1_1 }; }\n            finally {\n                try {\n                    if (_c && !_c.done && (_a = _b.return)) _a.call(_b);\n                }\n                finally { if (e_1) throw e_1.error; }\n            }\n            this.spanRecorder.spans = this.spanRecorder.spans.filter(function (span) {\n                // If we are dealing with the transaction itself, we just return it\n                if (span.spanId === _this.spanId) {\n                    return true;\n                }\n                // We cancel all pending spans with status \"cancelled\" to indicate the idle transaction was finished early\n                if (!span.endTimestamp) {\n                    span.endTimestamp = endTimestamp;\n                    span.setStatus('cancelled');\n                    IS_DEBUG_BUILD &&\n                        logger.log('[Tracing] cancelling span since transaction ended early', JSON.stringify(span, undefined, 2));\n                }\n                var keepSpan = span.startTimestamp < endTimestamp;\n                if (!keepSpan) {\n                    IS_DEBUG_BUILD &&\n                        logger.log('[Tracing] discarding Span since it happened after Transaction was finished', JSON.stringify(span, undefined, 2));\n                }\n                return keepSpan;\n            });\n            IS_DEBUG_BUILD && logger.log('[Tracing] flushing IdleTransaction');\n        }\n        else {\n            IS_DEBUG_BUILD && logger.log('[Tracing] No active IdleTransaction');\n        }\n        // if `this._onScope` is `true`, the transaction put itself on the scope when it started\n        if (this._onScope) {\n            clearActiveTransaction(this._idleHub);\n        }\n        return _super.prototype.finish.call(this, endTimestamp);\n    };\n    /**\n     * Register a callback function that gets excecuted before the transaction finishes.\n     * Useful for cleanup or if you want to add any additional spans based on current context.\n     *\n     * This is exposed because users have no other way of running something before an idle transaction\n     * finishes.\n     */\n    IdleTransaction.prototype.registerBeforeFinishCallback = function (callback) {\n        this._beforeFinishCallbacks.push(callback);\n    };\n    /**\n     * @inheritDoc\n     */\n    IdleTransaction.prototype.initSpanRecorder = function (maxlen) {\n        var _this = this;\n        if (!this.spanRecorder) {\n            var pushActivity = function (id) {\n                if (_this._finished) {\n                    return;\n                }\n                _this._pushActivity(id);\n            };\n            var popActivity = function (id) {\n                if (_this._finished) {\n                    return;\n                }\n                _this._popActivity(id);\n            };\n            this.spanRecorder = new IdleTransactionSpanRecorder(pushActivity, popActivity, this.spanId, maxlen);\n            // Start heartbeat so that transactions do not run forever.\n            IS_DEBUG_BUILD && logger.log('Starting heartbeat');\n            this._pingHeartbeat();\n        }\n        this.spanRecorder.add(this);\n    };\n    /**\n     * Start tracking a specific activity.\n     * @param spanId The span id that represents the activity\n     */\n    IdleTransaction.prototype._pushActivity = function (spanId) {\n        if (this._initTimeout) {\n            clearTimeout(this._initTimeout);\n            this._initTimeout = undefined;\n        }\n        IS_DEBUG_BUILD && logger.log(\"[Tracing] pushActivity: \" + spanId);\n        this.activities[spanId] = true;\n        IS_DEBUG_BUILD && logger.log('[Tracing] new activities count', Object.keys(this.activities).length);\n    };\n    /**\n     * Remove an activity from usage\n     * @param spanId The span id that represents the activity\n     */\n    IdleTransaction.prototype._popActivity = function (spanId) {\n        var _this = this;\n        if (this.activities[spanId]) {\n            IS_DEBUG_BUILD && logger.log(\"[Tracing] popActivity \" + spanId);\n            // eslint-disable-next-line @typescript-eslint/no-dynamic-delete\n            delete this.activities[spanId];\n            IS_DEBUG_BUILD && logger.log('[Tracing] new activities count', Object.keys(this.activities).length);\n        }\n        if (Object.keys(this.activities).length === 0) {\n            var timeout = this._idleTimeout;\n            // We need to add the timeout here to have the real endtimestamp of the transaction\n            // Remember timestampWithMs is in seconds, timeout is in ms\n            var end_1 = timestampWithMs() + timeout / 1000;\n            setTimeout(function () {\n                if (!_this._finished) {\n                    _this.setTag(FINISH_REASON_TAG, IDLE_TRANSACTION_FINISH_REASONS[1]);\n                    _this.finish(end_1);\n                }\n            }, timeout);\n        }\n    };\n    /**\n     * Checks when entries of this.activities are not changing for 3 beats.\n     * If this occurs we finish the transaction.\n     */\n    IdleTransaction.prototype._beat = function () {\n        // We should not be running heartbeat if the idle transaction is finished.\n        if (this._finished) {\n            return;\n        }\n        var heartbeatString = Object.keys(this.activities).join('');\n        if (heartbeatString === this._prevHeartbeatString) {\n            this._heartbeatCounter += 1;\n        }\n        else {\n            this._heartbeatCounter = 1;\n        }\n        this._prevHeartbeatString = heartbeatString;\n        if (this._heartbeatCounter >= 3) {\n            IS_DEBUG_BUILD && logger.log('[Tracing] Transaction finished because of no change for 3 heart beats');\n            this.setStatus('deadline_exceeded');\n            this.setTag(FINISH_REASON_TAG, IDLE_TRANSACTION_FINISH_REASONS[0]);\n            this.finish();\n        }\n        else {\n            this._pingHeartbeat();\n        }\n    };\n    /**\n     * Pings the heartbeat\n     */\n    IdleTransaction.prototype._pingHeartbeat = function () {\n        var _this = this;\n        IS_DEBUG_BUILD && logger.log(\"pinging Heartbeat -> current counter: \" + this._heartbeatCounter);\n        setTimeout(function () {\n            _this._beat();\n        }, HEARTBEAT_INTERVAL);\n    };\n    return IdleTransaction;\n}(Transaction));\nexport { IdleTransaction };\n/**\n * Reset transaction on scope to `undefined`\n */\nfunction clearActiveTransaction(hub) {\n    if (hub) {\n        var scope = hub.getScope();\n        if (scope) {\n            var transaction = scope.getTransaction();\n            if (transaction) {\n                scope.setSpan(undefined);\n            }\n        }\n    }\n}\n//# sourceMappingURL=idletransaction.js.map","import { addExtensionMethods } from './hubextensions';\nimport * as Integrations from './integrations';\nexport { Integrations };\n// This is already exported as part of `Integrations` above (and for the moment will remain so for\n// backwards compatibility), but that interferes with treeshaking, so we also export it separately\n// here.\n//\n// Previously we expected users to import tracing integrations like\n//\n// import { Integrations } from '@sentry/tracing';\n// const instance = new Integrations.BrowserTracing();\n//\n// This makes the integrations unable to be treeshaken though. To address this, we now have\n// this individual export. We now expect users to consume BrowserTracing like so:\n//\n// import { BrowserTracing } from '@sentry/tracing';\n// const instance = new BrowserTracing();\n//\n// For an example of of the new usage of BrowserTracing, see @sentry/nextjs index.client.ts\nexport { BrowserTracing } from './browser';\nexport { Span, spanStatusfromHttpCode } from './span';\n// eslint-disable-next-line deprecation/deprecation\nexport { SpanStatus } from './spanstatus';\nexport { Transaction } from './transaction';\nexport { \n// TODO deprecate old name in v7\ninstrumentOutgoingRequests as registerRequestInstrumentation, defaultRequestInstrumentationOptions, } from './browser';\nexport { IdleTransaction } from './idletransaction';\nexport { startIdleTransaction } from './hubextensions';\n// We are patching the global object with our hub extension methods\naddExtensionMethods();\nexport { addExtensionMethods };\nexport { extractTraceparentData, getActiveTransaction, hasTracingEnabled, stripUrlQueryAndFragment, TRACEPARENT_REGEXP, } from './utils';\n//# sourceMappingURL=index.js.map","import { __assign } from \"tslib\";\nimport { dropUndefinedKeys, timestampWithMs, uuid4 } from '@sentry/utils';\n/**\n * Keeps track of finished spans for a given transaction\n * @internal\n * @hideconstructor\n * @hidden\n */\nvar SpanRecorder = /** @class */ (function () {\n    function SpanRecorder(maxlen) {\n        if (maxlen === void 0) { maxlen = 1000; }\n        this.spans = [];\n        this._maxlen = maxlen;\n    }\n    /**\n     * This is just so that we don't run out of memory while recording a lot\n     * of spans. At some point we just stop and flush out the start of the\n     * trace tree (i.e.the first n spans with the smallest\n     * start_timestamp).\n     */\n    SpanRecorder.prototype.add = function (span) {\n        if (this.spans.length > this._maxlen) {\n            span.spanRecorder = undefined;\n        }\n        else {\n            this.spans.push(span);\n        }\n    };\n    return SpanRecorder;\n}());\nexport { SpanRecorder };\n/**\n * Span contains all data about a span\n */\nvar Span = /** @class */ (function () {\n    /**\n     * You should never call the constructor manually, always use `Sentry.startTransaction()`\n     * or call `startChild()` on an existing span.\n     * @internal\n     * @hideconstructor\n     * @hidden\n     */\n    function Span(spanContext) {\n        /**\n         * @inheritDoc\n         */\n        this.traceId = uuid4();\n        /**\n         * @inheritDoc\n         */\n        this.spanId = uuid4().substring(16);\n        /**\n         * Timestamp in seconds when the span was created.\n         */\n        this.startTimestamp = timestampWithMs();\n        /**\n         * @inheritDoc\n         */\n        this.tags = {};\n        /**\n         * @inheritDoc\n         */\n        // eslint-disable-next-line @typescript-eslint/no-explicit-any\n        this.data = {};\n        if (!spanContext) {\n            return this;\n        }\n        if (spanContext.traceId) {\n            this.traceId = spanContext.traceId;\n        }\n        if (spanContext.spanId) {\n            this.spanId = spanContext.spanId;\n        }\n        if (spanContext.parentSpanId) {\n            this.parentSpanId = spanContext.parentSpanId;\n        }\n        // We want to include booleans as well here\n        if ('sampled' in spanContext) {\n            this.sampled = spanContext.sampled;\n        }\n        if (spanContext.op) {\n            this.op = spanContext.op;\n        }\n        if (spanContext.description) {\n            this.description = spanContext.description;\n        }\n        if (spanContext.data) {\n            this.data = spanContext.data;\n        }\n        if (spanContext.tags) {\n            this.tags = spanContext.tags;\n        }\n        if (spanContext.status) {\n            this.status = spanContext.status;\n        }\n        if (spanContext.startTimestamp) {\n            this.startTimestamp = spanContext.startTimestamp;\n        }\n        if (spanContext.endTimestamp) {\n            this.endTimestamp = spanContext.endTimestamp;\n        }\n    }\n    /**\n     * @inheritDoc\n     * @deprecated\n     */\n    Span.prototype.child = function (spanContext) {\n        return this.startChild(spanContext);\n    };\n    /**\n     * @inheritDoc\n     */\n    Span.prototype.startChild = function (spanContext) {\n        var childSpan = new Span(__assign(__assign({}, spanContext), { parentSpanId: this.spanId, sampled: this.sampled, traceId: this.traceId }));\n        childSpan.spanRecorder = this.spanRecorder;\n        if (childSpan.spanRecorder) {\n            childSpan.spanRecorder.add(childSpan);\n        }\n        childSpan.transaction = this.transaction;\n        return childSpan;\n    };\n    /**\n     * @inheritDoc\n     */\n    Span.prototype.setTag = function (key, value) {\n        var _a;\n        this.tags = __assign(__assign({}, this.tags), (_a = {}, _a[key] = value, _a));\n        return this;\n    };\n    /**\n     * @inheritDoc\n     */\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any, @typescript-eslint/explicit-module-boundary-types\n    Span.prototype.setData = function (key, value) {\n        var _a;\n        this.data = __assign(__assign({}, this.data), (_a = {}, _a[key] = value, _a));\n        return this;\n    };\n    /**\n     * @inheritDoc\n     */\n    Span.prototype.setStatus = function (value) {\n        this.status = value;\n        return this;\n    };\n    /**\n     * @inheritDoc\n     */\n    Span.prototype.setHttpStatus = function (httpStatus) {\n        this.setTag('http.status_code', String(httpStatus));\n        var spanStatus = spanStatusfromHttpCode(httpStatus);\n        if (spanStatus !== 'unknown_error') {\n            this.setStatus(spanStatus);\n        }\n        return this;\n    };\n    /**\n     * @inheritDoc\n     */\n    Span.prototype.isSuccess = function () {\n        return this.status === 'ok';\n    };\n    /**\n     * @inheritDoc\n     */\n    Span.prototype.finish = function (endTimestamp) {\n        this.endTimestamp = typeof endTimestamp === 'number' ? endTimestamp : timestampWithMs();\n    };\n    /**\n     * @inheritDoc\n     */\n    Span.prototype.toTraceparent = function () {\n        var sampledString = '';\n        if (this.sampled !== undefined) {\n            sampledString = this.sampled ? '-1' : '-0';\n        }\n        return this.traceId + \"-\" + this.spanId + sampledString;\n    };\n    /**\n     * @inheritDoc\n     */\n    Span.prototype.toContext = function () {\n        return dropUndefinedKeys({\n            data: this.data,\n            description: this.description,\n            endTimestamp: this.endTimestamp,\n            op: this.op,\n            parentSpanId: this.parentSpanId,\n            sampled: this.sampled,\n            spanId: this.spanId,\n            startTimestamp: this.startTimestamp,\n            status: this.status,\n            tags: this.tags,\n            traceId: this.traceId,\n        });\n    };\n    /**\n     * @inheritDoc\n     */\n    Span.prototype.updateWithContext = function (spanContext) {\n        var _a, _b, _c, _d, _e;\n        this.data = (_a = spanContext.data, (_a !== null && _a !== void 0 ? _a : {}));\n        this.description = spanContext.description;\n        this.endTimestamp = spanContext.endTimestamp;\n        this.op = spanContext.op;\n        this.parentSpanId = spanContext.parentSpanId;\n        this.sampled = spanContext.sampled;\n        this.spanId = (_b = spanContext.spanId, (_b !== null && _b !== void 0 ? _b : this.spanId));\n        this.startTimestamp = (_c = spanContext.startTimestamp, (_c !== null && _c !== void 0 ? _c : this.startTimestamp));\n        this.status = spanContext.status;\n        this.tags = (_d = spanContext.tags, (_d !== null && _d !== void 0 ? _d : {}));\n        this.traceId = (_e = spanContext.traceId, (_e !== null && _e !== void 0 ? _e : this.traceId));\n        return this;\n    };\n    /**\n     * @inheritDoc\n     */\n    Span.prototype.getTraceContext = function () {\n        return dropUndefinedKeys({\n            data: Object.keys(this.data).length > 0 ? this.data : undefined,\n            description: this.description,\n            op: this.op,\n            parent_span_id: this.parentSpanId,\n            span_id: this.spanId,\n            status: this.status,\n            tags: Object.keys(this.tags).length > 0 ? this.tags : undefined,\n            trace_id: this.traceId,\n        });\n    };\n    /**\n     * @inheritDoc\n     */\n    Span.prototype.toJSON = function () {\n        return dropUndefinedKeys({\n            data: Object.keys(this.data).length > 0 ? this.data : undefined,\n            description: this.description,\n            op: this.op,\n            parent_span_id: this.parentSpanId,\n            span_id: this.spanId,\n            start_timestamp: this.startTimestamp,\n            status: this.status,\n            tags: Object.keys(this.tags).length > 0 ? this.tags : undefined,\n            timestamp: this.endTimestamp,\n            trace_id: this.traceId,\n        });\n    };\n    return Span;\n}());\nexport { Span };\n/**\n * Converts a HTTP status code into a {@link SpanStatusType}.\n *\n * @param httpStatus The HTTP response status code.\n * @returns The span status or unknown_error.\n */\nexport function spanStatusfromHttpCode(httpStatus) {\n    if (httpStatus < 400 && httpStatus >= 100) {\n        return 'ok';\n    }\n    if (httpStatus >= 400 && httpStatus < 500) {\n        switch (httpStatus) {\n            case 401:\n                return 'unauthenticated';\n            case 403:\n                return 'permission_denied';\n            case 404:\n                return 'not_found';\n            case 409:\n                return 'already_exists';\n            case 413:\n                return 'failed_precondition';\n            case 429:\n                return 'resource_exhausted';\n            default:\n                return 'invalid_argument';\n        }\n    }\n    if (httpStatus >= 500 && httpStatus < 600) {\n        switch (httpStatus) {\n            case 501:\n                return 'unimplemented';\n            case 503:\n                return 'unavailable';\n            case 504:\n                return 'deadline_exceeded';\n            default:\n                return 'internal_error';\n        }\n    }\n    return 'unknown_error';\n}\n//# sourceMappingURL=span.js.map","import { __assign, __extends } from \"tslib\";\nimport { getCurrentHub, Hub } from '@sentry/hub';\nimport { dropUndefinedKeys, isInstanceOf, logger } from '@sentry/utils';\nimport { IS_DEBUG_BUILD } from './flags';\nimport { Span as SpanClass, SpanRecorder } from './span';\n/** JSDoc */\nvar Transaction = /** @class */ (function (_super) {\n    __extends(Transaction, _super);\n    /**\n     * This constructor should never be called manually. Those instrumenting tracing should use\n     * `Sentry.startTransaction()`, and internal methods should use `hub.startTransaction()`.\n     * @internal\n     * @hideconstructor\n     * @hidden\n     */\n    function Transaction(transactionContext, hub) {\n        var _this = _super.call(this, transactionContext) || this;\n        _this._measurements = {};\n        /**\n         * The reference to the current hub.\n         */\n        _this._hub = getCurrentHub();\n        if (isInstanceOf(hub, Hub)) {\n            _this._hub = hub;\n        }\n        _this.name = transactionContext.name || '';\n        _this.metadata = transactionContext.metadata || {};\n        _this._trimEnd = transactionContext.trimEnd;\n        // this is because transactions are also spans, and spans have a transaction pointer\n        _this.transaction = _this;\n        return _this;\n    }\n    /**\n     * JSDoc\n     */\n    Transaction.prototype.setName = function (name) {\n        this.name = name;\n    };\n    /**\n     * Attaches SpanRecorder to the span itself\n     * @param maxlen maximum number of spans that can be recorded\n     */\n    Transaction.prototype.initSpanRecorder = function (maxlen) {\n        if (maxlen === void 0) { maxlen = 1000; }\n        if (!this.spanRecorder) {\n            this.spanRecorder = new SpanRecorder(maxlen);\n        }\n        this.spanRecorder.add(this);\n    };\n    /**\n     * Set observed measurements for this transaction.\n     * @hidden\n     */\n    Transaction.prototype.setMeasurements = function (measurements) {\n        this._measurements = __assign({}, measurements);\n    };\n    /**\n     * Set metadata for this transaction.\n     * @hidden\n     */\n    Transaction.prototype.setMetadata = function (newMetadata) {\n        this.metadata = __assign(__assign({}, this.metadata), newMetadata);\n    };\n    /**\n     * @inheritDoc\n     */\n    Transaction.prototype.finish = function (endTimestamp) {\n        var _this = this;\n        // This transaction is already finished, so we should not flush it again.\n        if (this.endTimestamp !== undefined) {\n            return undefined;\n        }\n        if (!this.name) {\n            IS_DEBUG_BUILD && logger.warn('Transaction has no name, falling back to `<unlabeled transaction>`.');\n            this.name = '<unlabeled transaction>';\n        }\n        // just sets the end timestamp\n        _super.prototype.finish.call(this, endTimestamp);\n        if (this.sampled !== true) {\n            // At this point if `sampled !== true` we want to discard the transaction.\n            IS_DEBUG_BUILD && logger.log('[Tracing] Discarding transaction because its trace was not chosen to be sampled.');\n            var client = this._hub.getClient();\n            var transport = client && client.getTransport && client.getTransport();\n            if (transport && transport.recordLostEvent) {\n                transport.recordLostEvent('sample_rate', 'transaction');\n            }\n            return undefined;\n        }\n        var finishedSpans = this.spanRecorder ? this.spanRecorder.spans.filter(function (s) { return s !== _this && s.endTimestamp; }) : [];\n        if (this._trimEnd && finishedSpans.length > 0) {\n            this.endTimestamp = finishedSpans.reduce(function (prev, current) {\n                if (prev.endTimestamp && current.endTimestamp) {\n                    return prev.endTimestamp > current.endTimestamp ? prev : current;\n                }\n                return prev;\n            }).endTimestamp;\n        }\n        var transaction = {\n            contexts: {\n                trace: this.getTraceContext(),\n            },\n            spans: finishedSpans,\n            start_timestamp: this.startTimestamp,\n            tags: this.tags,\n            timestamp: this.endTimestamp,\n            transaction: this.name,\n            type: 'transaction',\n            sdkProcessingMetadata: this.metadata,\n        };\n        var hasMeasurements = Object.keys(this._measurements).length > 0;\n        if (hasMeasurements) {\n            IS_DEBUG_BUILD &&\n                logger.log('[Measurements] Adding measurements to transaction', JSON.stringify(this._measurements, undefined, 2));\n            transaction.measurements = this._measurements;\n        }\n        IS_DEBUG_BUILD && logger.log(\"[Tracing] Finishing \" + this.op + \" transaction: \" + this.name + \".\");\n        return this._hub.captureEvent(transaction);\n    };\n    /**\n     * @inheritDoc\n     */\n    Transaction.prototype.toContext = function () {\n        var spanContext = _super.prototype.toContext.call(this);\n        return dropUndefinedKeys(__assign(__assign({}, spanContext), { name: this.name, trimEnd: this._trimEnd }));\n    };\n    /**\n     * @inheritDoc\n     */\n    Transaction.prototype.updateWithContext = function (transactionContext) {\n        var _a;\n        _super.prototype.updateWithContext.call(this, transactionContext);\n        this.name = (_a = transactionContext.name, (_a !== null && _a !== void 0 ? _a : ''));\n        this._trimEnd = transactionContext.trimEnd;\n        return this;\n    };\n    return Transaction;\n}(SpanClass));\nexport { Transaction };\n//# sourceMappingURL=transaction.js.map","import { getCurrentHub } from '@sentry/hub';\n/**\n * The `extractTraceparentData` function and `TRACEPARENT_REGEXP` constant used\n * to be declared in this file. It was later moved into `@sentry/utils` as part of a\n * move to remove `@sentry/tracing` dependencies from `@sentry/node` (`extractTraceparentData`\n * is the only tracing function used by `@sentry/node`).\n *\n * These exports are kept here for backwards compatability's sake.\n *\n * TODO(v7): Reorganize these exports\n *\n * See https://github.com/getsentry/sentry-javascript/issues/4642 for more details.\n */\nexport { TRACEPARENT_REGEXP, extractTraceparentData } from '@sentry/utils';\n/**\n * Determines if tracing is currently enabled.\n *\n * Tracing is enabled when at least one of `tracesSampleRate` and `tracesSampler` is defined in the SDK config.\n */\nexport function hasTracingEnabled(maybeOptions) {\n    var client = getCurrentHub().getClient();\n    var options = maybeOptions || (client && client.getOptions());\n    return !!options && ('tracesSampleRate' in options || 'tracesSampler' in options);\n}\n/** Grabs active transaction off scope, if any */\nexport function getActiveTransaction(maybeHub) {\n    var hub = maybeHub || getCurrentHub();\n    var scope = hub.getScope();\n    return scope && scope.getTransaction();\n}\n/**\n * Converts from milliseconds to seconds\n * @param time time in ms\n */\nexport function msToSec(time) {\n    return time / 1000;\n}\n/**\n * Converts from seconds to milliseconds\n * @param time time in seconds\n */\nexport function secToMs(time) {\n    return time * 1000;\n}\n// so it can be used in manual instrumentation without necessitating a hard dependency on @sentry/utils\nexport { stripUrlQueryAndFragment } from '@sentry/utils';\n//# sourceMappingURL=utils.js.map"],"names":["SENTRY_API_VERSION","API","dsn","metadata","tunnel","this","_dsnObject","_tunnel","prototype","getDsn","forceEnvelope","getBaseApiEndpoint","getStoreEndpoint","getStoreEndpointWithUrlEncodedAuth","getEnvelopeEndpointWithUrlEncodedAuth","initAPIDetails","initDsn","protocol","port","host","path","_getIngestEndpoint","target","projectId","_encodedAuth","sentry_key","publicKey","sentry_version","_getEnvelopeEndpoint","getReportDialogEndpoint","dsnLike","dialogOptions","endpoint","encodedOptions","key","user","name","encodeURIComponent","email","NoopTransport","sendEvent","_","reason","status","close","BaseBackend","options","_options","logger","_transport","_setupTransport","eventFromException","_exception","_hint","eventFromMessage","_message","_level","event","_newTransport","_experiments","newTransport","api","_metadata","env","send","then","sendSession","session","_a","getTransport","installedIntegrations","filterDuplicates","integrations","reduce","acc","every","accIntegration","push","getIntegrationsToSetup","defaultIntegrations","userIntegrations","Array","isArray","filter","userIntegration","integrationsNames","map","i","alwaysLastToRun","indexOf","apply","splice","setupIntegration","integration","setupOnce","log","setupIntegrations","forEach","ALREADY_SEEN_ERROR","BaseClient","backendClass","_integrations","_numProcessing","_backend","_dsn","captureException","exception","hint","scope","_this","eventId","event_id","_process","_getBackend","_captureEvent","result","captureMessage","message","level","promisedEvent","is","String","captureEvent","originalException","captureSession","_isEnabled","release","_sendSession","update","init","getOptions","flush","timeout","_isClientDoneProcessing","clientFinished","transportFlushed","enabled","initialized","getIntegration","id","_oO","_updateSessionFromEvent","e_1","crashed","errored","exceptions","values","exceptions_1","exceptions_1_1","next","done","ex","value","mechanism","handled","e_1_1","error","return","call","sessionNonTerminal","shouldUpdateAndSend","errors","Number","resolve","ticked","tick","interval","setInterval","clearInterval","undefined","_prepareEvent","_b","normalizeDepth","_c","normalizeMaxBreadth","prepared","timestamp","_applyClientOptions","_applyIntegrationsMetadata","finalScope","captureContext","applyToEvent","evt","sdkProcessingMetadata","normalize","_normalizeEvent","depth","maxBreadth","normalized","breadcrumbs","b","data","contexts","extra","trace","baseClientNormalized","environment","dist","maxValueLength","request","url","integrationsArray","Object","keys","length","sdk","_sendEvent","_processEvent","finalEvent","beforeSend","sampleRate","transport","recordLostEvent","outcome","category","isTransaction","type","Math","random","isInternalException","__sentry__","beforeSendResult","_ensureBeforeSendRv","processedEvent","getSession","promise","rv","nullErr","e","IS_DEBUG_BUILD","__SENTRY_DEBUG__","originalFunctionToString","FunctionToString","Function","toString","args","_i","arguments","context","DEFAULT_IGNORE_ERRORS","InboundFilters","addGlobalEventProcessor","getCurrentHub","hub","self_1","client","getClient","clientOptions","_mergeOptions","_shouldDropEvent","internalOptions","allowUrls","whitelistUrls","denyUrls","blacklistUrls","ignoreErrors","ignoreInternal","_isSentryError","_isIgnoredError","_isDeniedUrl","_getEventFilterUrl","_isAllowedUrl","_getPossibleEventMessages","some","pattern","oO","_getLastValidUrl","frames","frame","filename","stacktrace","frames_1","getSdkMetadataForEnvelopeHeader","version","enhanceEventWithSdkInfo","sdkInfo","packages","createSessionEnvelope","envelopeHeaders","sent_at","Date","toISOString","envelopeItem","envelope","sessionToSentryRequest","body","createEventEnvelope","eventType","transactionSampling","samplingMethod","method","rate","tags","skippedNormalization","eventItem","sample_rates","eventToSentryRequest","useEnvelope","JSON","stringify","err","JSONStringifyError","newErr","innerErr","stack","req","initAndBind","clientClass","debug","console","warn","getScope","initialScope","bindClient","DEFAULT_TRANSPORT_BUFFER_SIZE","createTransport","makeRequest","buffer","bufferSize","rateLimits","drain","envCategory","getRateLimitReason","requestTask","headers","statusCode","add","SDK_VERSION","Session","sid","duration","ignoreDuration","startingTime","time","started","ipAddress","ip_address","did","username","userAgent","toJSON","attrs","user_agent","API_VERSION","DEFAULT_BREADCRUMBS","Hub","_version","_stack","getStackTop","isOlderThan","top","pushScope","getStack","popScope","pop","withScope","callback","_lastEventId","finalHint","syntheticException","Error","_invokeClient","lastEventId","addBreadcrumb","breadcrumb","beforeBreadcrumb","_d","maxBreadcrumbs","mergedBreadcrumb","finalBreadcrumb","setUser","setTags","setExtras","extras","setTag","setExtra","setContext","configureScope","run","oldHub","makeMain","startSpan","_callExtensionMethod","startTransaction","customSamplingContext","traceHeaders","endSession","_sendSessionUpdate","layer","setSession","startSession","global","navigator","getUser","currentSession","carrier","getMainCarrier","sentry","__SENTRY__","extensions","registry","getHubFromCarrier","setHubOnCarrier","hasHubOnCarrier","getHubFromActiveDomain","activeDomain","domain","active","registryHubTopStack","_Oo","MAX_BREADCRUMBS","Scope","_notifyingListeners","_scopeListeners","_eventProcessors","_breadcrumbs","_user","_tags","_extra","_contexts","_sdkProcessingMetadata","clone","newScope","_span","_session","_transactionName","_fingerprint","_requestSession","addScopeListener","addEventProcessor","_notifyScopeListeners","getRequestSession","setRequestSession","requestSession","setFingerprint","fingerprint","setLevel","setTransactionName","setTransaction","setSpan","span","getSpan","getTransaction","transaction","updatedScope","clear","maxCrumbs","min","slice","clearBreadcrumbs","getTraceContext","transactionName","_applyFingerprint","_notifyEventProcessors","getGlobalEventProcessors","setSDKProcessingMetadata","newData","processors","index","reject","processor","final","concat","callOnHub","registerBackgroundTabDetection","document","addEventListener","activeTransaction","hidden","statusType","op","setStatus","finish","getCLS","onReport","reportAllChanges","report","metric","initMetric","sessionValue","sessionEntries","entryHandler","entry","hadRecentInput","firstSessionEntry","lastSessionEntry","startTime","entries","po","observe","bindReporter","onHidden","takeRecords","getFID","visibilityWatcher","getVisibilityWatcher","firstHiddenTime","processingStart","disconnect","reportedMetricIDs","getLCP","stopListening_1","once","capture","MetricsInstrumentation","_reportAllChanges","_measurements","_performanceCursor","performance","mark","_trackCLS","_trackLCP","_trackFID","addPerformanceEntries","getEntries","responseStartTimestamp","requestStartTimestamp","timeOrigin","startTimestamp","entryType","addNavigationSpans","responseStart","requestStart","addMeasureSpans","firstHidden","shouldRecord","resourceName","replace","location","origin","addResourceSpans","max","_trackNavigator","timeOrigin_1","oldValue","measurementTimestamp","normalizedValue","abs","delta","_startChild","description","endTimestamp","cls","setMeasurements","tagMetricInfo","_lcpEntry","_clsEntry","connection","effectiveType","isMeasurementValue","rtt","downlink","deviceMemory","hardwareConcurrency","addPerformanceNavigationTiming","addRequest","measureStartTimestamp","measureEndTimestamp","initiatorType","transferSize","encodedBodySize","decodedBodySize","eventEnd","end","start","responseEnd","ctx","startChild","isFinite","lcpEntry","clsEntry","element","trim","size","sources","source","node","DEFAULT_TRACING_ORIGINS","defaultRequestInstrumentationOptions","traceFetch","traceXHR","tracingOrigins","instrumentOutgoingRequests","shouldCreateSpanForRequest","urlMap","defaultShouldCreateSpan","origins","shouldCreateSpan","spans","handlerData","fetchCallback","xhrCallback","fetchData","spanId","__span","response","setHttpStatus","Request","append","toTraceparent","xhr","__sentry_own_request__","__sentry_xhr__","__sentry_xhr_span_id__","status_code","setRequestHeader","instrumentRoutingWithDefaults","customStartTransaction","startTransactionOnPageLoad","startTransactionOnLocationChange","startingUrl","href","pathname","to","from","DEFAULT_MAX_TRANSACTION_DURATION_SECONDS","DEFAULT_BROWSER_TRACING_OPTIONS","idleTimeout","markBackgroundTransactions","maxTransactionDuration","routingInstrumentation","BrowserTracing","_configuredIdleTimeout","_emitOptionsWarning","_metricOptions","_metrics","_getCurrentHub","instrumentRouting","_createRouteTransaction","beforeNavigate","parentContextFromHeader","getHeaderContext","expandedContext","trimEnd","modifiedContext","finalContext","sampled","idleTransaction","registerBeforeFinishCallback","adjustTransactionDuration","header","getMetaContent","metaName","el","querySelector","getAttribute","maxDuration","diff","isOutdatedTransaction","prevValue","forceReport","generateUniqueID","now","floor","initHiddenTime","visibilityState","Infinity","trackChanges","timeStamp","PerformanceObserver","supportedEntryTypes","includes","self","l","buffered","cb","onHiddenOrPageHide","removeEventListener","FINISH_REASON_TAG","IDLE_TRANSACTION_FINISH_REASONS","registerErrorInstrumentation","errorCallback","status_1","sample","samplingContext","setMetadata","tracesSampler","parentSampled","tracesSampleRate","isValidSampleRate","_startTransaction","transactionContext","initSpanRecorder","maxSpans","startIdleTransaction","onScope","_addTracingExtensions","_autoloadDatabaseIntegrations","packageToIntegrationMapping","mongodb","module","Mongo","mongoose","mysql","Mysql","pg","Postgres","mappedPackages","moduleName","pkg","p","addExtensionMethods","DEFAULT_IDLE_TIMEOUT","HEARTBEAT_INTERVAL","IdleTransactionSpanRecorder","_super","_pushActivity","_popActivity","transactionSpanId","maxlen","IdleTransaction","_idleHub","_idleTimeout","_onScope","activities","_heartbeatCounter","_finished","_beforeFinishCallbacks","clearActiveTransaction","_initTimeout","setTimeout","spanRecorder","keepSpan","pushActivity","popActivity","_pingHeartbeat","clearTimeout","end_1","_beat","heartbeatString","join","_prevHeartbeatString","SpanRecorder","_maxlen","Span","spanContext","traceId","substring","parentSpanId","child","childSpan","setData","httpStatus","spanStatus","spanStatusfromHttpCode","isSuccess","sampledString","toContext","updateWithContext","_e","parent_span_id","span_id","trace_id","start_timestamp","Transaction","_hub","_trimEnd","setName","measurements","newMetadata","finishedSpans","s","prev","current","hasMeasurements","hasTracingEnabled","maybeOptions","getActiveTransaction","maybeHub","msToSec","secToMs"],"sourceRoot":""}