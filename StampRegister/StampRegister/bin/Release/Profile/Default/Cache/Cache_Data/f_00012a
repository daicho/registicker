{"version":3,"file":"js/chunk-vendors-1656f0b4.daa4febb.js","mappings":"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","sources":["webpack://@creators/cms-next/./node_modules/@vue/devtools-api/lib/esm/const.js","webpack://@creators/cms-next/./node_modules/@vue/devtools-api/lib/esm/env.js","webpack://@creators/cms-next/./node_modules/@vue/devtools-api/lib/esm/index.js","webpack://@creators/cms-next/./node_modules/@vue/devtools-api/lib/esm/proxy.js","webpack://@creators/cms-next/./node_modules/@vue/devtools-api/lib/esm/time.js","webpack://@creators/cms-next/./node_modules/vue-query/node_modules/vue-demi/lib/index.esm.js","webpack://@creators/cms-next/./node_modules/@vue/compiler-core/dist/compiler-core.esm-bundler.js","webpack://@creators/cms-next/./node_modules/@vue/compiler-dom/dist/compiler-dom.esm-bundler.js","webpack://@creators/cms-next/./node_modules/vue/dist/vue.esm-bundler.js"],"sourcesContent":["export const HOOK_SETUP = 'devtools-plugin:setup';\nexport const HOOK_PLUGIN_SETTINGS_SET = 'plugin:settings:set';\n","export function getDevtoolsGlobalHook() {\n    return getTarget().__VUE_DEVTOOLS_GLOBAL_HOOK__;\n}\nexport function getTarget() {\n    // @ts-ignore\n    return (typeof navigator !== 'undefined' && typeof window !== 'undefined')\n        ? window\n        : typeof global !== 'undefined'\n            ? global\n            : {};\n}\nexport const isProxyAvailable = typeof Proxy === 'function';\n","import { getTarget, getDevtoolsGlobalHook, isProxyAvailable } from './env';\nimport { HOOK_SETUP } from './const';\nimport { ApiProxy } from './proxy';\nexport * from './api';\nexport * from './plugin';\nexport * from './time';\nexport function setupDevtoolsPlugin(pluginDescriptor, setupFn) {\n    const descriptor = pluginDescriptor;\n    const target = getTarget();\n    const hook = getDevtoolsGlobalHook();\n    const enableProxy = isProxyAvailable && descriptor.enableEarlyProxy;\n    if (hook && (target.__VUE_DEVTOOLS_PLUGIN_API_AVAILABLE__ || !enableProxy)) {\n        hook.emit(HOOK_SETUP, pluginDescriptor, setupFn);\n    }\n    else {\n        const proxy = enableProxy ? new ApiProxy(descriptor, hook) : null;\n        const list = target.__VUE_DEVTOOLS_PLUGINS__ = target.__VUE_DEVTOOLS_PLUGINS__ || [];\n        list.push({\n            pluginDescriptor: descriptor,\n            setupFn,\n            proxy,\n        });\n        if (proxy)\n            setupFn(proxy.proxiedTarget);\n    }\n}\n","import { HOOK_PLUGIN_SETTINGS_SET } from './const';\nimport { now } from './time';\nexport class ApiProxy {\n    constructor(plugin, hook) {\n        this.target = null;\n        this.targetQueue = [];\n        this.onQueue = [];\n        this.plugin = plugin;\n        this.hook = hook;\n        const defaultSettings = {};\n        if (plugin.settings) {\n            for (const id in plugin.settings) {\n                const item = plugin.settings[id];\n                defaultSettings[id] = item.defaultValue;\n            }\n        }\n        const localSettingsSaveId = `__vue-devtools-plugin-settings__${plugin.id}`;\n        let currentSettings = Object.assign({}, defaultSettings);\n        try {\n            const raw = localStorage.getItem(localSettingsSaveId);\n            const data = JSON.parse(raw);\n            Object.assign(currentSettings, data);\n        }\n        catch (e) {\n            // noop\n        }\n        this.fallbacks = {\n            getSettings() {\n                return currentSettings;\n            },\n            setSettings(value) {\n                try {\n                    localStorage.setItem(localSettingsSaveId, JSON.stringify(value));\n                }\n                catch (e) {\n                    // noop\n                }\n                currentSettings = value;\n            },\n            now() {\n                return now();\n            },\n        };\n        if (hook) {\n            hook.on(HOOK_PLUGIN_SETTINGS_SET, (pluginId, value) => {\n                if (pluginId === this.plugin.id) {\n                    this.fallbacks.setSettings(value);\n                }\n            });\n        }\n        this.proxiedOn = new Proxy({}, {\n            get: (_target, prop) => {\n                if (this.target) {\n                    return this.target.on[prop];\n                }\n                else {\n                    return (...args) => {\n                        this.onQueue.push({\n                            method: prop,\n                            args,\n                        });\n                    };\n                }\n            },\n        });\n        this.proxiedTarget = new Proxy({}, {\n            get: (_target, prop) => {\n                if (this.target) {\n                    return this.target[prop];\n                }\n                else if (prop === 'on') {\n                    return this.proxiedOn;\n                }\n                else if (Object.keys(this.fallbacks).includes(prop)) {\n                    return (...args) => {\n                        this.targetQueue.push({\n                            method: prop,\n                            args,\n                            resolve: () => { },\n                        });\n                        return this.fallbacks[prop](...args);\n                    };\n                }\n                else {\n                    return (...args) => {\n                        return new Promise(resolve => {\n                            this.targetQueue.push({\n                                method: prop,\n                                args,\n                                resolve,\n                            });\n                        });\n                    };\n                }\n            },\n        });\n    }\n    async setRealTarget(target) {\n        this.target = target;\n        for (const item of this.onQueue) {\n            this.target.on[item.method](...item.args);\n        }\n        for (const item of this.targetQueue) {\n            item.resolve(await this.target[item.method](...item.args));\n        }\n    }\n}\n","let supported;\nlet perf;\nexport function isPerformanceSupported() {\n    var _a;\n    if (supported !== undefined) {\n        return supported;\n    }\n    if (typeof window !== 'undefined' && window.performance) {\n        supported = true;\n        perf = window.performance;\n    }\n    else if (typeof global !== 'undefined' && ((_a = global.perf_hooks) === null || _a === void 0 ? void 0 : _a.performance)) {\n        supported = true;\n        perf = global.perf_hooks.performance;\n    }\n    else {\n        supported = false;\n    }\n    return supported;\n}\nexport function now() {\n    return isPerformanceSupported() ? perf.now() : Date.now();\n}\n","import * as Vue from 'vue'\n\nvar isVue2 = false\nvar isVue3 = true\nvar Vue2 = undefined\n\nfunction install() {}\n\nexport function set(target, key, val) {\n  if (Array.isArray(target)) {\n    target.length = Math.max(target.length, key)\n    target.splice(key, 1, val)\n    return val\n  }\n  target[key] = val\n  return val\n}\n\nexport function del(target, key) {\n  if (Array.isArray(target)) {\n    target.splice(key, 1)\n    return\n  }\n  delete target[key]\n}\n\nexport * from 'vue'\nexport {\n  Vue,\n  Vue2,\n  isVue2,\n  isVue3,\n  install,\n}\n","import { isString, hyphenate, NOOP, extend, isObject, NO, isArray, makeMap, isSymbol, EMPTY_OBJ, capitalize, camelize as camelize$1, PatchFlagNames, slotFlagsText, isOn, isBuiltInDirective, isReservedProp, toHandlerKey } from '@vue/shared';\nexport { generateCodeFrame } from '@vue/shared';\n\nfunction defaultOnError(error) {\r\n    throw error;\r\n}\r\nfunction defaultOnWarn(msg) {\r\n    (process.env.NODE_ENV !== 'production') && console.warn(`[Vue warn] ${msg.message}`);\r\n}\r\nfunction createCompilerError(code, loc, messages, additionalMessage) {\r\n    const msg = (process.env.NODE_ENV !== 'production') || !true\r\n        ? (messages || errorMessages)[code] + (additionalMessage || ``)\r\n        : code;\r\n    const error = new SyntaxError(String(msg));\r\n    error.code = code;\r\n    error.loc = loc;\r\n    return error;\r\n}\r\nconst errorMessages = {\r\n    // parse errors\r\n    [0 /* ABRUPT_CLOSING_OF_EMPTY_COMMENT */]: 'Illegal comment.',\r\n    [1 /* CDATA_IN_HTML_CONTENT */]: 'CDATA section is allowed only in XML context.',\r\n    [2 /* DUPLICATE_ATTRIBUTE */]: 'Duplicate attribute.',\r\n    [3 /* END_TAG_WITH_ATTRIBUTES */]: 'End tag cannot have attributes.',\r\n    [4 /* END_TAG_WITH_TRAILING_SOLIDUS */]: \"Illegal '/' in tags.\",\r\n    [5 /* EOF_BEFORE_TAG_NAME */]: 'Unexpected EOF in tag.',\r\n    [6 /* EOF_IN_CDATA */]: 'Unexpected EOF in CDATA section.',\r\n    [7 /* EOF_IN_COMMENT */]: 'Unexpected EOF in comment.',\r\n    [8 /* EOF_IN_SCRIPT_HTML_COMMENT_LIKE_TEXT */]: 'Unexpected EOF in script.',\r\n    [9 /* EOF_IN_TAG */]: 'Unexpected EOF in tag.',\r\n    [10 /* INCORRECTLY_CLOSED_COMMENT */]: 'Incorrectly closed comment.',\r\n    [11 /* INCORRECTLY_OPENED_COMMENT */]: 'Incorrectly opened comment.',\r\n    [12 /* INVALID_FIRST_CHARACTER_OF_TAG_NAME */]: \"Illegal tag name. Use '&lt;' to print '<'.\",\r\n    [13 /* MISSING_ATTRIBUTE_VALUE */]: 'Attribute value was expected.',\r\n    [14 /* MISSING_END_TAG_NAME */]: 'End tag name was expected.',\r\n    [15 /* MISSING_WHITESPACE_BETWEEN_ATTRIBUTES */]: 'Whitespace was expected.',\r\n    [16 /* NESTED_COMMENT */]: \"Unexpected '<!--' in comment.\",\r\n    [17 /* UNEXPECTED_CHARACTER_IN_ATTRIBUTE_NAME */]: 'Attribute name cannot contain U+0022 (\"), U+0027 (\\'), and U+003C (<).',\r\n    [18 /* UNEXPECTED_CHARACTER_IN_UNQUOTED_ATTRIBUTE_VALUE */]: 'Unquoted attribute value cannot contain U+0022 (\"), U+0027 (\\'), U+003C (<), U+003D (=), and U+0060 (`).',\r\n    [19 /* UNEXPECTED_EQUALS_SIGN_BEFORE_ATTRIBUTE_NAME */]: \"Attribute name cannot start with '='.\",\r\n    [21 /* UNEXPECTED_QUESTION_MARK_INSTEAD_OF_TAG_NAME */]: \"'<?' is allowed only in XML context.\",\r\n    [20 /* UNEXPECTED_NULL_CHARACTER */]: `Unexpected null character.`,\r\n    [22 /* UNEXPECTED_SOLIDUS_IN_TAG */]: \"Illegal '/' in tags.\",\r\n    // Vue-specific parse errors\r\n    [23 /* X_INVALID_END_TAG */]: 'Invalid end tag.',\r\n    [24 /* X_MISSING_END_TAG */]: 'Element is missing end tag.',\r\n    [25 /* X_MISSING_INTERPOLATION_END */]: 'Interpolation end sign was not found.',\r\n    [27 /* X_MISSING_DYNAMIC_DIRECTIVE_ARGUMENT_END */]: 'End bracket for dynamic directive argument was not found. ' +\r\n        'Note that dynamic directive argument cannot contain spaces.',\r\n    [26 /* X_MISSING_DIRECTIVE_NAME */]: 'Legal directive name was expected.',\r\n    // transform errors\r\n    [28 /* X_V_IF_NO_EXPRESSION */]: `v-if/v-else-if is missing expression.`,\r\n    [29 /* X_V_IF_SAME_KEY */]: `v-if/else branches must use unique keys.`,\r\n    [30 /* X_V_ELSE_NO_ADJACENT_IF */]: `v-else/v-else-if has no adjacent v-if or v-else-if.`,\r\n    [31 /* X_V_FOR_NO_EXPRESSION */]: `v-for is missing expression.`,\r\n    [32 /* X_V_FOR_MALFORMED_EXPRESSION */]: `v-for has invalid expression.`,\r\n    [33 /* X_V_FOR_TEMPLATE_KEY_PLACEMENT */]: `<template v-for> key should be placed on the <template> tag.`,\r\n    [34 /* X_V_BIND_NO_EXPRESSION */]: `v-bind is missing expression.`,\r\n    [35 /* X_V_ON_NO_EXPRESSION */]: `v-on is missing expression.`,\r\n    [36 /* X_V_SLOT_UNEXPECTED_DIRECTIVE_ON_SLOT_OUTLET */]: `Unexpected custom directive on <slot> outlet.`,\r\n    [37 /* X_V_SLOT_MIXED_SLOT_USAGE */]: `Mixed v-slot usage on both the component and nested <template>.` +\r\n        `When there are multiple named slots, all slots should use <template> ` +\r\n        `syntax to avoid scope ambiguity.`,\r\n    [38 /* X_V_SLOT_DUPLICATE_SLOT_NAMES */]: `Duplicate slot names found. `,\r\n    [39 /* X_V_SLOT_EXTRANEOUS_DEFAULT_SLOT_CHILDREN */]: `Extraneous children found when component already has explicitly named ` +\r\n        `default slot. These children will be ignored.`,\r\n    [40 /* X_V_SLOT_MISPLACED */]: `v-slot can only be used on components or <template> tags.`,\r\n    [41 /* X_V_MODEL_NO_EXPRESSION */]: `v-model is missing expression.`,\r\n    [42 /* X_V_MODEL_MALFORMED_EXPRESSION */]: `v-model value must be a valid JavaScript member expression.`,\r\n    [43 /* X_V_MODEL_ON_SCOPE_VARIABLE */]: `v-model cannot be used on v-for or v-slot scope variables because they are not writable.`,\r\n    [44 /* X_INVALID_EXPRESSION */]: `Error parsing JavaScript expression: `,\r\n    [45 /* X_KEEP_ALIVE_INVALID_CHILDREN */]: `<KeepAlive> expects exactly one child component.`,\r\n    // generic errors\r\n    [46 /* X_PREFIX_ID_NOT_SUPPORTED */]: `\"prefixIdentifiers\" option is not supported in this build of compiler.`,\r\n    [47 /* X_MODULE_MODE_NOT_SUPPORTED */]: `ES module mode is not supported in this build of compiler.`,\r\n    [48 /* X_CACHE_HANDLER_NOT_SUPPORTED */]: `\"cacheHandlers\" option is only supported when the \"prefixIdentifiers\" option is enabled.`,\r\n    [49 /* X_SCOPE_ID_NOT_SUPPORTED */]: `\"scopeId\" option is only supported in module mode.`,\r\n    // just to fulfill types\r\n    [50 /* __EXTEND_POINT__ */]: ``\r\n};\n\nconst FRAGMENT = Symbol((process.env.NODE_ENV !== 'production') ? `Fragment` : ``);\r\nconst TELEPORT = Symbol((process.env.NODE_ENV !== 'production') ? `Teleport` : ``);\r\nconst SUSPENSE = Symbol((process.env.NODE_ENV !== 'production') ? `Suspense` : ``);\r\nconst KEEP_ALIVE = Symbol((process.env.NODE_ENV !== 'production') ? `KeepAlive` : ``);\r\nconst BASE_TRANSITION = Symbol((process.env.NODE_ENV !== 'production') ? `BaseTransition` : ``);\r\nconst OPEN_BLOCK = Symbol((process.env.NODE_ENV !== 'production') ? `openBlock` : ``);\r\nconst CREATE_BLOCK = Symbol((process.env.NODE_ENV !== 'production') ? `createBlock` : ``);\r\nconst CREATE_ELEMENT_BLOCK = Symbol((process.env.NODE_ENV !== 'production') ? `createElementBlock` : ``);\r\nconst CREATE_VNODE = Symbol((process.env.NODE_ENV !== 'production') ? `createVNode` : ``);\r\nconst CREATE_ELEMENT_VNODE = Symbol((process.env.NODE_ENV !== 'production') ? `createElementVNode` : ``);\r\nconst CREATE_COMMENT = Symbol((process.env.NODE_ENV !== 'production') ? `createCommentVNode` : ``);\r\nconst CREATE_TEXT = Symbol((process.env.NODE_ENV !== 'production') ? `createTextVNode` : ``);\r\nconst CREATE_STATIC = Symbol((process.env.NODE_ENV !== 'production') ? `createStaticVNode` : ``);\r\nconst RESOLVE_COMPONENT = Symbol((process.env.NODE_ENV !== 'production') ? `resolveComponent` : ``);\r\nconst RESOLVE_DYNAMIC_COMPONENT = Symbol((process.env.NODE_ENV !== 'production') ? `resolveDynamicComponent` : ``);\r\nconst RESOLVE_DIRECTIVE = Symbol((process.env.NODE_ENV !== 'production') ? `resolveDirective` : ``);\r\nconst RESOLVE_FILTER = Symbol((process.env.NODE_ENV !== 'production') ? `resolveFilter` : ``);\r\nconst WITH_DIRECTIVES = Symbol((process.env.NODE_ENV !== 'production') ? `withDirectives` : ``);\r\nconst RENDER_LIST = Symbol((process.env.NODE_ENV !== 'production') ? `renderList` : ``);\r\nconst RENDER_SLOT = Symbol((process.env.NODE_ENV !== 'production') ? `renderSlot` : ``);\r\nconst CREATE_SLOTS = Symbol((process.env.NODE_ENV !== 'production') ? `createSlots` : ``);\r\nconst TO_DISPLAY_STRING = Symbol((process.env.NODE_ENV !== 'production') ? `toDisplayString` : ``);\r\nconst MERGE_PROPS = Symbol((process.env.NODE_ENV !== 'production') ? `mergeProps` : ``);\r\nconst NORMALIZE_CLASS = Symbol((process.env.NODE_ENV !== 'production') ? `normalizeClass` : ``);\r\nconst NORMALIZE_STYLE = Symbol((process.env.NODE_ENV !== 'production') ? `normalizeStyle` : ``);\r\nconst NORMALIZE_PROPS = Symbol((process.env.NODE_ENV !== 'production') ? `normalizeProps` : ``);\r\nconst GUARD_REACTIVE_PROPS = Symbol((process.env.NODE_ENV !== 'production') ? `guardReactiveProps` : ``);\r\nconst TO_HANDLERS = Symbol((process.env.NODE_ENV !== 'production') ? `toHandlers` : ``);\r\nconst CAMELIZE = Symbol((process.env.NODE_ENV !== 'production') ? `camelize` : ``);\r\nconst CAPITALIZE = Symbol((process.env.NODE_ENV !== 'production') ? `capitalize` : ``);\r\nconst TO_HANDLER_KEY = Symbol((process.env.NODE_ENV !== 'production') ? `toHandlerKey` : ``);\r\nconst SET_BLOCK_TRACKING = Symbol((process.env.NODE_ENV !== 'production') ? `setBlockTracking` : ``);\r\nconst PUSH_SCOPE_ID = Symbol((process.env.NODE_ENV !== 'production') ? `pushScopeId` : ``);\r\nconst POP_SCOPE_ID = Symbol((process.env.NODE_ENV !== 'production') ? `popScopeId` : ``);\r\nconst WITH_CTX = Symbol((process.env.NODE_ENV !== 'production') ? `withCtx` : ``);\r\nconst UNREF = Symbol((process.env.NODE_ENV !== 'production') ? `unref` : ``);\r\nconst IS_REF = Symbol((process.env.NODE_ENV !== 'production') ? `isRef` : ``);\r\nconst WITH_MEMO = Symbol((process.env.NODE_ENV !== 'production') ? `withMemo` : ``);\r\nconst IS_MEMO_SAME = Symbol((process.env.NODE_ENV !== 'production') ? `isMemoSame` : ``);\r\n// Name mapping for runtime helpers that need to be imported from 'vue' in\r\n// generated code. Make sure these are correctly exported in the runtime!\r\n// Using `any` here because TS doesn't allow symbols as index type.\r\nconst helperNameMap = {\r\n    [FRAGMENT]: `Fragment`,\r\n    [TELEPORT]: `Teleport`,\r\n    [SUSPENSE]: `Suspense`,\r\n    [KEEP_ALIVE]: `KeepAlive`,\r\n    [BASE_TRANSITION]: `BaseTransition`,\r\n    [OPEN_BLOCK]: `openBlock`,\r\n    [CREATE_BLOCK]: `createBlock`,\r\n    [CREATE_ELEMENT_BLOCK]: `createElementBlock`,\r\n    [CREATE_VNODE]: `createVNode`,\r\n    [CREATE_ELEMENT_VNODE]: `createElementVNode`,\r\n    [CREATE_COMMENT]: `createCommentVNode`,\r\n    [CREATE_TEXT]: `createTextVNode`,\r\n    [CREATE_STATIC]: `createStaticVNode`,\r\n    [RESOLVE_COMPONENT]: `resolveComponent`,\r\n    [RESOLVE_DYNAMIC_COMPONENT]: `resolveDynamicComponent`,\r\n    [RESOLVE_DIRECTIVE]: `resolveDirective`,\r\n    [RESOLVE_FILTER]: `resolveFilter`,\r\n    [WITH_DIRECTIVES]: `withDirectives`,\r\n    [RENDER_LIST]: `renderList`,\r\n    [RENDER_SLOT]: `renderSlot`,\r\n    [CREATE_SLOTS]: `createSlots`,\r\n    [TO_DISPLAY_STRING]: `toDisplayString`,\r\n    [MERGE_PROPS]: `mergeProps`,\r\n    [NORMALIZE_CLASS]: `normalizeClass`,\r\n    [NORMALIZE_STYLE]: `normalizeStyle`,\r\n    [NORMALIZE_PROPS]: `normalizeProps`,\r\n    [GUARD_REACTIVE_PROPS]: `guardReactiveProps`,\r\n    [TO_HANDLERS]: `toHandlers`,\r\n    [CAMELIZE]: `camelize`,\r\n    [CAPITALIZE]: `capitalize`,\r\n    [TO_HANDLER_KEY]: `toHandlerKey`,\r\n    [SET_BLOCK_TRACKING]: `setBlockTracking`,\r\n    [PUSH_SCOPE_ID]: `pushScopeId`,\r\n    [POP_SCOPE_ID]: `popScopeId`,\r\n    [WITH_CTX]: `withCtx`,\r\n    [UNREF]: `unref`,\r\n    [IS_REF]: `isRef`,\r\n    [WITH_MEMO]: `withMemo`,\r\n    [IS_MEMO_SAME]: `isMemoSame`\r\n};\r\nfunction registerRuntimeHelpers(helpers) {\r\n    Object.getOwnPropertySymbols(helpers).forEach(s => {\r\n        helperNameMap[s] = helpers[s];\r\n    });\r\n}\n\n// AST Utilities ---------------------------------------------------------------\r\n// Some expressions, e.g. sequence and conditional expressions, are never\r\n// associated with template nodes, so their source locations are just a stub.\r\n// Container types like CompoundExpression also don't need a real location.\r\nconst locStub = {\r\n    source: '',\r\n    start: { line: 1, column: 1, offset: 0 },\r\n    end: { line: 1, column: 1, offset: 0 }\r\n};\r\nfunction createRoot(children, loc = locStub) {\r\n    return {\r\n        type: 0 /* ROOT */,\r\n        children,\r\n        helpers: [],\r\n        components: [],\r\n        directives: [],\r\n        hoists: [],\r\n        imports: [],\r\n        cached: 0,\r\n        temps: 0,\r\n        codegenNode: undefined,\r\n        loc\r\n    };\r\n}\r\nfunction createVNodeCall(context, tag, props, children, patchFlag, dynamicProps, directives, isBlock = false, disableTracking = false, isComponent = false, loc = locStub) {\r\n    if (context) {\r\n        if (isBlock) {\r\n            context.helper(OPEN_BLOCK);\r\n            context.helper(getVNodeBlockHelper(context.inSSR, isComponent));\r\n        }\r\n        else {\r\n            context.helper(getVNodeHelper(context.inSSR, isComponent));\r\n        }\r\n        if (directives) {\r\n            context.helper(WITH_DIRECTIVES);\r\n        }\r\n    }\r\n    return {\r\n        type: 13 /* VNODE_CALL */,\r\n        tag,\r\n        props,\r\n        children,\r\n        patchFlag,\r\n        dynamicProps,\r\n        directives,\r\n        isBlock,\r\n        disableTracking,\r\n        isComponent,\r\n        loc\r\n    };\r\n}\r\nfunction createArrayExpression(elements, loc = locStub) {\r\n    return {\r\n        type: 17 /* JS_ARRAY_EXPRESSION */,\r\n        loc,\r\n        elements\r\n    };\r\n}\r\nfunction createObjectExpression(properties, loc = locStub) {\r\n    return {\r\n        type: 15 /* JS_OBJECT_EXPRESSION */,\r\n        loc,\r\n        properties\r\n    };\r\n}\r\nfunction createObjectProperty(key, value) {\r\n    return {\r\n        type: 16 /* JS_PROPERTY */,\r\n        loc: locStub,\r\n        key: isString(key) ? createSimpleExpression(key, true) : key,\r\n        value\r\n    };\r\n}\r\nfunction createSimpleExpression(content, isStatic = false, loc = locStub, constType = 0 /* NOT_CONSTANT */) {\r\n    return {\r\n        type: 4 /* SIMPLE_EXPRESSION */,\r\n        loc,\r\n        content,\r\n        isStatic,\r\n        constType: isStatic ? 3 /* CAN_STRINGIFY */ : constType\r\n    };\r\n}\r\nfunction createInterpolation(content, loc) {\r\n    return {\r\n        type: 5 /* INTERPOLATION */,\r\n        loc,\r\n        content: isString(content)\r\n            ? createSimpleExpression(content, false, loc)\r\n            : content\r\n    };\r\n}\r\nfunction createCompoundExpression(children, loc = locStub) {\r\n    return {\r\n        type: 8 /* COMPOUND_EXPRESSION */,\r\n        loc,\r\n        children\r\n    };\r\n}\r\nfunction createCallExpression(callee, args = [], loc = locStub) {\r\n    return {\r\n        type: 14 /* JS_CALL_EXPRESSION */,\r\n        loc,\r\n        callee,\r\n        arguments: args\r\n    };\r\n}\r\nfunction createFunctionExpression(params, returns = undefined, newline = false, isSlot = false, loc = locStub) {\r\n    return {\r\n        type: 18 /* JS_FUNCTION_EXPRESSION */,\r\n        params,\r\n        returns,\r\n        newline,\r\n        isSlot,\r\n        loc\r\n    };\r\n}\r\nfunction createConditionalExpression(test, consequent, alternate, newline = true) {\r\n    return {\r\n        type: 19 /* JS_CONDITIONAL_EXPRESSION */,\r\n        test,\r\n        consequent,\r\n        alternate,\r\n        newline,\r\n        loc: locStub\r\n    };\r\n}\r\nfunction createCacheExpression(index, value, isVNode = false) {\r\n    return {\r\n        type: 20 /* JS_CACHE_EXPRESSION */,\r\n        index,\r\n        value,\r\n        isVNode,\r\n        loc: locStub\r\n    };\r\n}\r\nfunction createBlockStatement(body) {\r\n    return {\r\n        type: 21 /* JS_BLOCK_STATEMENT */,\r\n        body,\r\n        loc: locStub\r\n    };\r\n}\r\nfunction createTemplateLiteral(elements) {\r\n    return {\r\n        type: 22 /* JS_TEMPLATE_LITERAL */,\r\n        elements,\r\n        loc: locStub\r\n    };\r\n}\r\nfunction createIfStatement(test, consequent, alternate) {\r\n    return {\r\n        type: 23 /* JS_IF_STATEMENT */,\r\n        test,\r\n        consequent,\r\n        alternate,\r\n        loc: locStub\r\n    };\r\n}\r\nfunction createAssignmentExpression(left, right) {\r\n    return {\r\n        type: 24 /* JS_ASSIGNMENT_EXPRESSION */,\r\n        left,\r\n        right,\r\n        loc: locStub\r\n    };\r\n}\r\nfunction createSequenceExpression(expressions) {\r\n    return {\r\n        type: 25 /* JS_SEQUENCE_EXPRESSION */,\r\n        expressions,\r\n        loc: locStub\r\n    };\r\n}\r\nfunction createReturnStatement(returns) {\r\n    return {\r\n        type: 26 /* JS_RETURN_STATEMENT */,\r\n        returns,\r\n        loc: locStub\r\n    };\r\n}\n\nconst isStaticExp = (p) => p.type === 4 /* SIMPLE_EXPRESSION */ && p.isStatic;\r\nconst isBuiltInType = (tag, expected) => tag === expected || tag === hyphenate(expected);\r\nfunction isCoreComponent(tag) {\r\n    if (isBuiltInType(tag, 'Teleport')) {\r\n        return TELEPORT;\r\n    }\r\n    else if (isBuiltInType(tag, 'Suspense')) {\r\n        return SUSPENSE;\r\n    }\r\n    else if (isBuiltInType(tag, 'KeepAlive')) {\r\n        return KEEP_ALIVE;\r\n    }\r\n    else if (isBuiltInType(tag, 'BaseTransition')) {\r\n        return BASE_TRANSITION;\r\n    }\r\n}\r\nconst nonIdentifierRE = /^\\d|[^\\$\\w]/;\r\nconst isSimpleIdentifier = (name) => !nonIdentifierRE.test(name);\r\nconst validFirstIdentCharRE = /[A-Za-z_$\\xA0-\\uFFFF]/;\r\nconst validIdentCharRE = /[\\.\\?\\w$\\xA0-\\uFFFF]/;\r\nconst whitespaceRE = /\\s+[.[]\\s*|\\s*[.[]\\s+/g;\r\n/**\r\n * Simple lexer to check if an expression is a member expression. This is\r\n * lax and only checks validity at the root level (i.e. does not validate exps\r\n * inside square brackets), but it's ok since these are only used on template\r\n * expressions and false positives are invalid expressions in the first place.\r\n */\r\nconst isMemberExpressionBrowser = (path) => {\r\n    // remove whitespaces around . or [ first\r\n    path = path.trim().replace(whitespaceRE, s => s.trim());\r\n    let state = 0 /* inMemberExp */;\r\n    let stateStack = [];\r\n    let currentOpenBracketCount = 0;\r\n    let currentOpenParensCount = 0;\r\n    let currentStringType = null;\r\n    for (let i = 0; i < path.length; i++) {\r\n        const char = path.charAt(i);\r\n        switch (state) {\r\n            case 0 /* inMemberExp */:\r\n                if (char === '[') {\r\n                    stateStack.push(state);\r\n                    state = 1 /* inBrackets */;\r\n                    currentOpenBracketCount++;\r\n                }\r\n                else if (char === '(') {\r\n                    stateStack.push(state);\r\n                    state = 2 /* inParens */;\r\n                    currentOpenParensCount++;\r\n                }\r\n                else if (!(i === 0 ? validFirstIdentCharRE : validIdentCharRE).test(char)) {\r\n                    return false;\r\n                }\r\n                break;\r\n            case 1 /* inBrackets */:\r\n                if (char === `'` || char === `\"` || char === '`') {\r\n                    stateStack.push(state);\r\n                    state = 3 /* inString */;\r\n                    currentStringType = char;\r\n                }\r\n                else if (char === `[`) {\r\n                    currentOpenBracketCount++;\r\n                }\r\n                else if (char === `]`) {\r\n                    if (!--currentOpenBracketCount) {\r\n                        state = stateStack.pop();\r\n                    }\r\n                }\r\n                break;\r\n            case 2 /* inParens */:\r\n                if (char === `'` || char === `\"` || char === '`') {\r\n                    stateStack.push(state);\r\n                    state = 3 /* inString */;\r\n                    currentStringType = char;\r\n                }\r\n                else if (char === `(`) {\r\n                    currentOpenParensCount++;\r\n                }\r\n                else if (char === `)`) {\r\n                    // if the exp ends as a call then it should not be considered valid\r\n                    if (i === path.length - 1) {\r\n                        return false;\r\n                    }\r\n                    if (!--currentOpenParensCount) {\r\n                        state = stateStack.pop();\r\n                    }\r\n                }\r\n                break;\r\n            case 3 /* inString */:\r\n                if (char === currentStringType) {\r\n                    state = stateStack.pop();\r\n                    currentStringType = null;\r\n                }\r\n                break;\r\n        }\r\n    }\r\n    return !currentOpenBracketCount && !currentOpenParensCount;\r\n};\r\nconst isMemberExpressionNode = NOOP\r\n    ;\r\nconst isMemberExpression = isMemberExpressionBrowser\r\n    ;\r\nfunction getInnerRange(loc, offset, length) {\r\n    const source = loc.source.slice(offset, offset + length);\r\n    const newLoc = {\r\n        source,\r\n        start: advancePositionWithClone(loc.start, loc.source, offset),\r\n        end: loc.end\r\n    };\r\n    if (length != null) {\r\n        newLoc.end = advancePositionWithClone(loc.start, loc.source, offset + length);\r\n    }\r\n    return newLoc;\r\n}\r\nfunction advancePositionWithClone(pos, source, numberOfCharacters = source.length) {\r\n    return advancePositionWithMutation(extend({}, pos), source, numberOfCharacters);\r\n}\r\n// advance by mutation without cloning (for performance reasons), since this\r\n// gets called a lot in the parser\r\nfunction advancePositionWithMutation(pos, source, numberOfCharacters = source.length) {\r\n    let linesCount = 0;\r\n    let lastNewLinePos = -1;\r\n    for (let i = 0; i < numberOfCharacters; i++) {\r\n        if (source.charCodeAt(i) === 10 /* newline char code */) {\r\n            linesCount++;\r\n            lastNewLinePos = i;\r\n        }\r\n    }\r\n    pos.offset += numberOfCharacters;\r\n    pos.line += linesCount;\r\n    pos.column =\r\n        lastNewLinePos === -1\r\n            ? pos.column + numberOfCharacters\r\n            : numberOfCharacters - lastNewLinePos;\r\n    return pos;\r\n}\r\nfunction assert(condition, msg) {\r\n    /* istanbul ignore if */\r\n    if (!condition) {\r\n        throw new Error(msg || `unexpected compiler condition`);\r\n    }\r\n}\r\nfunction findDir(node, name, allowEmpty = false) {\r\n    for (let i = 0; i < node.props.length; i++) {\r\n        const p = node.props[i];\r\n        if (p.type === 7 /* DIRECTIVE */ &&\r\n            (allowEmpty || p.exp) &&\r\n            (isString(name) ? p.name === name : name.test(p.name))) {\r\n            return p;\r\n        }\r\n    }\r\n}\r\nfunction findProp(node, name, dynamicOnly = false, allowEmpty = false) {\r\n    for (let i = 0; i < node.props.length; i++) {\r\n        const p = node.props[i];\r\n        if (p.type === 6 /* ATTRIBUTE */) {\r\n            if (dynamicOnly)\r\n                continue;\r\n            if (p.name === name && (p.value || allowEmpty)) {\r\n                return p;\r\n            }\r\n        }\r\n        else if (p.name === 'bind' &&\r\n            (p.exp || allowEmpty) &&\r\n            isStaticArgOf(p.arg, name)) {\r\n            return p;\r\n        }\r\n    }\r\n}\r\nfunction isStaticArgOf(arg, name) {\r\n    return !!(arg && isStaticExp(arg) && arg.content === name);\r\n}\r\nfunction hasDynamicKeyVBind(node) {\r\n    return node.props.some(p => p.type === 7 /* DIRECTIVE */ &&\r\n        p.name === 'bind' &&\r\n        (!p.arg || // v-bind=\"obj\"\r\n            p.arg.type !== 4 /* SIMPLE_EXPRESSION */ || // v-bind:[_ctx.foo]\r\n            !p.arg.isStatic) // v-bind:[foo]\r\n    );\r\n}\r\nfunction isText(node) {\r\n    return node.type === 5 /* INTERPOLATION */ || node.type === 2 /* TEXT */;\r\n}\r\nfunction isVSlot(p) {\r\n    return p.type === 7 /* DIRECTIVE */ && p.name === 'slot';\r\n}\r\nfunction isTemplateNode(node) {\r\n    return (node.type === 1 /* ELEMENT */ && node.tagType === 3 /* TEMPLATE */);\r\n}\r\nfunction isSlotOutlet(node) {\r\n    return node.type === 1 /* ELEMENT */ && node.tagType === 2 /* SLOT */;\r\n}\r\nfunction getVNodeHelper(ssr, isComponent) {\r\n    return ssr || isComponent ? CREATE_VNODE : CREATE_ELEMENT_VNODE;\r\n}\r\nfunction getVNodeBlockHelper(ssr, isComponent) {\r\n    return ssr || isComponent ? CREATE_BLOCK : CREATE_ELEMENT_BLOCK;\r\n}\r\nconst propsHelperSet = new Set([NORMALIZE_PROPS, GUARD_REACTIVE_PROPS]);\r\nfunction getUnnormalizedProps(props, callPath = []) {\r\n    if (props &&\r\n        !isString(props) &&\r\n        props.type === 14 /* JS_CALL_EXPRESSION */) {\r\n        const callee = props.callee;\r\n        if (!isString(callee) && propsHelperSet.has(callee)) {\r\n            return getUnnormalizedProps(props.arguments[0], callPath.concat(props));\r\n        }\r\n    }\r\n    return [props, callPath];\r\n}\r\nfunction injectProp(node, prop, context) {\r\n    let propsWithInjection;\r\n    /**\r\n     * 1. mergeProps(...)\r\n     * 2. toHandlers(...)\r\n     * 3. normalizeProps(...)\r\n     * 4. normalizeProps(guardReactiveProps(...))\r\n     *\r\n     * we need to get the real props before normalization\r\n     */\r\n    let props = node.type === 13 /* VNODE_CALL */ ? node.props : node.arguments[2];\r\n    let callPath = [];\r\n    let parentCall;\r\n    if (props &&\r\n        !isString(props) &&\r\n        props.type === 14 /* JS_CALL_EXPRESSION */) {\r\n        const ret = getUnnormalizedProps(props);\r\n        props = ret[0];\r\n        callPath = ret[1];\r\n        parentCall = callPath[callPath.length - 1];\r\n    }\r\n    if (props == null || isString(props)) {\r\n        propsWithInjection = createObjectExpression([prop]);\r\n    }\r\n    else if (props.type === 14 /* JS_CALL_EXPRESSION */) {\r\n        // merged props... add ours\r\n        // only inject key to object literal if it's the first argument so that\r\n        // if doesn't override user provided keys\r\n        const first = props.arguments[0];\r\n        if (!isString(first) && first.type === 15 /* JS_OBJECT_EXPRESSION */) {\r\n            first.properties.unshift(prop);\r\n        }\r\n        else {\r\n            if (props.callee === TO_HANDLERS) {\r\n                // #2366\r\n                propsWithInjection = createCallExpression(context.helper(MERGE_PROPS), [\r\n                    createObjectExpression([prop]),\r\n                    props\r\n                ]);\r\n            }\r\n            else {\r\n                props.arguments.unshift(createObjectExpression([prop]));\r\n            }\r\n        }\r\n        !propsWithInjection && (propsWithInjection = props);\r\n    }\r\n    else if (props.type === 15 /* JS_OBJECT_EXPRESSION */) {\r\n        let alreadyExists = false;\r\n        // check existing key to avoid overriding user provided keys\r\n        if (prop.key.type === 4 /* SIMPLE_EXPRESSION */) {\r\n            const propKeyName = prop.key.content;\r\n            alreadyExists = props.properties.some(p => p.key.type === 4 /* SIMPLE_EXPRESSION */ &&\r\n                p.key.content === propKeyName);\r\n        }\r\n        if (!alreadyExists) {\r\n            props.properties.unshift(prop);\r\n        }\r\n        propsWithInjection = props;\r\n    }\r\n    else {\r\n        // single v-bind with expression, return a merged replacement\r\n        propsWithInjection = createCallExpression(context.helper(MERGE_PROPS), [\r\n            createObjectExpression([prop]),\r\n            props\r\n        ]);\r\n        // in the case of nested helper call, e.g. `normalizeProps(guardReactiveProps(props))`,\r\n        // it will be rewritten as `normalizeProps(mergeProps({ key: 0 }, props))`,\r\n        // the `guardReactiveProps` will no longer be needed\r\n        if (parentCall && parentCall.callee === GUARD_REACTIVE_PROPS) {\r\n            parentCall = callPath[callPath.length - 2];\r\n        }\r\n    }\r\n    if (node.type === 13 /* VNODE_CALL */) {\r\n        if (parentCall) {\r\n            parentCall.arguments[0] = propsWithInjection;\r\n        }\r\n        else {\r\n            node.props = propsWithInjection;\r\n        }\r\n    }\r\n    else {\r\n        if (parentCall) {\r\n            parentCall.arguments[0] = propsWithInjection;\r\n        }\r\n        else {\r\n            node.arguments[2] = propsWithInjection;\r\n        }\r\n    }\r\n}\r\nfunction toValidAssetId(name, type) {\r\n    // see issue#4422, we need adding identifier on validAssetId if variable `name` has specific character\r\n    return `_${type}_${name.replace(/[^\\w]/g, (searchValue, replaceValue) => {\r\n        return searchValue === '-' ? '_' : name.charCodeAt(replaceValue).toString();\r\n    })}`;\r\n}\r\n// Check if a node contains expressions that reference current context scope ids\r\nfunction hasScopeRef(node, ids) {\r\n    if (!node || Object.keys(ids).length === 0) {\r\n        return false;\r\n    }\r\n    switch (node.type) {\r\n        case 1 /* ELEMENT */:\r\n            for (let i = 0; i < node.props.length; i++) {\r\n                const p = node.props[i];\r\n                if (p.type === 7 /* DIRECTIVE */ &&\r\n                    (hasScopeRef(p.arg, ids) || hasScopeRef(p.exp, ids))) {\r\n                    return true;\r\n                }\r\n            }\r\n            return node.children.some(c => hasScopeRef(c, ids));\r\n        case 11 /* FOR */:\r\n            if (hasScopeRef(node.source, ids)) {\r\n                return true;\r\n            }\r\n            return node.children.some(c => hasScopeRef(c, ids));\r\n        case 9 /* IF */:\r\n            return node.branches.some(b => hasScopeRef(b, ids));\r\n        case 10 /* IF_BRANCH */:\r\n            if (hasScopeRef(node.condition, ids)) {\r\n                return true;\r\n            }\r\n            return node.children.some(c => hasScopeRef(c, ids));\r\n        case 4 /* SIMPLE_EXPRESSION */:\r\n            return (!node.isStatic &&\r\n                isSimpleIdentifier(node.content) &&\r\n                !!ids[node.content]);\r\n        case 8 /* COMPOUND_EXPRESSION */:\r\n            return node.children.some(c => isObject(c) && hasScopeRef(c, ids));\r\n        case 5 /* INTERPOLATION */:\r\n        case 12 /* TEXT_CALL */:\r\n            return hasScopeRef(node.content, ids);\r\n        case 2 /* TEXT */:\r\n        case 3 /* COMMENT */:\r\n            return false;\r\n        default:\r\n            if ((process.env.NODE_ENV !== 'production')) ;\r\n            return false;\r\n    }\r\n}\r\nfunction getMemoedVNodeCall(node) {\r\n    if (node.type === 14 /* JS_CALL_EXPRESSION */ && node.callee === WITH_MEMO) {\r\n        return node.arguments[1].returns;\r\n    }\r\n    else {\r\n        return node;\r\n    }\r\n}\r\nfunction makeBlock(node, { helper, removeHelper, inSSR }) {\r\n    if (!node.isBlock) {\r\n        node.isBlock = true;\r\n        removeHelper(getVNodeHelper(inSSR, node.isComponent));\r\n        helper(OPEN_BLOCK);\r\n        helper(getVNodeBlockHelper(inSSR, node.isComponent));\r\n    }\r\n}\n\nconst deprecationData = {\r\n    [\"COMPILER_IS_ON_ELEMENT\" /* COMPILER_IS_ON_ELEMENT */]: {\r\n        message: `Platform-native elements with \"is\" prop will no longer be ` +\r\n            `treated as components in Vue 3 unless the \"is\" value is explicitly ` +\r\n            `prefixed with \"vue:\".`,\r\n        link: `https://v3-migration.vuejs.org/breaking-changes/custom-elements-interop.html`\r\n    },\r\n    [\"COMPILER_V_BIND_SYNC\" /* COMPILER_V_BIND_SYNC */]: {\r\n        message: key => `.sync modifier for v-bind has been removed. Use v-model with ` +\r\n            `argument instead. \\`v-bind:${key}.sync\\` should be changed to ` +\r\n            `\\`v-model:${key}\\`.`,\r\n        link: `https://v3-migration.vuejs.org/breaking-changes/v-model.html`\r\n    },\r\n    [\"COMPILER_V_BIND_PROP\" /* COMPILER_V_BIND_PROP */]: {\r\n        message: `.prop modifier for v-bind has been removed and no longer necessary. ` +\r\n            `Vue 3 will automatically set a binding as DOM property when appropriate.`\r\n    },\r\n    [\"COMPILER_V_BIND_OBJECT_ORDER\" /* COMPILER_V_BIND_OBJECT_ORDER */]: {\r\n        message: `v-bind=\"obj\" usage is now order sensitive and behaves like JavaScript ` +\r\n            `object spread: it will now overwrite an existing non-mergeable attribute ` +\r\n            `that appears before v-bind in the case of conflict. ` +\r\n            `To retain 2.x behavior, move v-bind to make it the first attribute. ` +\r\n            `You can also suppress this warning if the usage is intended.`,\r\n        link: `https://v3-migration.vuejs.org/breaking-changes/v-bind.html`\r\n    },\r\n    [\"COMPILER_V_ON_NATIVE\" /* COMPILER_V_ON_NATIVE */]: {\r\n        message: `.native modifier for v-on has been removed as is no longer necessary.`,\r\n        link: `https://v3-migration.vuejs.org/breaking-changes/v-on-native-modifier-removed.html`\r\n    },\r\n    [\"COMPILER_V_IF_V_FOR_PRECEDENCE\" /* COMPILER_V_IF_V_FOR_PRECEDENCE */]: {\r\n        message: `v-if / v-for precedence when used on the same element has changed ` +\r\n            `in Vue 3: v-if now takes higher precedence and will no longer have ` +\r\n            `access to v-for scope variables. It is best to avoid the ambiguity ` +\r\n            `with <template> tags or use a computed property that filters v-for ` +\r\n            `data source.`,\r\n        link: `https://v3-migration.vuejs.org/breaking-changes/v-if-v-for.html`\r\n    },\r\n    [\"COMPILER_NATIVE_TEMPLATE\" /* COMPILER_NATIVE_TEMPLATE */]: {\r\n        message: `<template> with no special directives will render as a native template ` +\r\n            `element instead of its inner content in Vue 3.`\r\n    },\r\n    [\"COMPILER_INLINE_TEMPLATE\" /* COMPILER_INLINE_TEMPLATE */]: {\r\n        message: `\"inline-template\" has been removed in Vue 3.`,\r\n        link: `https://v3-migration.vuejs.org/breaking-changes/inline-template-attribute.html`\r\n    },\r\n    [\"COMPILER_FILTER\" /* COMPILER_FILTERS */]: {\r\n        message: `filters have been removed in Vue 3. ` +\r\n            `The \"|\" symbol will be treated as native JavaScript bitwise OR operator. ` +\r\n            `Use method calls or computed properties instead.`,\r\n        link: `https://v3-migration.vuejs.org/breaking-changes/filters.html`\r\n    }\r\n};\r\nfunction getCompatValue(key, context) {\r\n    const config = context.options\r\n        ? context.options.compatConfig\r\n        : context.compatConfig;\r\n    const value = config && config[key];\r\n    if (key === 'MODE') {\r\n        return value || 3; // compiler defaults to v3 behavior\r\n    }\r\n    else {\r\n        return value;\r\n    }\r\n}\r\nfunction isCompatEnabled(key, context) {\r\n    const mode = getCompatValue('MODE', context);\r\n    const value = getCompatValue(key, context);\r\n    // in v3 mode, only enable if explicitly set to true\r\n    // otherwise enable for any non-false value\r\n    return mode === 3 ? value === true : value !== false;\r\n}\r\nfunction checkCompatEnabled(key, context, loc, ...args) {\r\n    const enabled = isCompatEnabled(key, context);\r\n    if ((process.env.NODE_ENV !== 'production') && enabled) {\r\n        warnDeprecation(key, context, loc, ...args);\r\n    }\r\n    return enabled;\r\n}\r\nfunction warnDeprecation(key, context, loc, ...args) {\r\n    const val = getCompatValue(key, context);\r\n    if (val === 'suppress-warning') {\r\n        return;\r\n    }\r\n    const { message, link } = deprecationData[key];\r\n    const msg = `(deprecation ${key}) ${typeof message === 'function' ? message(...args) : message}${link ? `\\n  Details: ${link}` : ``}`;\r\n    const err = new SyntaxError(msg);\r\n    err.code = key;\r\n    if (loc)\r\n        err.loc = loc;\r\n    context.onWarn(err);\r\n}\n\n// The default decoder only provides escapes for characters reserved as part of\r\n// the template syntax, and is only used if the custom renderer did not provide\r\n// a platform-specific decoder.\r\nconst decodeRE = /&(gt|lt|amp|apos|quot);/g;\r\nconst decodeMap = {\r\n    gt: '>',\r\n    lt: '<',\r\n    amp: '&',\r\n    apos: \"'\",\r\n    quot: '\"'\r\n};\r\nconst defaultParserOptions = {\r\n    delimiters: [`{{`, `}}`],\r\n    getNamespace: () => 0 /* HTML */,\r\n    getTextMode: () => 0 /* DATA */,\r\n    isVoidTag: NO,\r\n    isPreTag: NO,\r\n    isCustomElement: NO,\r\n    decodeEntities: (rawText) => rawText.replace(decodeRE, (_, p1) => decodeMap[p1]),\r\n    onError: defaultOnError,\r\n    onWarn: defaultOnWarn,\r\n    comments: (process.env.NODE_ENV !== 'production')\r\n};\r\nfunction baseParse(content, options = {}) {\r\n    const context = createParserContext(content, options);\r\n    const start = getCursor(context);\r\n    return createRoot(parseChildren(context, 0 /* DATA */, []), getSelection(context, start));\r\n}\r\nfunction createParserContext(content, rawOptions) {\r\n    const options = extend({}, defaultParserOptions);\r\n    let key;\r\n    for (key in rawOptions) {\r\n        // @ts-ignore\r\n        options[key] =\r\n            rawOptions[key] === undefined\r\n                ? defaultParserOptions[key]\r\n                : rawOptions[key];\r\n    }\r\n    return {\r\n        options,\r\n        column: 1,\r\n        line: 1,\r\n        offset: 0,\r\n        originalSource: content,\r\n        source: content,\r\n        inPre: false,\r\n        inVPre: false,\r\n        onWarn: options.onWarn\r\n    };\r\n}\r\nfunction parseChildren(context, mode, ancestors) {\r\n    const parent = last(ancestors);\r\n    const ns = parent ? parent.ns : 0 /* HTML */;\r\n    const nodes = [];\r\n    while (!isEnd(context, mode, ancestors)) {\r\n        const s = context.source;\r\n        let node = undefined;\r\n        if (mode === 0 /* DATA */ || mode === 1 /* RCDATA */) {\r\n            if (!context.inVPre && startsWith(s, context.options.delimiters[0])) {\r\n                // '{{'\r\n                node = parseInterpolation(context, mode);\r\n            }\r\n            else if (mode === 0 /* DATA */ && s[0] === '<') {\r\n                // https://html.spec.whatwg.org/multipage/parsing.html#tag-open-state\r\n                if (s.length === 1) {\r\n                    emitError(context, 5 /* EOF_BEFORE_TAG_NAME */, 1);\r\n                }\r\n                else if (s[1] === '!') {\r\n                    // https://html.spec.whatwg.org/multipage/parsing.html#markup-declaration-open-state\r\n                    if (startsWith(s, '<!--')) {\r\n                        node = parseComment(context);\r\n                    }\r\n                    else if (startsWith(s, '<!DOCTYPE')) {\r\n                        // Ignore DOCTYPE by a limitation.\r\n                        node = parseBogusComment(context);\r\n                    }\r\n                    else if (startsWith(s, '<![CDATA[')) {\r\n                        if (ns !== 0 /* HTML */) {\r\n                            node = parseCDATA(context, ancestors);\r\n                        }\r\n                        else {\r\n                            emitError(context, 1 /* CDATA_IN_HTML_CONTENT */);\r\n                            node = parseBogusComment(context);\r\n                        }\r\n                    }\r\n                    else {\r\n                        emitError(context, 11 /* INCORRECTLY_OPENED_COMMENT */);\r\n                        node = parseBogusComment(context);\r\n                    }\r\n                }\r\n                else if (s[1] === '/') {\r\n                    // https://html.spec.whatwg.org/multipage/parsing.html#end-tag-open-state\r\n                    if (s.length === 2) {\r\n                        emitError(context, 5 /* EOF_BEFORE_TAG_NAME */, 2);\r\n                    }\r\n                    else if (s[2] === '>') {\r\n                        emitError(context, 14 /* MISSING_END_TAG_NAME */, 2);\r\n                        advanceBy(context, 3);\r\n                        continue;\r\n                    }\r\n                    else if (/[a-z]/i.test(s[2])) {\r\n                        emitError(context, 23 /* X_INVALID_END_TAG */);\r\n                        parseTag(context, 1 /* End */, parent);\r\n                        continue;\r\n                    }\r\n                    else {\r\n                        emitError(context, 12 /* INVALID_FIRST_CHARACTER_OF_TAG_NAME */, 2);\r\n                        node = parseBogusComment(context);\r\n                    }\r\n                }\r\n                else if (/[a-z]/i.test(s[1])) {\r\n                    node = parseElement(context, ancestors);\r\n                    // 2.x <template> with no directive compat\r\n                    if (isCompatEnabled(\"COMPILER_NATIVE_TEMPLATE\" /* COMPILER_NATIVE_TEMPLATE */, context) &&\r\n                        node &&\r\n                        node.tag === 'template' &&\r\n                        !node.props.some(p => p.type === 7 /* DIRECTIVE */ &&\r\n                            isSpecialTemplateDirective(p.name))) {\r\n                        (process.env.NODE_ENV !== 'production') &&\r\n                            warnDeprecation(\"COMPILER_NATIVE_TEMPLATE\" /* COMPILER_NATIVE_TEMPLATE */, context, node.loc);\r\n                        node = node.children;\r\n                    }\r\n                }\r\n                else if (s[1] === '?') {\r\n                    emitError(context, 21 /* UNEXPECTED_QUESTION_MARK_INSTEAD_OF_TAG_NAME */, 1);\r\n                    node = parseBogusComment(context);\r\n                }\r\n                else {\r\n                    emitError(context, 12 /* INVALID_FIRST_CHARACTER_OF_TAG_NAME */, 1);\r\n                }\r\n            }\r\n        }\r\n        if (!node) {\r\n            node = parseText(context, mode);\r\n        }\r\n        if (isArray(node)) {\r\n            for (let i = 0; i < node.length; i++) {\r\n                pushNode(nodes, node[i]);\r\n            }\r\n        }\r\n        else {\r\n            pushNode(nodes, node);\r\n        }\r\n    }\r\n    // Whitespace handling strategy like v2\r\n    let removedWhitespace = false;\r\n    if (mode !== 2 /* RAWTEXT */ && mode !== 1 /* RCDATA */) {\r\n        const shouldCondense = context.options.whitespace !== 'preserve';\r\n        for (let i = 0; i < nodes.length; i++) {\r\n            const node = nodes[i];\r\n            if (!context.inPre && node.type === 2 /* TEXT */) {\r\n                if (!/[^\\t\\r\\n\\f ]/.test(node.content)) {\r\n                    const prev = nodes[i - 1];\r\n                    const next = nodes[i + 1];\r\n                    // Remove if:\r\n                    // - the whitespace is the first or last node, or:\r\n                    // - (condense mode) the whitespace is adjacent to a comment, or:\r\n                    // - (condense mode) the whitespace is between two elements AND contains newline\r\n                    if (!prev ||\r\n                        !next ||\r\n                        (shouldCondense &&\r\n                            (prev.type === 3 /* COMMENT */ ||\r\n                                next.type === 3 /* COMMENT */ ||\r\n                                (prev.type === 1 /* ELEMENT */ &&\r\n                                    next.type === 1 /* ELEMENT */ &&\r\n                                    /[\\r\\n]/.test(node.content))))) {\r\n                        removedWhitespace = true;\r\n                        nodes[i] = null;\r\n                    }\r\n                    else {\r\n                        // Otherwise, the whitespace is condensed into a single space\r\n                        node.content = ' ';\r\n                    }\r\n                }\r\n                else if (shouldCondense) {\r\n                    // in condense mode, consecutive whitespaces in text are condensed\r\n                    // down to a single space.\r\n                    node.content = node.content.replace(/[\\t\\r\\n\\f ]+/g, ' ');\r\n                }\r\n            }\r\n            // Remove comment nodes if desired by configuration.\r\n            else if (node.type === 3 /* COMMENT */ && !context.options.comments) {\r\n                removedWhitespace = true;\r\n                nodes[i] = null;\r\n            }\r\n        }\r\n        if (context.inPre && parent && context.options.isPreTag(parent.tag)) {\r\n            // remove leading newline per html spec\r\n            // https://html.spec.whatwg.org/multipage/grouping-content.html#the-pre-element\r\n            const first = nodes[0];\r\n            if (first && first.type === 2 /* TEXT */) {\r\n                first.content = first.content.replace(/^\\r?\\n/, '');\r\n            }\r\n        }\r\n    }\r\n    return removedWhitespace ? nodes.filter(Boolean) : nodes;\r\n}\r\nfunction pushNode(nodes, node) {\r\n    if (node.type === 2 /* TEXT */) {\r\n        const prev = last(nodes);\r\n        // Merge if both this and the previous node are text and those are\r\n        // consecutive. This happens for cases like \"a < b\".\r\n        if (prev &&\r\n            prev.type === 2 /* TEXT */ &&\r\n            prev.loc.end.offset === node.loc.start.offset) {\r\n            prev.content += node.content;\r\n            prev.loc.end = node.loc.end;\r\n            prev.loc.source += node.loc.source;\r\n            return;\r\n        }\r\n    }\r\n    nodes.push(node);\r\n}\r\nfunction parseCDATA(context, ancestors) {\r\n    advanceBy(context, 9);\r\n    const nodes = parseChildren(context, 3 /* CDATA */, ancestors);\r\n    if (context.source.length === 0) {\r\n        emitError(context, 6 /* EOF_IN_CDATA */);\r\n    }\r\n    else {\r\n        advanceBy(context, 3);\r\n    }\r\n    return nodes;\r\n}\r\nfunction parseComment(context) {\r\n    const start = getCursor(context);\r\n    let content;\r\n    // Regular comment.\r\n    const match = /--(\\!)?>/.exec(context.source);\r\n    if (!match) {\r\n        content = context.source.slice(4);\r\n        advanceBy(context, context.source.length);\r\n        emitError(context, 7 /* EOF_IN_COMMENT */);\r\n    }\r\n    else {\r\n        if (match.index <= 3) {\r\n            emitError(context, 0 /* ABRUPT_CLOSING_OF_EMPTY_COMMENT */);\r\n        }\r\n        if (match[1]) {\r\n            emitError(context, 10 /* INCORRECTLY_CLOSED_COMMENT */);\r\n        }\r\n        content = context.source.slice(4, match.index);\r\n        // Advancing with reporting nested comments.\r\n        const s = context.source.slice(0, match.index);\r\n        let prevIndex = 1, nestedIndex = 0;\r\n        while ((nestedIndex = s.indexOf('<!--', prevIndex)) !== -1) {\r\n            advanceBy(context, nestedIndex - prevIndex + 1);\r\n            if (nestedIndex + 4 < s.length) {\r\n                emitError(context, 16 /* NESTED_COMMENT */);\r\n            }\r\n            prevIndex = nestedIndex + 1;\r\n        }\r\n        advanceBy(context, match.index + match[0].length - prevIndex + 1);\r\n    }\r\n    return {\r\n        type: 3 /* COMMENT */,\r\n        content,\r\n        loc: getSelection(context, start)\r\n    };\r\n}\r\nfunction parseBogusComment(context) {\r\n    const start = getCursor(context);\r\n    const contentStart = context.source[1] === '?' ? 1 : 2;\r\n    let content;\r\n    const closeIndex = context.source.indexOf('>');\r\n    if (closeIndex === -1) {\r\n        content = context.source.slice(contentStart);\r\n        advanceBy(context, context.source.length);\r\n    }\r\n    else {\r\n        content = context.source.slice(contentStart, closeIndex);\r\n        advanceBy(context, closeIndex + 1);\r\n    }\r\n    return {\r\n        type: 3 /* COMMENT */,\r\n        content,\r\n        loc: getSelection(context, start)\r\n    };\r\n}\r\nfunction parseElement(context, ancestors) {\r\n    // Start tag.\r\n    const wasInPre = context.inPre;\r\n    const wasInVPre = context.inVPre;\r\n    const parent = last(ancestors);\r\n    const element = parseTag(context, 0 /* Start */, parent);\r\n    const isPreBoundary = context.inPre && !wasInPre;\r\n    const isVPreBoundary = context.inVPre && !wasInVPre;\r\n    if (element.isSelfClosing || context.options.isVoidTag(element.tag)) {\r\n        // #4030 self-closing <pre> tag\r\n        if (isPreBoundary) {\r\n            context.inPre = false;\r\n        }\r\n        if (isVPreBoundary) {\r\n            context.inVPre = false;\r\n        }\r\n        return element;\r\n    }\r\n    // Children.\r\n    ancestors.push(element);\r\n    const mode = context.options.getTextMode(element, parent);\r\n    const children = parseChildren(context, mode, ancestors);\r\n    ancestors.pop();\r\n    // 2.x inline-template compat\r\n    {\r\n        const inlineTemplateProp = element.props.find(p => p.type === 6 /* ATTRIBUTE */ && p.name === 'inline-template');\r\n        if (inlineTemplateProp &&\r\n            checkCompatEnabled(\"COMPILER_INLINE_TEMPLATE\" /* COMPILER_INLINE_TEMPLATE */, context, inlineTemplateProp.loc)) {\r\n            const loc = getSelection(context, element.loc.end);\r\n            inlineTemplateProp.value = {\r\n                type: 2 /* TEXT */,\r\n                content: loc.source,\r\n                loc\r\n            };\r\n        }\r\n    }\r\n    element.children = children;\r\n    // End tag.\r\n    if (startsWithEndTagOpen(context.source, element.tag)) {\r\n        parseTag(context, 1 /* End */, parent);\r\n    }\r\n    else {\r\n        emitError(context, 24 /* X_MISSING_END_TAG */, 0, element.loc.start);\r\n        if (context.source.length === 0 && element.tag.toLowerCase() === 'script') {\r\n            const first = children[0];\r\n            if (first && startsWith(first.loc.source, '<!--')) {\r\n                emitError(context, 8 /* EOF_IN_SCRIPT_HTML_COMMENT_LIKE_TEXT */);\r\n            }\r\n        }\r\n    }\r\n    element.loc = getSelection(context, element.loc.start);\r\n    if (isPreBoundary) {\r\n        context.inPre = false;\r\n    }\r\n    if (isVPreBoundary) {\r\n        context.inVPre = false;\r\n    }\r\n    return element;\r\n}\r\nconst isSpecialTemplateDirective = /*#__PURE__*/ makeMap(`if,else,else-if,for,slot`);\r\nfunction parseTag(context, type, parent) {\r\n    // Tag open.\r\n    const start = getCursor(context);\r\n    const match = /^<\\/?([a-z][^\\t\\r\\n\\f />]*)/i.exec(context.source);\r\n    const tag = match[1];\r\n    const ns = context.options.getNamespace(tag, parent);\r\n    advanceBy(context, match[0].length);\r\n    advanceSpaces(context);\r\n    // save current state in case we need to re-parse attributes with v-pre\r\n    const cursor = getCursor(context);\r\n    const currentSource = context.source;\r\n    // check <pre> tag\r\n    if (context.options.isPreTag(tag)) {\r\n        context.inPre = true;\r\n    }\r\n    // Attributes.\r\n    let props = parseAttributes(context, type);\r\n    // check v-pre\r\n    if (type === 0 /* Start */ &&\r\n        !context.inVPre &&\r\n        props.some(p => p.type === 7 /* DIRECTIVE */ && p.name === 'pre')) {\r\n        context.inVPre = true;\r\n        // reset context\r\n        extend(context, cursor);\r\n        context.source = currentSource;\r\n        // re-parse attrs and filter out v-pre itself\r\n        props = parseAttributes(context, type).filter(p => p.name !== 'v-pre');\r\n    }\r\n    // Tag close.\r\n    let isSelfClosing = false;\r\n    if (context.source.length === 0) {\r\n        emitError(context, 9 /* EOF_IN_TAG */);\r\n    }\r\n    else {\r\n        isSelfClosing = startsWith(context.source, '/>');\r\n        if (type === 1 /* End */ && isSelfClosing) {\r\n            emitError(context, 4 /* END_TAG_WITH_TRAILING_SOLIDUS */);\r\n        }\r\n        advanceBy(context, isSelfClosing ? 2 : 1);\r\n    }\r\n    if (type === 1 /* End */) {\r\n        return;\r\n    }\r\n    // 2.x deprecation checks\r\n    if ((process.env.NODE_ENV !== 'production') &&\r\n        isCompatEnabled(\"COMPILER_V_IF_V_FOR_PRECEDENCE\" /* COMPILER_V_IF_V_FOR_PRECEDENCE */, context)) {\r\n        let hasIf = false;\r\n        let hasFor = false;\r\n        for (let i = 0; i < props.length; i++) {\r\n            const p = props[i];\r\n            if (p.type === 7 /* DIRECTIVE */) {\r\n                if (p.name === 'if') {\r\n                    hasIf = true;\r\n                }\r\n                else if (p.name === 'for') {\r\n                    hasFor = true;\r\n                }\r\n            }\r\n            if (hasIf && hasFor) {\r\n                warnDeprecation(\"COMPILER_V_IF_V_FOR_PRECEDENCE\" /* COMPILER_V_IF_V_FOR_PRECEDENCE */, context, getSelection(context, start));\r\n                break;\r\n            }\r\n        }\r\n    }\r\n    let tagType = 0 /* ELEMENT */;\r\n    if (!context.inVPre) {\r\n        if (tag === 'slot') {\r\n            tagType = 2 /* SLOT */;\r\n        }\r\n        else if (tag === 'template') {\r\n            if (props.some(p => p.type === 7 /* DIRECTIVE */ && isSpecialTemplateDirective(p.name))) {\r\n                tagType = 3 /* TEMPLATE */;\r\n            }\r\n        }\r\n        else if (isComponent(tag, props, context)) {\r\n            tagType = 1 /* COMPONENT */;\r\n        }\r\n    }\r\n    return {\r\n        type: 1 /* ELEMENT */,\r\n        ns,\r\n        tag,\r\n        tagType,\r\n        props,\r\n        isSelfClosing,\r\n        children: [],\r\n        loc: getSelection(context, start),\r\n        codegenNode: undefined // to be created during transform phase\r\n    };\r\n}\r\nfunction isComponent(tag, props, context) {\r\n    const options = context.options;\r\n    if (options.isCustomElement(tag)) {\r\n        return false;\r\n    }\r\n    if (tag === 'component' ||\r\n        /^[A-Z]/.test(tag) ||\r\n        isCoreComponent(tag) ||\r\n        (options.isBuiltInComponent && options.isBuiltInComponent(tag)) ||\r\n        (options.isNativeTag && !options.isNativeTag(tag))) {\r\n        return true;\r\n    }\r\n    // at this point the tag should be a native tag, but check for potential \"is\"\r\n    // casting\r\n    for (let i = 0; i < props.length; i++) {\r\n        const p = props[i];\r\n        if (p.type === 6 /* ATTRIBUTE */) {\r\n            if (p.name === 'is' && p.value) {\r\n                if (p.value.content.startsWith('vue:')) {\r\n                    return true;\r\n                }\r\n                else if (checkCompatEnabled(\"COMPILER_IS_ON_ELEMENT\" /* COMPILER_IS_ON_ELEMENT */, context, p.loc)) {\r\n                    return true;\r\n                }\r\n            }\r\n        }\r\n        else {\r\n            // directive\r\n            // v-is (TODO Deprecate)\r\n            if (p.name === 'is') {\r\n                return true;\r\n            }\r\n            else if (\r\n            // :is on plain element - only treat as component in compat mode\r\n            p.name === 'bind' &&\r\n                isStaticArgOf(p.arg, 'is') &&\r\n                true &&\r\n                checkCompatEnabled(\"COMPILER_IS_ON_ELEMENT\" /* COMPILER_IS_ON_ELEMENT */, context, p.loc)) {\r\n                return true;\r\n            }\r\n        }\r\n    }\r\n}\r\nfunction parseAttributes(context, type) {\r\n    const props = [];\r\n    const attributeNames = new Set();\r\n    while (context.source.length > 0 &&\r\n        !startsWith(context.source, '>') &&\r\n        !startsWith(context.source, '/>')) {\r\n        if (startsWith(context.source, '/')) {\r\n            emitError(context, 22 /* UNEXPECTED_SOLIDUS_IN_TAG */);\r\n            advanceBy(context, 1);\r\n            advanceSpaces(context);\r\n            continue;\r\n        }\r\n        if (type === 1 /* End */) {\r\n            emitError(context, 3 /* END_TAG_WITH_ATTRIBUTES */);\r\n        }\r\n        const attr = parseAttribute(context, attributeNames);\r\n        // Trim whitespace between class\r\n        // https://github.com/vuejs/core/issues/4251\r\n        if (attr.type === 6 /* ATTRIBUTE */ &&\r\n            attr.value &&\r\n            attr.name === 'class') {\r\n            attr.value.content = attr.value.content.replace(/\\s+/g, ' ').trim();\r\n        }\r\n        if (type === 0 /* Start */) {\r\n            props.push(attr);\r\n        }\r\n        if (/^[^\\t\\r\\n\\f />]/.test(context.source)) {\r\n            emitError(context, 15 /* MISSING_WHITESPACE_BETWEEN_ATTRIBUTES */);\r\n        }\r\n        advanceSpaces(context);\r\n    }\r\n    return props;\r\n}\r\nfunction parseAttribute(context, nameSet) {\r\n    // Name.\r\n    const start = getCursor(context);\r\n    const match = /^[^\\t\\r\\n\\f />][^\\t\\r\\n\\f />=]*/.exec(context.source);\r\n    const name = match[0];\r\n    if (nameSet.has(name)) {\r\n        emitError(context, 2 /* DUPLICATE_ATTRIBUTE */);\r\n    }\r\n    nameSet.add(name);\r\n    if (name[0] === '=') {\r\n        emitError(context, 19 /* UNEXPECTED_EQUALS_SIGN_BEFORE_ATTRIBUTE_NAME */);\r\n    }\r\n    {\r\n        const pattern = /[\"'<]/g;\r\n        let m;\r\n        while ((m = pattern.exec(name))) {\r\n            emitError(context, 17 /* UNEXPECTED_CHARACTER_IN_ATTRIBUTE_NAME */, m.index);\r\n        }\r\n    }\r\n    advanceBy(context, name.length);\r\n    // Value\r\n    let value = undefined;\r\n    if (/^[\\t\\r\\n\\f ]*=/.test(context.source)) {\r\n        advanceSpaces(context);\r\n        advanceBy(context, 1);\r\n        advanceSpaces(context);\r\n        value = parseAttributeValue(context);\r\n        if (!value) {\r\n            emitError(context, 13 /* MISSING_ATTRIBUTE_VALUE */);\r\n        }\r\n    }\r\n    const loc = getSelection(context, start);\r\n    if (!context.inVPre && /^(v-[A-Za-z0-9-]|:|\\.|@|#)/.test(name)) {\r\n        const match = /(?:^v-([a-z0-9-]+))?(?:(?::|^\\.|^@|^#)(\\[[^\\]]+\\]|[^\\.]+))?(.+)?$/i.exec(name);\r\n        let isPropShorthand = startsWith(name, '.');\r\n        let dirName = match[1] ||\r\n            (isPropShorthand || startsWith(name, ':')\r\n                ? 'bind'\r\n                : startsWith(name, '@')\r\n                    ? 'on'\r\n                    : 'slot');\r\n        let arg;\r\n        if (match[2]) {\r\n            const isSlot = dirName === 'slot';\r\n            const startOffset = name.lastIndexOf(match[2]);\r\n            const loc = getSelection(context, getNewPosition(context, start, startOffset), getNewPosition(context, start, startOffset + match[2].length + ((isSlot && match[3]) || '').length));\r\n            let content = match[2];\r\n            let isStatic = true;\r\n            if (content.startsWith('[')) {\r\n                isStatic = false;\r\n                if (!content.endsWith(']')) {\r\n                    emitError(context, 27 /* X_MISSING_DYNAMIC_DIRECTIVE_ARGUMENT_END */);\r\n                    content = content.slice(1);\r\n                }\r\n                else {\r\n                    content = content.slice(1, content.length - 1);\r\n                }\r\n            }\r\n            else if (isSlot) {\r\n                // #1241 special case for v-slot: vuetify relies extensively on slot\r\n                // names containing dots. v-slot doesn't have any modifiers and Vue 2.x\r\n                // supports such usage so we are keeping it consistent with 2.x.\r\n                content += match[3] || '';\r\n            }\r\n            arg = {\r\n                type: 4 /* SIMPLE_EXPRESSION */,\r\n                content,\r\n                isStatic,\r\n                constType: isStatic\r\n                    ? 3 /* CAN_STRINGIFY */\r\n                    : 0 /* NOT_CONSTANT */,\r\n                loc\r\n            };\r\n        }\r\n        if (value && value.isQuoted) {\r\n            const valueLoc = value.loc;\r\n            valueLoc.start.offset++;\r\n            valueLoc.start.column++;\r\n            valueLoc.end = advancePositionWithClone(valueLoc.start, value.content);\r\n            valueLoc.source = valueLoc.source.slice(1, -1);\r\n        }\r\n        const modifiers = match[3] ? match[3].slice(1).split('.') : [];\r\n        if (isPropShorthand)\r\n            modifiers.push('prop');\r\n        // 2.x compat v-bind:foo.sync -> v-model:foo\r\n        if (dirName === 'bind' && arg) {\r\n            if (modifiers.includes('sync') &&\r\n                checkCompatEnabled(\"COMPILER_V_BIND_SYNC\" /* COMPILER_V_BIND_SYNC */, context, loc, arg.loc.source)) {\r\n                dirName = 'model';\r\n                modifiers.splice(modifiers.indexOf('sync'), 1);\r\n            }\r\n            if ((process.env.NODE_ENV !== 'production') && modifiers.includes('prop')) {\r\n                checkCompatEnabled(\"COMPILER_V_BIND_PROP\" /* COMPILER_V_BIND_PROP */, context, loc);\r\n            }\r\n        }\r\n        return {\r\n            type: 7 /* DIRECTIVE */,\r\n            name: dirName,\r\n            exp: value && {\r\n                type: 4 /* SIMPLE_EXPRESSION */,\r\n                content: value.content,\r\n                isStatic: false,\r\n                // Treat as non-constant by default. This can be potentially set to\r\n                // other values by `transformExpression` to make it eligible for hoisting.\r\n                constType: 0 /* NOT_CONSTANT */,\r\n                loc: value.loc\r\n            },\r\n            arg,\r\n            modifiers,\r\n            loc\r\n        };\r\n    }\r\n    // missing directive name or illegal directive name\r\n    if (!context.inVPre && startsWith(name, 'v-')) {\r\n        emitError(context, 26 /* X_MISSING_DIRECTIVE_NAME */);\r\n    }\r\n    return {\r\n        type: 6 /* ATTRIBUTE */,\r\n        name,\r\n        value: value && {\r\n            type: 2 /* TEXT */,\r\n            content: value.content,\r\n            loc: value.loc\r\n        },\r\n        loc\r\n    };\r\n}\r\nfunction parseAttributeValue(context) {\r\n    const start = getCursor(context);\r\n    let content;\r\n    const quote = context.source[0];\r\n    const isQuoted = quote === `\"` || quote === `'`;\r\n    if (isQuoted) {\r\n        // Quoted value.\r\n        advanceBy(context, 1);\r\n        const endIndex = context.source.indexOf(quote);\r\n        if (endIndex === -1) {\r\n            content = parseTextData(context, context.source.length, 4 /* ATTRIBUTE_VALUE */);\r\n        }\r\n        else {\r\n            content = parseTextData(context, endIndex, 4 /* ATTRIBUTE_VALUE */);\r\n            advanceBy(context, 1);\r\n        }\r\n    }\r\n    else {\r\n        // Unquoted\r\n        const match = /^[^\\t\\r\\n\\f >]+/.exec(context.source);\r\n        if (!match) {\r\n            return undefined;\r\n        }\r\n        const unexpectedChars = /[\"'<=`]/g;\r\n        let m;\r\n        while ((m = unexpectedChars.exec(match[0]))) {\r\n            emitError(context, 18 /* UNEXPECTED_CHARACTER_IN_UNQUOTED_ATTRIBUTE_VALUE */, m.index);\r\n        }\r\n        content = parseTextData(context, match[0].length, 4 /* ATTRIBUTE_VALUE */);\r\n    }\r\n    return { content, isQuoted, loc: getSelection(context, start) };\r\n}\r\nfunction parseInterpolation(context, mode) {\r\n    const [open, close] = context.options.delimiters;\r\n    const closeIndex = context.source.indexOf(close, open.length);\r\n    if (closeIndex === -1) {\r\n        emitError(context, 25 /* X_MISSING_INTERPOLATION_END */);\r\n        return undefined;\r\n    }\r\n    const start = getCursor(context);\r\n    advanceBy(context, open.length);\r\n    const innerStart = getCursor(context);\r\n    const innerEnd = getCursor(context);\r\n    const rawContentLength = closeIndex - open.length;\r\n    const rawContent = context.source.slice(0, rawContentLength);\r\n    const preTrimContent = parseTextData(context, rawContentLength, mode);\r\n    const content = preTrimContent.trim();\r\n    const startOffset = preTrimContent.indexOf(content);\r\n    if (startOffset > 0) {\r\n        advancePositionWithMutation(innerStart, rawContent, startOffset);\r\n    }\r\n    const endOffset = rawContentLength - (preTrimContent.length - content.length - startOffset);\r\n    advancePositionWithMutation(innerEnd, rawContent, endOffset);\r\n    advanceBy(context, close.length);\r\n    return {\r\n        type: 5 /* INTERPOLATION */,\r\n        content: {\r\n            type: 4 /* SIMPLE_EXPRESSION */,\r\n            isStatic: false,\r\n            // Set `isConstant` to false by default and will decide in transformExpression\r\n            constType: 0 /* NOT_CONSTANT */,\r\n            content,\r\n            loc: getSelection(context, innerStart, innerEnd)\r\n        },\r\n        loc: getSelection(context, start)\r\n    };\r\n}\r\nfunction parseText(context, mode) {\r\n    const endTokens = mode === 3 /* CDATA */ ? [']]>'] : ['<', context.options.delimiters[0]];\r\n    let endIndex = context.source.length;\r\n    for (let i = 0; i < endTokens.length; i++) {\r\n        const index = context.source.indexOf(endTokens[i], 1);\r\n        if (index !== -1 && endIndex > index) {\r\n            endIndex = index;\r\n        }\r\n    }\r\n    const start = getCursor(context);\r\n    const content = parseTextData(context, endIndex, mode);\r\n    return {\r\n        type: 2 /* TEXT */,\r\n        content,\r\n        loc: getSelection(context, start)\r\n    };\r\n}\r\n/**\r\n * Get text data with a given length from the current location.\r\n * This translates HTML entities in the text data.\r\n */\r\nfunction parseTextData(context, length, mode) {\r\n    const rawText = context.source.slice(0, length);\r\n    advanceBy(context, length);\r\n    if (mode === 2 /* RAWTEXT */ ||\r\n        mode === 3 /* CDATA */ ||\r\n        !rawText.includes('&')) {\r\n        return rawText;\r\n    }\r\n    else {\r\n        // DATA or RCDATA containing \"&\"\". Entity decoding required.\r\n        return context.options.decodeEntities(rawText, mode === 4 /* ATTRIBUTE_VALUE */);\r\n    }\r\n}\r\nfunction getCursor(context) {\r\n    const { column, line, offset } = context;\r\n    return { column, line, offset };\r\n}\r\nfunction getSelection(context, start, end) {\r\n    end = end || getCursor(context);\r\n    return {\r\n        start,\r\n        end,\r\n        source: context.originalSource.slice(start.offset, end.offset)\r\n    };\r\n}\r\nfunction last(xs) {\r\n    return xs[xs.length - 1];\r\n}\r\nfunction startsWith(source, searchString) {\r\n    return source.startsWith(searchString);\r\n}\r\nfunction advanceBy(context, numberOfCharacters) {\r\n    const { source } = context;\r\n    advancePositionWithMutation(context, source, numberOfCharacters);\r\n    context.source = source.slice(numberOfCharacters);\r\n}\r\nfunction advanceSpaces(context) {\r\n    const match = /^[\\t\\r\\n\\f ]+/.exec(context.source);\r\n    if (match) {\r\n        advanceBy(context, match[0].length);\r\n    }\r\n}\r\nfunction getNewPosition(context, start, numberOfCharacters) {\r\n    return advancePositionWithClone(start, context.originalSource.slice(start.offset, numberOfCharacters), numberOfCharacters);\r\n}\r\nfunction emitError(context, code, offset, loc = getCursor(context)) {\r\n    if (offset) {\r\n        loc.offset += offset;\r\n        loc.column += offset;\r\n    }\r\n    context.options.onError(createCompilerError(code, {\r\n        start: loc,\r\n        end: loc,\r\n        source: ''\r\n    }));\r\n}\r\nfunction isEnd(context, mode, ancestors) {\r\n    const s = context.source;\r\n    switch (mode) {\r\n        case 0 /* DATA */:\r\n            if (startsWith(s, '</')) {\r\n                // TODO: probably bad performance\r\n                for (let i = ancestors.length - 1; i >= 0; --i) {\r\n                    if (startsWithEndTagOpen(s, ancestors[i].tag)) {\r\n                        return true;\r\n                    }\r\n                }\r\n            }\r\n            break;\r\n        case 1 /* RCDATA */:\r\n        case 2 /* RAWTEXT */: {\r\n            const parent = last(ancestors);\r\n            if (parent && startsWithEndTagOpen(s, parent.tag)) {\r\n                return true;\r\n            }\r\n            break;\r\n        }\r\n        case 3 /* CDATA */:\r\n            if (startsWith(s, ']]>')) {\r\n                return true;\r\n            }\r\n            break;\r\n    }\r\n    return !s;\r\n}\r\nfunction startsWithEndTagOpen(source, tag) {\r\n    return (startsWith(source, '</') &&\r\n        source.slice(2, 2 + tag.length).toLowerCase() === tag.toLowerCase() &&\r\n        /[\\t\\r\\n\\f />]/.test(source[2 + tag.length] || '>'));\r\n}\n\nfunction hoistStatic(root, context) {\r\n    walk(root, context, \r\n    // Root node is unfortunately non-hoistable due to potential parent\r\n    // fallthrough attributes.\r\n    isSingleElementRoot(root, root.children[0]));\r\n}\r\nfunction isSingleElementRoot(root, child) {\r\n    const { children } = root;\r\n    return (children.length === 1 &&\r\n        child.type === 1 /* ELEMENT */ &&\r\n        !isSlotOutlet(child));\r\n}\r\nfunction walk(node, context, doNotHoistNode = false) {\r\n    const { children } = node;\r\n    const originalCount = children.length;\r\n    let hoistedCount = 0;\r\n    for (let i = 0; i < children.length; i++) {\r\n        const child = children[i];\r\n        // only plain elements & text calls are eligible for hoisting.\r\n        if (child.type === 1 /* ELEMENT */ &&\r\n            child.tagType === 0 /* ELEMENT */) {\r\n            const constantType = doNotHoistNode\r\n                ? 0 /* NOT_CONSTANT */\r\n                : getConstantType(child, context);\r\n            if (constantType > 0 /* NOT_CONSTANT */) {\r\n                if (constantType >= 2 /* CAN_HOIST */) {\r\n                    child.codegenNode.patchFlag =\r\n                        -1 /* HOISTED */ + ((process.env.NODE_ENV !== 'production') ? ` /* HOISTED */` : ``);\r\n                    child.codegenNode = context.hoist(child.codegenNode);\r\n                    hoistedCount++;\r\n                    continue;\r\n                }\r\n            }\r\n            else {\r\n                // node may contain dynamic children, but its props may be eligible for\r\n                // hoisting.\r\n                const codegenNode = child.codegenNode;\r\n                if (codegenNode.type === 13 /* VNODE_CALL */) {\r\n                    const flag = getPatchFlag(codegenNode);\r\n                    if ((!flag ||\r\n                        flag === 512 /* NEED_PATCH */ ||\r\n                        flag === 1 /* TEXT */) &&\r\n                        getGeneratedPropsConstantType(child, context) >=\r\n                            2 /* CAN_HOIST */) {\r\n                        const props = getNodeProps(child);\r\n                        if (props) {\r\n                            codegenNode.props = context.hoist(props);\r\n                        }\r\n                    }\r\n                    if (codegenNode.dynamicProps) {\r\n                        codegenNode.dynamicProps = context.hoist(codegenNode.dynamicProps);\r\n                    }\r\n                }\r\n            }\r\n        }\r\n        else if (child.type === 12 /* TEXT_CALL */ &&\r\n            getConstantType(child.content, context) >= 2 /* CAN_HOIST */) {\r\n            child.codegenNode = context.hoist(child.codegenNode);\r\n            hoistedCount++;\r\n        }\r\n        // walk further\r\n        if (child.type === 1 /* ELEMENT */) {\r\n            const isComponent = child.tagType === 1 /* COMPONENT */;\r\n            if (isComponent) {\r\n                context.scopes.vSlot++;\r\n            }\r\n            walk(child, context);\r\n            if (isComponent) {\r\n                context.scopes.vSlot--;\r\n            }\r\n        }\r\n        else if (child.type === 11 /* FOR */) {\r\n            // Do not hoist v-for single child because it has to be a block\r\n            walk(child, context, child.children.length === 1);\r\n        }\r\n        else if (child.type === 9 /* IF */) {\r\n            for (let i = 0; i < child.branches.length; i++) {\r\n                // Do not hoist v-if single child because it has to be a block\r\n                walk(child.branches[i], context, child.branches[i].children.length === 1);\r\n            }\r\n        }\r\n    }\r\n    if (hoistedCount && context.transformHoist) {\r\n        context.transformHoist(children, context, node);\r\n    }\r\n    // all children were hoisted - the entire children array is hoistable.\r\n    if (hoistedCount &&\r\n        hoistedCount === originalCount &&\r\n        node.type === 1 /* ELEMENT */ &&\r\n        node.tagType === 0 /* ELEMENT */ &&\r\n        node.codegenNode &&\r\n        node.codegenNode.type === 13 /* VNODE_CALL */ &&\r\n        isArray(node.codegenNode.children)) {\r\n        node.codegenNode.children = context.hoist(createArrayExpression(node.codegenNode.children));\r\n    }\r\n}\r\nfunction getConstantType(node, context) {\r\n    const { constantCache } = context;\r\n    switch (node.type) {\r\n        case 1 /* ELEMENT */:\r\n            if (node.tagType !== 0 /* ELEMENT */) {\r\n                return 0 /* NOT_CONSTANT */;\r\n            }\r\n            const cached = constantCache.get(node);\r\n            if (cached !== undefined) {\r\n                return cached;\r\n            }\r\n            const codegenNode = node.codegenNode;\r\n            if (codegenNode.type !== 13 /* VNODE_CALL */) {\r\n                return 0 /* NOT_CONSTANT */;\r\n            }\r\n            if (codegenNode.isBlock &&\r\n                node.tag !== 'svg' &&\r\n                node.tag !== 'foreignObject') {\r\n                return 0 /* NOT_CONSTANT */;\r\n            }\r\n            const flag = getPatchFlag(codegenNode);\r\n            if (!flag) {\r\n                let returnType = 3 /* CAN_STRINGIFY */;\r\n                // Element itself has no patch flag. However we still need to check:\r\n                // 1. Even for a node with no patch flag, it is possible for it to contain\r\n                // non-hoistable expressions that refers to scope variables, e.g. compiler\r\n                // injected keys or cached event handlers. Therefore we need to always\r\n                // check the codegenNode's props to be sure.\r\n                const generatedPropsType = getGeneratedPropsConstantType(node, context);\r\n                if (generatedPropsType === 0 /* NOT_CONSTANT */) {\r\n                    constantCache.set(node, 0 /* NOT_CONSTANT */);\r\n                    return 0 /* NOT_CONSTANT */;\r\n                }\r\n                if (generatedPropsType < returnType) {\r\n                    returnType = generatedPropsType;\r\n                }\r\n                // 2. its children.\r\n                for (let i = 0; i < node.children.length; i++) {\r\n                    const childType = getConstantType(node.children[i], context);\r\n                    if (childType === 0 /* NOT_CONSTANT */) {\r\n                        constantCache.set(node, 0 /* NOT_CONSTANT */);\r\n                        return 0 /* NOT_CONSTANT */;\r\n                    }\r\n                    if (childType < returnType) {\r\n                        returnType = childType;\r\n                    }\r\n                }\r\n                // 3. if the type is not already CAN_SKIP_PATCH which is the lowest non-0\r\n                // type, check if any of the props can cause the type to be lowered\r\n                // we can skip can_patch because it's guaranteed by the absence of a\r\n                // patchFlag.\r\n                if (returnType > 1 /* CAN_SKIP_PATCH */) {\r\n                    for (let i = 0; i < node.props.length; i++) {\r\n                        const p = node.props[i];\r\n                        if (p.type === 7 /* DIRECTIVE */ && p.name === 'bind' && p.exp) {\r\n                            const expType = getConstantType(p.exp, context);\r\n                            if (expType === 0 /* NOT_CONSTANT */) {\r\n                                constantCache.set(node, 0 /* NOT_CONSTANT */);\r\n                                return 0 /* NOT_CONSTANT */;\r\n                            }\r\n                            if (expType < returnType) {\r\n                                returnType = expType;\r\n                            }\r\n                        }\r\n                    }\r\n                }\r\n                // only svg/foreignObject could be block here, however if they are\r\n                // static then they don't need to be blocks since there will be no\r\n                // nested updates.\r\n                if (codegenNode.isBlock) {\r\n                    context.removeHelper(OPEN_BLOCK);\r\n                    context.removeHelper(getVNodeBlockHelper(context.inSSR, codegenNode.isComponent));\r\n                    codegenNode.isBlock = false;\r\n                    context.helper(getVNodeHelper(context.inSSR, codegenNode.isComponent));\r\n                }\r\n                constantCache.set(node, returnType);\r\n                return returnType;\r\n            }\r\n            else {\r\n                constantCache.set(node, 0 /* NOT_CONSTANT */);\r\n                return 0 /* NOT_CONSTANT */;\r\n            }\r\n        case 2 /* TEXT */:\r\n        case 3 /* COMMENT */:\r\n            return 3 /* CAN_STRINGIFY */;\r\n        case 9 /* IF */:\r\n        case 11 /* FOR */:\r\n        case 10 /* IF_BRANCH */:\r\n            return 0 /* NOT_CONSTANT */;\r\n        case 5 /* INTERPOLATION */:\r\n        case 12 /* TEXT_CALL */:\r\n            return getConstantType(node.content, context);\r\n        case 4 /* SIMPLE_EXPRESSION */:\r\n            return node.constType;\r\n        case 8 /* COMPOUND_EXPRESSION */:\r\n            let returnType = 3 /* CAN_STRINGIFY */;\r\n            for (let i = 0; i < node.children.length; i++) {\r\n                const child = node.children[i];\r\n                if (isString(child) || isSymbol(child)) {\r\n                    continue;\r\n                }\r\n                const childType = getConstantType(child, context);\r\n                if (childType === 0 /* NOT_CONSTANT */) {\r\n                    return 0 /* NOT_CONSTANT */;\r\n                }\r\n                else if (childType < returnType) {\r\n                    returnType = childType;\r\n                }\r\n            }\r\n            return returnType;\r\n        default:\r\n            if ((process.env.NODE_ENV !== 'production')) ;\r\n            return 0 /* NOT_CONSTANT */;\r\n    }\r\n}\r\nconst allowHoistedHelperSet = new Set([\r\n    NORMALIZE_CLASS,\r\n    NORMALIZE_STYLE,\r\n    NORMALIZE_PROPS,\r\n    GUARD_REACTIVE_PROPS\r\n]);\r\nfunction getConstantTypeOfHelperCall(value, context) {\r\n    if (value.type === 14 /* JS_CALL_EXPRESSION */ &&\r\n        !isString(value.callee) &&\r\n        allowHoistedHelperSet.has(value.callee)) {\r\n        const arg = value.arguments[0];\r\n        if (arg.type === 4 /* SIMPLE_EXPRESSION */) {\r\n            return getConstantType(arg, context);\r\n        }\r\n        else if (arg.type === 14 /* JS_CALL_EXPRESSION */) {\r\n            // in the case of nested helper call, e.g. `normalizeProps(guardReactiveProps(exp))`\r\n            return getConstantTypeOfHelperCall(arg, context);\r\n        }\r\n    }\r\n    return 0 /* NOT_CONSTANT */;\r\n}\r\nfunction getGeneratedPropsConstantType(node, context) {\r\n    let returnType = 3 /* CAN_STRINGIFY */;\r\n    const props = getNodeProps(node);\r\n    if (props && props.type === 15 /* JS_OBJECT_EXPRESSION */) {\r\n        const { properties } = props;\r\n        for (let i = 0; i < properties.length; i++) {\r\n            const { key, value } = properties[i];\r\n            const keyType = getConstantType(key, context);\r\n            if (keyType === 0 /* NOT_CONSTANT */) {\r\n                return keyType;\r\n            }\r\n            if (keyType < returnType) {\r\n                returnType = keyType;\r\n            }\r\n            let valueType;\r\n            if (value.type === 4 /* SIMPLE_EXPRESSION */) {\r\n                valueType = getConstantType(value, context);\r\n            }\r\n            else if (value.type === 14 /* JS_CALL_EXPRESSION */) {\r\n                // some helper calls can be hoisted,\r\n                // such as the `normalizeProps` generated by the compiler for pre-normalize class,\r\n                // in this case we need to respect the ConstantType of the helper's arguments\r\n                valueType = getConstantTypeOfHelperCall(value, context);\r\n            }\r\n            else {\r\n                valueType = 0 /* NOT_CONSTANT */;\r\n            }\r\n            if (valueType === 0 /* NOT_CONSTANT */) {\r\n                return valueType;\r\n            }\r\n            if (valueType < returnType) {\r\n                returnType = valueType;\r\n            }\r\n        }\r\n    }\r\n    return returnType;\r\n}\r\nfunction getNodeProps(node) {\r\n    const codegenNode = node.codegenNode;\r\n    if (codegenNode.type === 13 /* VNODE_CALL */) {\r\n        return codegenNode.props;\r\n    }\r\n}\r\nfunction getPatchFlag(node) {\r\n    const flag = node.patchFlag;\r\n    return flag ? parseInt(flag, 10) : undefined;\r\n}\n\nfunction createTransformContext(root, { filename = '', prefixIdentifiers = false, hoistStatic = false, cacheHandlers = false, nodeTransforms = [], directiveTransforms = {}, transformHoist = null, isBuiltInComponent = NOOP, isCustomElement = NOOP, expressionPlugins = [], scopeId = null, slotted = true, ssr = false, inSSR = false, ssrCssVars = ``, bindingMetadata = EMPTY_OBJ, inline = false, isTS = false, onError = defaultOnError, onWarn = defaultOnWarn, compatConfig }) {\r\n    const nameMatch = filename.replace(/\\?.*$/, '').match(/([^/\\\\]+)\\.\\w+$/);\r\n    const context = {\r\n        // options\r\n        selfName: nameMatch && capitalize(camelize$1(nameMatch[1])),\r\n        prefixIdentifiers,\r\n        hoistStatic,\r\n        cacheHandlers,\r\n        nodeTransforms,\r\n        directiveTransforms,\r\n        transformHoist,\r\n        isBuiltInComponent,\r\n        isCustomElement,\r\n        expressionPlugins,\r\n        scopeId,\r\n        slotted,\r\n        ssr,\r\n        inSSR,\r\n        ssrCssVars,\r\n        bindingMetadata,\r\n        inline,\r\n        isTS,\r\n        onError,\r\n        onWarn,\r\n        compatConfig,\r\n        // state\r\n        root,\r\n        helpers: new Map(),\r\n        components: new Set(),\r\n        directives: new Set(),\r\n        hoists: [],\r\n        imports: [],\r\n        constantCache: new Map(),\r\n        temps: 0,\r\n        cached: 0,\r\n        identifiers: Object.create(null),\r\n        scopes: {\r\n            vFor: 0,\r\n            vSlot: 0,\r\n            vPre: 0,\r\n            vOnce: 0\r\n        },\r\n        parent: null,\r\n        currentNode: root,\r\n        childIndex: 0,\r\n        inVOnce: false,\r\n        // methods\r\n        helper(name) {\r\n            const count = context.helpers.get(name) || 0;\r\n            context.helpers.set(name, count + 1);\r\n            return name;\r\n        },\r\n        removeHelper(name) {\r\n            const count = context.helpers.get(name);\r\n            if (count) {\r\n                const currentCount = count - 1;\r\n                if (!currentCount) {\r\n                    context.helpers.delete(name);\r\n                }\r\n                else {\r\n                    context.helpers.set(name, currentCount);\r\n                }\r\n            }\r\n        },\r\n        helperString(name) {\r\n            return `_${helperNameMap[context.helper(name)]}`;\r\n        },\r\n        replaceNode(node) {\r\n            /* istanbul ignore if */\r\n            if ((process.env.NODE_ENV !== 'production')) {\r\n                if (!context.currentNode) {\r\n                    throw new Error(`Node being replaced is already removed.`);\r\n                }\r\n                if (!context.parent) {\r\n                    throw new Error(`Cannot replace root node.`);\r\n                }\r\n            }\r\n            context.parent.children[context.childIndex] = context.currentNode = node;\r\n        },\r\n        removeNode(node) {\r\n            if ((process.env.NODE_ENV !== 'production') && !context.parent) {\r\n                throw new Error(`Cannot remove root node.`);\r\n            }\r\n            const list = context.parent.children;\r\n            const removalIndex = node\r\n                ? list.indexOf(node)\r\n                : context.currentNode\r\n                    ? context.childIndex\r\n                    : -1;\r\n            /* istanbul ignore if */\r\n            if ((process.env.NODE_ENV !== 'production') && removalIndex < 0) {\r\n                throw new Error(`node being removed is not a child of current parent`);\r\n            }\r\n            if (!node || node === context.currentNode) {\r\n                // current node removed\r\n                context.currentNode = null;\r\n                context.onNodeRemoved();\r\n            }\r\n            else {\r\n                // sibling node removed\r\n                if (context.childIndex > removalIndex) {\r\n                    context.childIndex--;\r\n                    context.onNodeRemoved();\r\n                }\r\n            }\r\n            context.parent.children.splice(removalIndex, 1);\r\n        },\r\n        onNodeRemoved: () => { },\r\n        addIdentifiers(exp) {\r\n        },\r\n        removeIdentifiers(exp) {\r\n        },\r\n        hoist(exp) {\r\n            if (isString(exp))\r\n                exp = createSimpleExpression(exp);\r\n            context.hoists.push(exp);\r\n            const identifier = createSimpleExpression(`_hoisted_${context.hoists.length}`, false, exp.loc, 2 /* CAN_HOIST */);\r\n            identifier.hoisted = exp;\r\n            return identifier;\r\n        },\r\n        cache(exp, isVNode = false) {\r\n            return createCacheExpression(context.cached++, exp, isVNode);\r\n        }\r\n    };\r\n    {\r\n        context.filters = new Set();\r\n    }\r\n    return context;\r\n}\r\nfunction transform(root, options) {\r\n    const context = createTransformContext(root, options);\r\n    traverseNode(root, context);\r\n    if (options.hoistStatic) {\r\n        hoistStatic(root, context);\r\n    }\r\n    if (!options.ssr) {\r\n        createRootCodegen(root, context);\r\n    }\r\n    // finalize meta information\r\n    root.helpers = [...context.helpers.keys()];\r\n    root.components = [...context.components];\r\n    root.directives = [...context.directives];\r\n    root.imports = context.imports;\r\n    root.hoists = context.hoists;\r\n    root.temps = context.temps;\r\n    root.cached = context.cached;\r\n    {\r\n        root.filters = [...context.filters];\r\n    }\r\n}\r\nfunction createRootCodegen(root, context) {\r\n    const { helper } = context;\r\n    const { children } = root;\r\n    if (children.length === 1) {\r\n        const child = children[0];\r\n        // if the single child is an element, turn it into a block.\r\n        if (isSingleElementRoot(root, child) && child.codegenNode) {\r\n            // single element root is never hoisted so codegenNode will never be\r\n            // SimpleExpressionNode\r\n            const codegenNode = child.codegenNode;\r\n            if (codegenNode.type === 13 /* VNODE_CALL */) {\r\n                makeBlock(codegenNode, context);\r\n            }\r\n            root.codegenNode = codegenNode;\r\n        }\r\n        else {\r\n            // - single <slot/>, IfNode, ForNode: already blocks.\r\n            // - single text node: always patched.\r\n            // root codegen falls through via genNode()\r\n            root.codegenNode = child;\r\n        }\r\n    }\r\n    else if (children.length > 1) {\r\n        // root has multiple nodes - return a fragment block.\r\n        let patchFlag = 64 /* STABLE_FRAGMENT */;\r\n        let patchFlagText = PatchFlagNames[64 /* STABLE_FRAGMENT */];\r\n        // check if the fragment actually contains a single valid child with\r\n        // the rest being comments\r\n        if ((process.env.NODE_ENV !== 'production') &&\r\n            children.filter(c => c.type !== 3 /* COMMENT */).length === 1) {\r\n            patchFlag |= 2048 /* DEV_ROOT_FRAGMENT */;\r\n            patchFlagText += `, ${PatchFlagNames[2048 /* DEV_ROOT_FRAGMENT */]}`;\r\n        }\r\n        root.codegenNode = createVNodeCall(context, helper(FRAGMENT), undefined, root.children, patchFlag + ((process.env.NODE_ENV !== 'production') ? ` /* ${patchFlagText} */` : ``), undefined, undefined, true, undefined, false /* isComponent */);\r\n    }\r\n    else ;\r\n}\r\nfunction traverseChildren(parent, context) {\r\n    let i = 0;\r\n    const nodeRemoved = () => {\r\n        i--;\r\n    };\r\n    for (; i < parent.children.length; i++) {\r\n        const child = parent.children[i];\r\n        if (isString(child))\r\n            continue;\r\n        context.parent = parent;\r\n        context.childIndex = i;\r\n        context.onNodeRemoved = nodeRemoved;\r\n        traverseNode(child, context);\r\n    }\r\n}\r\nfunction traverseNode(node, context) {\r\n    context.currentNode = node;\r\n    // apply transform plugins\r\n    const { nodeTransforms } = context;\r\n    const exitFns = [];\r\n    for (let i = 0; i < nodeTransforms.length; i++) {\r\n        const onExit = nodeTransforms[i](node, context);\r\n        if (onExit) {\r\n            if (isArray(onExit)) {\r\n                exitFns.push(...onExit);\r\n            }\r\n            else {\r\n                exitFns.push(onExit);\r\n            }\r\n        }\r\n        if (!context.currentNode) {\r\n            // node was removed\r\n            return;\r\n        }\r\n        else {\r\n            // node may have been replaced\r\n            node = context.currentNode;\r\n        }\r\n    }\r\n    switch (node.type) {\r\n        case 3 /* COMMENT */:\r\n            if (!context.ssr) {\r\n                // inject import for the Comment symbol, which is needed for creating\r\n                // comment nodes with `createVNode`\r\n                context.helper(CREATE_COMMENT);\r\n            }\r\n            break;\r\n        case 5 /* INTERPOLATION */:\r\n            // no need to traverse, but we need to inject toString helper\r\n            if (!context.ssr) {\r\n                context.helper(TO_DISPLAY_STRING);\r\n            }\r\n            break;\r\n        // for container types, further traverse downwards\r\n        case 9 /* IF */:\r\n            for (let i = 0; i < node.branches.length; i++) {\r\n                traverseNode(node.branches[i], context);\r\n            }\r\n            break;\r\n        case 10 /* IF_BRANCH */:\r\n        case 11 /* FOR */:\r\n        case 1 /* ELEMENT */:\r\n        case 0 /* ROOT */:\r\n            traverseChildren(node, context);\r\n            break;\r\n    }\r\n    // exit transforms\r\n    context.currentNode = node;\r\n    let i = exitFns.length;\r\n    while (i--) {\r\n        exitFns[i]();\r\n    }\r\n}\r\nfunction createStructuralDirectiveTransform(name, fn) {\r\n    const matches = isString(name)\r\n        ? (n) => n === name\r\n        : (n) => name.test(n);\r\n    return (node, context) => {\r\n        if (node.type === 1 /* ELEMENT */) {\r\n            const { props } = node;\r\n            // structural directive transforms are not concerned with slots\r\n            // as they are handled separately in vSlot.ts\r\n            if (node.tagType === 3 /* TEMPLATE */ && props.some(isVSlot)) {\r\n                return;\r\n            }\r\n            const exitFns = [];\r\n            for (let i = 0; i < props.length; i++) {\r\n                const prop = props[i];\r\n                if (prop.type === 7 /* DIRECTIVE */ && matches(prop.name)) {\r\n                    // structural directives are removed to avoid infinite recursion\r\n                    // also we remove them *before* applying so that it can further\r\n                    // traverse itself in case it moves the node around\r\n                    props.splice(i, 1);\r\n                    i--;\r\n                    const onExit = fn(node, prop, context);\r\n                    if (onExit)\r\n                        exitFns.push(onExit);\r\n                }\r\n            }\r\n            return exitFns;\r\n        }\r\n    };\r\n}\n\nconst PURE_ANNOTATION = `/*#__PURE__*/`;\r\nfunction createCodegenContext(ast, { mode = 'function', prefixIdentifiers = mode === 'module', sourceMap = false, filename = `template.vue.html`, scopeId = null, optimizeImports = false, runtimeGlobalName = `Vue`, runtimeModuleName = `vue`, ssrRuntimeModuleName = 'vue/server-renderer', ssr = false, isTS = false, inSSR = false }) {\r\n    const context = {\r\n        mode,\r\n        prefixIdentifiers,\r\n        sourceMap,\r\n        filename,\r\n        scopeId,\r\n        optimizeImports,\r\n        runtimeGlobalName,\r\n        runtimeModuleName,\r\n        ssrRuntimeModuleName,\r\n        ssr,\r\n        isTS,\r\n        inSSR,\r\n        source: ast.loc.source,\r\n        code: ``,\r\n        column: 1,\r\n        line: 1,\r\n        offset: 0,\r\n        indentLevel: 0,\r\n        pure: false,\r\n        map: undefined,\r\n        helper(key) {\r\n            return `_${helperNameMap[key]}`;\r\n        },\r\n        push(code, node) {\r\n            context.code += code;\r\n        },\r\n        indent() {\r\n            newline(++context.indentLevel);\r\n        },\r\n        deindent(withoutNewLine = false) {\r\n            if (withoutNewLine) {\r\n                --context.indentLevel;\r\n            }\r\n            else {\r\n                newline(--context.indentLevel);\r\n            }\r\n        },\r\n        newline() {\r\n            newline(context.indentLevel);\r\n        }\r\n    };\r\n    function newline(n) {\r\n        context.push('\\n' + `  `.repeat(n));\r\n    }\r\n    return context;\r\n}\r\nfunction generate(ast, options = {}) {\r\n    const context = createCodegenContext(ast, options);\r\n    if (options.onContextCreated)\r\n        options.onContextCreated(context);\r\n    const { mode, push, prefixIdentifiers, indent, deindent, newline, scopeId, ssr } = context;\r\n    const hasHelpers = ast.helpers.length > 0;\r\n    const useWithBlock = !prefixIdentifiers && mode !== 'module';\r\n    // preambles\r\n    // in setup() inline mode, the preamble is generated in a sub context\r\n    // and returned separately.\r\n    const preambleContext = context;\r\n    {\r\n        genFunctionPreamble(ast, preambleContext);\r\n    }\r\n    // enter render function\r\n    const functionName = ssr ? `ssrRender` : `render`;\r\n    const args = ssr ? ['_ctx', '_push', '_parent', '_attrs'] : ['_ctx', '_cache'];\r\n    const signature = args.join(', ');\r\n    {\r\n        push(`function ${functionName}(${signature}) {`);\r\n    }\r\n    indent();\r\n    if (useWithBlock) {\r\n        push(`with (_ctx) {`);\r\n        indent();\r\n        // function mode const declarations should be inside with block\r\n        // also they should be renamed to avoid collision with user properties\r\n        if (hasHelpers) {\r\n            push(`const { ${ast.helpers\r\n                .map(s => `${helperNameMap[s]}: _${helperNameMap[s]}`)\r\n                .join(', ')} } = _Vue`);\r\n            push(`\\n`);\r\n            newline();\r\n        }\r\n    }\r\n    // generate asset resolution statements\r\n    if (ast.components.length) {\r\n        genAssets(ast.components, 'component', context);\r\n        if (ast.directives.length || ast.temps > 0) {\r\n            newline();\r\n        }\r\n    }\r\n    if (ast.directives.length) {\r\n        genAssets(ast.directives, 'directive', context);\r\n        if (ast.temps > 0) {\r\n            newline();\r\n        }\r\n    }\r\n    if (ast.filters && ast.filters.length) {\r\n        newline();\r\n        genAssets(ast.filters, 'filter', context);\r\n        newline();\r\n    }\r\n    if (ast.temps > 0) {\r\n        push(`let `);\r\n        for (let i = 0; i < ast.temps; i++) {\r\n            push(`${i > 0 ? `, ` : ``}_temp${i}`);\r\n        }\r\n    }\r\n    if (ast.components.length || ast.directives.length || ast.temps) {\r\n        push(`\\n`);\r\n        newline();\r\n    }\r\n    // generate the VNode tree expression\r\n    if (!ssr) {\r\n        push(`return `);\r\n    }\r\n    if (ast.codegenNode) {\r\n        genNode(ast.codegenNode, context);\r\n    }\r\n    else {\r\n        push(`null`);\r\n    }\r\n    if (useWithBlock) {\r\n        deindent();\r\n        push(`}`);\r\n    }\r\n    deindent();\r\n    push(`}`);\r\n    return {\r\n        ast,\r\n        code: context.code,\r\n        preamble: ``,\r\n        // SourceMapGenerator does have toJSON() method but it's not in the types\r\n        map: context.map ? context.map.toJSON() : undefined\r\n    };\r\n}\r\nfunction genFunctionPreamble(ast, context) {\r\n    const { ssr, prefixIdentifiers, push, newline, runtimeModuleName, runtimeGlobalName, ssrRuntimeModuleName } = context;\r\n    const VueBinding = runtimeGlobalName;\r\n    const aliasHelper = (s) => `${helperNameMap[s]}: _${helperNameMap[s]}`;\r\n    // Generate const declaration for helpers\r\n    // In prefix mode, we place the const declaration at top so it's done\r\n    // only once; But if we not prefixing, we place the declaration inside the\r\n    // with block so it doesn't incur the `in` check cost for every helper access.\r\n    if (ast.helpers.length > 0) {\r\n        {\r\n            // \"with\" mode.\r\n            // save Vue in a separate variable to avoid collision\r\n            push(`const _Vue = ${VueBinding}\\n`);\r\n            // in \"with\" mode, helpers are declared inside the with block to avoid\r\n            // has check cost, but hoists are lifted out of the function - we need\r\n            // to provide the helper here.\r\n            if (ast.hoists.length) {\r\n                const staticHelpers = [\r\n                    CREATE_VNODE,\r\n                    CREATE_ELEMENT_VNODE,\r\n                    CREATE_COMMENT,\r\n                    CREATE_TEXT,\r\n                    CREATE_STATIC\r\n                ]\r\n                    .filter(helper => ast.helpers.includes(helper))\r\n                    .map(aliasHelper)\r\n                    .join(', ');\r\n                push(`const { ${staticHelpers} } = _Vue\\n`);\r\n            }\r\n        }\r\n    }\r\n    genHoists(ast.hoists, context);\r\n    newline();\r\n    push(`return `);\r\n}\r\nfunction genAssets(assets, type, { helper, push, newline, isTS }) {\r\n    const resolver = helper(type === 'filter'\r\n        ? RESOLVE_FILTER\r\n        : type === 'component'\r\n            ? RESOLVE_COMPONENT\r\n            : RESOLVE_DIRECTIVE);\r\n    for (let i = 0; i < assets.length; i++) {\r\n        let id = assets[i];\r\n        // potential component implicit self-reference inferred from SFC filename\r\n        const maybeSelfReference = id.endsWith('__self');\r\n        if (maybeSelfReference) {\r\n            id = id.slice(0, -6);\r\n        }\r\n        push(`const ${toValidAssetId(id, type)} = ${resolver}(${JSON.stringify(id)}${maybeSelfReference ? `, true` : ``})${isTS ? `!` : ``}`);\r\n        if (i < assets.length - 1) {\r\n            newline();\r\n        }\r\n    }\r\n}\r\nfunction genHoists(hoists, context) {\r\n    if (!hoists.length) {\r\n        return;\r\n    }\r\n    context.pure = true;\r\n    const { push, newline, helper, scopeId, mode } = context;\r\n    newline();\r\n    for (let i = 0; i < hoists.length; i++) {\r\n        const exp = hoists[i];\r\n        if (exp) {\r\n            push(`const _hoisted_${i + 1} = ${``}`);\r\n            genNode(exp, context);\r\n            newline();\r\n        }\r\n    }\r\n    context.pure = false;\r\n}\r\nfunction isText$1(n) {\r\n    return (isString(n) ||\r\n        n.type === 4 /* SIMPLE_EXPRESSION */ ||\r\n        n.type === 2 /* TEXT */ ||\r\n        n.type === 5 /* INTERPOLATION */ ||\r\n        n.type === 8 /* COMPOUND_EXPRESSION */);\r\n}\r\nfunction genNodeListAsArray(nodes, context) {\r\n    const multilines = nodes.length > 3 ||\r\n        (((process.env.NODE_ENV !== 'production')) && nodes.some(n => isArray(n) || !isText$1(n)));\r\n    context.push(`[`);\r\n    multilines && context.indent();\r\n    genNodeList(nodes, context, multilines);\r\n    multilines && context.deindent();\r\n    context.push(`]`);\r\n}\r\nfunction genNodeList(nodes, context, multilines = false, comma = true) {\r\n    const { push, newline } = context;\r\n    for (let i = 0; i < nodes.length; i++) {\r\n        const node = nodes[i];\r\n        if (isString(node)) {\r\n            push(node);\r\n        }\r\n        else if (isArray(node)) {\r\n            genNodeListAsArray(node, context);\r\n        }\r\n        else {\r\n            genNode(node, context);\r\n        }\r\n        if (i < nodes.length - 1) {\r\n            if (multilines) {\r\n                comma && push(',');\r\n                newline();\r\n            }\r\n            else {\r\n                comma && push(', ');\r\n            }\r\n        }\r\n    }\r\n}\r\nfunction genNode(node, context) {\r\n    if (isString(node)) {\r\n        context.push(node);\r\n        return;\r\n    }\r\n    if (isSymbol(node)) {\r\n        context.push(context.helper(node));\r\n        return;\r\n    }\r\n    switch (node.type) {\r\n        case 1 /* ELEMENT */:\r\n        case 9 /* IF */:\r\n        case 11 /* FOR */:\r\n            (process.env.NODE_ENV !== 'production') &&\r\n                assert(node.codegenNode != null, `Codegen node is missing for element/if/for node. ` +\r\n                    `Apply appropriate transforms first.`);\r\n            genNode(node.codegenNode, context);\r\n            break;\r\n        case 2 /* TEXT */:\r\n            genText(node, context);\r\n            break;\r\n        case 4 /* SIMPLE_EXPRESSION */:\r\n            genExpression(node, context);\r\n            break;\r\n        case 5 /* INTERPOLATION */:\r\n            genInterpolation(node, context);\r\n            break;\r\n        case 12 /* TEXT_CALL */:\r\n            genNode(node.codegenNode, context);\r\n            break;\r\n        case 8 /* COMPOUND_EXPRESSION */:\r\n            genCompoundExpression(node, context);\r\n            break;\r\n        case 3 /* COMMENT */:\r\n            genComment(node, context);\r\n            break;\r\n        case 13 /* VNODE_CALL */:\r\n            genVNodeCall(node, context);\r\n            break;\r\n        case 14 /* JS_CALL_EXPRESSION */:\r\n            genCallExpression(node, context);\r\n            break;\r\n        case 15 /* JS_OBJECT_EXPRESSION */:\r\n            genObjectExpression(node, context);\r\n            break;\r\n        case 17 /* JS_ARRAY_EXPRESSION */:\r\n            genArrayExpression(node, context);\r\n            break;\r\n        case 18 /* JS_FUNCTION_EXPRESSION */:\r\n            genFunctionExpression(node, context);\r\n            break;\r\n        case 19 /* JS_CONDITIONAL_EXPRESSION */:\r\n            genConditionalExpression(node, context);\r\n            break;\r\n        case 20 /* JS_CACHE_EXPRESSION */:\r\n            genCacheExpression(node, context);\r\n            break;\r\n        case 21 /* JS_BLOCK_STATEMENT */:\r\n            genNodeList(node.body, context, true, false);\r\n            break;\r\n        // SSR only types\r\n        case 22 /* JS_TEMPLATE_LITERAL */:\r\n            break;\r\n        case 23 /* JS_IF_STATEMENT */:\r\n            break;\r\n        case 24 /* JS_ASSIGNMENT_EXPRESSION */:\r\n            break;\r\n        case 25 /* JS_SEQUENCE_EXPRESSION */:\r\n            break;\r\n        case 26 /* JS_RETURN_STATEMENT */:\r\n            break;\r\n        /* istanbul ignore next */\r\n        case 10 /* IF_BRANCH */:\r\n            // noop\r\n            break;\r\n        default:\r\n            if ((process.env.NODE_ENV !== 'production')) {\r\n                assert(false, `unhandled codegen node type: ${node.type}`);\r\n                // make sure we exhaust all possible types\r\n                const exhaustiveCheck = node;\r\n                return exhaustiveCheck;\r\n            }\r\n    }\r\n}\r\nfunction genText(node, context) {\r\n    context.push(JSON.stringify(node.content), node);\r\n}\r\nfunction genExpression(node, context) {\r\n    const { content, isStatic } = node;\r\n    context.push(isStatic ? JSON.stringify(content) : content, node);\r\n}\r\nfunction genInterpolation(node, context) {\r\n    const { push, helper, pure } = context;\r\n    if (pure)\r\n        push(PURE_ANNOTATION);\r\n    push(`${helper(TO_DISPLAY_STRING)}(`);\r\n    genNode(node.content, context);\r\n    push(`)`);\r\n}\r\nfunction genCompoundExpression(node, context) {\r\n    for (let i = 0; i < node.children.length; i++) {\r\n        const child = node.children[i];\r\n        if (isString(child)) {\r\n            context.push(child);\r\n        }\r\n        else {\r\n            genNode(child, context);\r\n        }\r\n    }\r\n}\r\nfunction genExpressionAsPropertyKey(node, context) {\r\n    const { push } = context;\r\n    if (node.type === 8 /* COMPOUND_EXPRESSION */) {\r\n        push(`[`);\r\n        genCompoundExpression(node, context);\r\n        push(`]`);\r\n    }\r\n    else if (node.isStatic) {\r\n        // only quote keys if necessary\r\n        const text = isSimpleIdentifier(node.content)\r\n            ? node.content\r\n            : JSON.stringify(node.content);\r\n        push(text, node);\r\n    }\r\n    else {\r\n        push(`[${node.content}]`, node);\r\n    }\r\n}\r\nfunction genComment(node, context) {\r\n    const { push, helper, pure } = context;\r\n    if (pure) {\r\n        push(PURE_ANNOTATION);\r\n    }\r\n    push(`${helper(CREATE_COMMENT)}(${JSON.stringify(node.content)})`, node);\r\n}\r\nfunction genVNodeCall(node, context) {\r\n    const { push, helper, pure } = context;\r\n    const { tag, props, children, patchFlag, dynamicProps, directives, isBlock, disableTracking, isComponent } = node;\r\n    if (directives) {\r\n        push(helper(WITH_DIRECTIVES) + `(`);\r\n    }\r\n    if (isBlock) {\r\n        push(`(${helper(OPEN_BLOCK)}(${disableTracking ? `true` : ``}), `);\r\n    }\r\n    if (pure) {\r\n        push(PURE_ANNOTATION);\r\n    }\r\n    const callHelper = isBlock\r\n        ? getVNodeBlockHelper(context.inSSR, isComponent)\r\n        : getVNodeHelper(context.inSSR, isComponent);\r\n    push(helper(callHelper) + `(`, node);\r\n    genNodeList(genNullableArgs([tag, props, children, patchFlag, dynamicProps]), context);\r\n    push(`)`);\r\n    if (isBlock) {\r\n        push(`)`);\r\n    }\r\n    if (directives) {\r\n        push(`, `);\r\n        genNode(directives, context);\r\n        push(`)`);\r\n    }\r\n}\r\nfunction genNullableArgs(args) {\r\n    let i = args.length;\r\n    while (i--) {\r\n        if (args[i] != null)\r\n            break;\r\n    }\r\n    return args.slice(0, i + 1).map(arg => arg || `null`);\r\n}\r\n// JavaScript\r\nfunction genCallExpression(node, context) {\r\n    const { push, helper, pure } = context;\r\n    const callee = isString(node.callee) ? node.callee : helper(node.callee);\r\n    if (pure) {\r\n        push(PURE_ANNOTATION);\r\n    }\r\n    push(callee + `(`, node);\r\n    genNodeList(node.arguments, context);\r\n    push(`)`);\r\n}\r\nfunction genObjectExpression(node, context) {\r\n    const { push, indent, deindent, newline } = context;\r\n    const { properties } = node;\r\n    if (!properties.length) {\r\n        push(`{}`, node);\r\n        return;\r\n    }\r\n    const multilines = properties.length > 1 ||\r\n        (((process.env.NODE_ENV !== 'production')) &&\r\n            properties.some(p => p.value.type !== 4 /* SIMPLE_EXPRESSION */));\r\n    push(multilines ? `{` : `{ `);\r\n    multilines && indent();\r\n    for (let i = 0; i < properties.length; i++) {\r\n        const { key, value } = properties[i];\r\n        // key\r\n        genExpressionAsPropertyKey(key, context);\r\n        push(`: `);\r\n        // value\r\n        genNode(value, context);\r\n        if (i < properties.length - 1) {\r\n            // will only reach this if it's multilines\r\n            push(`,`);\r\n            newline();\r\n        }\r\n    }\r\n    multilines && deindent();\r\n    push(multilines ? `}` : ` }`);\r\n}\r\nfunction genArrayExpression(node, context) {\r\n    genNodeListAsArray(node.elements, context);\r\n}\r\nfunction genFunctionExpression(node, context) {\r\n    const { push, indent, deindent } = context;\r\n    const { params, returns, body, newline, isSlot } = node;\r\n    if (isSlot) {\r\n        // wrap slot functions with owner context\r\n        push(`_${helperNameMap[WITH_CTX]}(`);\r\n    }\r\n    push(`(`, node);\r\n    if (isArray(params)) {\r\n        genNodeList(params, context);\r\n    }\r\n    else if (params) {\r\n        genNode(params, context);\r\n    }\r\n    push(`) => `);\r\n    if (newline || body) {\r\n        push(`{`);\r\n        indent();\r\n    }\r\n    if (returns) {\r\n        if (newline) {\r\n            push(`return `);\r\n        }\r\n        if (isArray(returns)) {\r\n            genNodeListAsArray(returns, context);\r\n        }\r\n        else {\r\n            genNode(returns, context);\r\n        }\r\n    }\r\n    else if (body) {\r\n        genNode(body, context);\r\n    }\r\n    if (newline || body) {\r\n        deindent();\r\n        push(`}`);\r\n    }\r\n    if (isSlot) {\r\n        if (node.isNonScopedSlot) {\r\n            push(`, undefined, true`);\r\n        }\r\n        push(`)`);\r\n    }\r\n}\r\nfunction genConditionalExpression(node, context) {\r\n    const { test, consequent, alternate, newline: needNewline } = node;\r\n    const { push, indent, deindent, newline } = context;\r\n    if (test.type === 4 /* SIMPLE_EXPRESSION */) {\r\n        const needsParens = !isSimpleIdentifier(test.content);\r\n        needsParens && push(`(`);\r\n        genExpression(test, context);\r\n        needsParens && push(`)`);\r\n    }\r\n    else {\r\n        push(`(`);\r\n        genNode(test, context);\r\n        push(`)`);\r\n    }\r\n    needNewline && indent();\r\n    context.indentLevel++;\r\n    needNewline || push(` `);\r\n    push(`? `);\r\n    genNode(consequent, context);\r\n    context.indentLevel--;\r\n    needNewline && newline();\r\n    needNewline || push(` `);\r\n    push(`: `);\r\n    const isNested = alternate.type === 19 /* JS_CONDITIONAL_EXPRESSION */;\r\n    if (!isNested) {\r\n        context.indentLevel++;\r\n    }\r\n    genNode(alternate, context);\r\n    if (!isNested) {\r\n        context.indentLevel--;\r\n    }\r\n    needNewline && deindent(true /* without newline */);\r\n}\r\nfunction genCacheExpression(node, context) {\r\n    const { push, helper, indent, deindent, newline } = context;\r\n    push(`_cache[${node.index}] || (`);\r\n    if (node.isVNode) {\r\n        indent();\r\n        push(`${helper(SET_BLOCK_TRACKING)}(-1),`);\r\n        newline();\r\n    }\r\n    push(`_cache[${node.index}] = `);\r\n    genNode(node.value, context);\r\n    if (node.isVNode) {\r\n        push(`,`);\r\n        newline();\r\n        push(`${helper(SET_BLOCK_TRACKING)}(1),`);\r\n        newline();\r\n        push(`_cache[${node.index}]`);\r\n        deindent();\r\n    }\r\n    push(`)`);\r\n}\n\nfunction walkIdentifiers(root, onIdentifier, includeAll = false, parentStack = [], knownIds = Object.create(null)) {\r\n    {\r\n        return;\r\n    }\r\n}\r\nfunction isReferencedIdentifier(id, parent, parentStack) {\r\n    {\r\n        return false;\r\n    }\r\n}\r\nfunction isInDestructureAssignment(parent, parentStack) {\r\n    if (parent &&\r\n        (parent.type === 'ObjectProperty' || parent.type === 'ArrayPattern')) {\r\n        let i = parentStack.length;\r\n        while (i--) {\r\n            const p = parentStack[i];\r\n            if (p.type === 'AssignmentExpression') {\r\n                return true;\r\n            }\r\n            else if (p.type !== 'ObjectProperty' && !p.type.endsWith('Pattern')) {\r\n                break;\r\n            }\r\n        }\r\n    }\r\n    return false;\r\n}\r\nfunction walkFunctionParams(node, onIdent) {\r\n    for (const p of node.params) {\r\n        for (const id of extractIdentifiers(p)) {\r\n            onIdent(id);\r\n        }\r\n    }\r\n}\r\nfunction walkBlockDeclarations(block, onIdent) {\r\n    for (const stmt of block.body) {\r\n        if (stmt.type === 'VariableDeclaration') {\r\n            if (stmt.declare)\r\n                continue;\r\n            for (const decl of stmt.declarations) {\r\n                for (const id of extractIdentifiers(decl.id)) {\r\n                    onIdent(id);\r\n                }\r\n            }\r\n        }\r\n        else if (stmt.type === 'FunctionDeclaration' ||\r\n            stmt.type === 'ClassDeclaration') {\r\n            if (stmt.declare || !stmt.id)\r\n                continue;\r\n            onIdent(stmt.id);\r\n        }\r\n    }\r\n}\r\nfunction extractIdentifiers(param, nodes = []) {\r\n    switch (param.type) {\r\n        case 'Identifier':\r\n            nodes.push(param);\r\n            break;\r\n        case 'MemberExpression':\r\n            let object = param;\r\n            while (object.type === 'MemberExpression') {\r\n                object = object.object;\r\n            }\r\n            nodes.push(object);\r\n            break;\r\n        case 'ObjectPattern':\r\n            for (const prop of param.properties) {\r\n                if (prop.type === 'RestElement') {\r\n                    extractIdentifiers(prop.argument, nodes);\r\n                }\r\n                else {\r\n                    extractIdentifiers(prop.value, nodes);\r\n                }\r\n            }\r\n            break;\r\n        case 'ArrayPattern':\r\n            param.elements.forEach(element => {\r\n                if (element)\r\n                    extractIdentifiers(element, nodes);\r\n            });\r\n            break;\r\n        case 'RestElement':\r\n            extractIdentifiers(param.argument, nodes);\r\n            break;\r\n        case 'AssignmentPattern':\r\n            extractIdentifiers(param.left, nodes);\r\n            break;\r\n    }\r\n    return nodes;\r\n}\r\nconst isFunctionType = (node) => {\r\n    return /Function(?:Expression|Declaration)$|Method$/.test(node.type);\r\n};\r\nconst isStaticProperty = (node) => node &&\r\n    (node.type === 'ObjectProperty' || node.type === 'ObjectMethod') &&\r\n    !node.computed;\r\nconst isStaticPropertyKey = (node, parent) => isStaticProperty(parent) && parent.key === node;\n\n// these keywords should not appear inside expressions, but operators like\r\n// typeof, instanceof and in are allowed\r\nconst prohibitedKeywordRE = new RegExp('\\\\b' +\r\n    ('do,if,for,let,new,try,var,case,else,with,await,break,catch,class,const,' +\r\n        'super,throw,while,yield,delete,export,import,return,switch,default,' +\r\n        'extends,finally,continue,debugger,function,arguments,typeof,void')\r\n        .split(',')\r\n        .join('\\\\b|\\\\b') +\r\n    '\\\\b');\r\n// strip strings in expressions\r\nconst stripStringRE = /'(?:[^'\\\\]|\\\\.)*'|\"(?:[^\"\\\\]|\\\\.)*\"|`(?:[^`\\\\]|\\\\.)*\\$\\{|\\}(?:[^`\\\\]|\\\\.)*`|`(?:[^`\\\\]|\\\\.)*`/g;\r\n/**\r\n * Validate a non-prefixed expression.\r\n * This is only called when using the in-browser runtime compiler since it\r\n * doesn't prefix expressions.\r\n */\r\nfunction validateBrowserExpression(node, context, asParams = false, asRawStatements = false) {\r\n    const exp = node.content;\r\n    // empty expressions are validated per-directive since some directives\r\n    // do allow empty expressions.\r\n    if (!exp.trim()) {\r\n        return;\r\n    }\r\n    try {\r\n        new Function(asRawStatements\r\n            ? ` ${exp} `\r\n            : `return ${asParams ? `(${exp}) => {}` : `(${exp})`}`);\r\n    }\r\n    catch (e) {\r\n        let message = e.message;\r\n        const keywordMatch = exp\r\n            .replace(stripStringRE, '')\r\n            .match(prohibitedKeywordRE);\r\n        if (keywordMatch) {\r\n            message = `avoid using JavaScript keyword as property name: \"${keywordMatch[0]}\"`;\r\n        }\r\n        context.onError(createCompilerError(44 /* X_INVALID_EXPRESSION */, node.loc, undefined, message));\r\n    }\r\n}\n\nconst transformExpression = (node, context) => {\r\n    if (node.type === 5 /* INTERPOLATION */) {\r\n        node.content = processExpression(node.content, context);\r\n    }\r\n    else if (node.type === 1 /* ELEMENT */) {\r\n        // handle directives on element\r\n        for (let i = 0; i < node.props.length; i++) {\r\n            const dir = node.props[i];\r\n            // do not process for v-on & v-for since they are special handled\r\n            if (dir.type === 7 /* DIRECTIVE */ && dir.name !== 'for') {\r\n                const exp = dir.exp;\r\n                const arg = dir.arg;\r\n                // do not process exp if this is v-on:arg - we need special handling\r\n                // for wrapping inline statements.\r\n                if (exp &&\r\n                    exp.type === 4 /* SIMPLE_EXPRESSION */ &&\r\n                    !(dir.name === 'on' && arg)) {\r\n                    dir.exp = processExpression(exp, context, \r\n                    // slot args must be processed as function params\r\n                    dir.name === 'slot');\r\n                }\r\n                if (arg && arg.type === 4 /* SIMPLE_EXPRESSION */ && !arg.isStatic) {\r\n                    dir.arg = processExpression(arg, context);\r\n                }\r\n            }\r\n        }\r\n    }\r\n};\r\n// Important: since this function uses Node.js only dependencies, it should\r\n// always be used with a leading !true check so that it can be\r\n// tree-shaken from the browser build.\r\nfunction processExpression(node, context, \r\n// some expressions like v-slot props & v-for aliases should be parsed as\r\n// function params\r\nasParams = false, \r\n// v-on handler values may contain multiple statements\r\nasRawStatements = false, localVars = Object.create(context.identifiers)) {\r\n    {\r\n        if ((process.env.NODE_ENV !== 'production')) {\r\n            // simple in-browser validation (same logic in 2.x)\r\n            validateBrowserExpression(node, context, asParams, asRawStatements);\r\n        }\r\n        return node;\r\n    }\r\n}\n\nconst transformIf = createStructuralDirectiveTransform(/^(if|else|else-if)$/, (node, dir, context) => {\r\n    return processIf(node, dir, context, (ifNode, branch, isRoot) => {\r\n        // #1587: We need to dynamically increment the key based on the current\r\n        // node's sibling nodes, since chained v-if/else branches are\r\n        // rendered at the same depth\r\n        const siblings = context.parent.children;\r\n        let i = siblings.indexOf(ifNode);\r\n        let key = 0;\r\n        while (i-- >= 0) {\r\n            const sibling = siblings[i];\r\n            if (sibling && sibling.type === 9 /* IF */) {\r\n                key += sibling.branches.length;\r\n            }\r\n        }\r\n        // Exit callback. Complete the codegenNode when all children have been\r\n        // transformed.\r\n        return () => {\r\n            if (isRoot) {\r\n                ifNode.codegenNode = createCodegenNodeForBranch(branch, key, context);\r\n            }\r\n            else {\r\n                // attach this branch's codegen node to the v-if root.\r\n                const parentCondition = getParentCondition(ifNode.codegenNode);\r\n                parentCondition.alternate = createCodegenNodeForBranch(branch, key + ifNode.branches.length - 1, context);\r\n            }\r\n        };\r\n    });\r\n});\r\n// target-agnostic transform used for both Client and SSR\r\nfunction processIf(node, dir, context, processCodegen) {\r\n    if (dir.name !== 'else' &&\r\n        (!dir.exp || !dir.exp.content.trim())) {\r\n        const loc = dir.exp ? dir.exp.loc : node.loc;\r\n        context.onError(createCompilerError(28 /* X_V_IF_NO_EXPRESSION */, dir.loc));\r\n        dir.exp = createSimpleExpression(`true`, false, loc);\r\n    }\r\n    if ((process.env.NODE_ENV !== 'production') && true && dir.exp) {\r\n        validateBrowserExpression(dir.exp, context);\r\n    }\r\n    if (dir.name === 'if') {\r\n        const branch = createIfBranch(node, dir);\r\n        const ifNode = {\r\n            type: 9 /* IF */,\r\n            loc: node.loc,\r\n            branches: [branch]\r\n        };\r\n        context.replaceNode(ifNode);\r\n        if (processCodegen) {\r\n            return processCodegen(ifNode, branch, true);\r\n        }\r\n    }\r\n    else {\r\n        // locate the adjacent v-if\r\n        const siblings = context.parent.children;\r\n        const comments = [];\r\n        let i = siblings.indexOf(node);\r\n        while (i-- >= -1) {\r\n            const sibling = siblings[i];\r\n            if ((process.env.NODE_ENV !== 'production') && sibling && sibling.type === 3 /* COMMENT */) {\r\n                context.removeNode(sibling);\r\n                comments.unshift(sibling);\r\n                continue;\r\n            }\r\n            if (sibling &&\r\n                sibling.type === 2 /* TEXT */ &&\r\n                !sibling.content.trim().length) {\r\n                context.removeNode(sibling);\r\n                continue;\r\n            }\r\n            if (sibling && sibling.type === 9 /* IF */) {\r\n                // Check if v-else was followed by v-else-if\r\n                if (dir.name === 'else-if' &&\r\n                    sibling.branches[sibling.branches.length - 1].condition === undefined) {\r\n                    context.onError(createCompilerError(30 /* X_V_ELSE_NO_ADJACENT_IF */, node.loc));\r\n                }\r\n                // move the node to the if node's branches\r\n                context.removeNode();\r\n                const branch = createIfBranch(node, dir);\r\n                if ((process.env.NODE_ENV !== 'production') &&\r\n                    comments.length &&\r\n                    // #3619 ignore comments if the v-if is direct child of <transition>\r\n                    !(context.parent &&\r\n                        context.parent.type === 1 /* ELEMENT */ &&\r\n                        isBuiltInType(context.parent.tag, 'transition'))) {\r\n                    branch.children = [...comments, ...branch.children];\r\n                }\r\n                // check if user is forcing same key on different branches\r\n                if ((process.env.NODE_ENV !== 'production') || !true) {\r\n                    const key = branch.userKey;\r\n                    if (key) {\r\n                        sibling.branches.forEach(({ userKey }) => {\r\n                            if (isSameKey(userKey, key)) {\r\n                                context.onError(createCompilerError(29 /* X_V_IF_SAME_KEY */, branch.userKey.loc));\r\n                            }\r\n                        });\r\n                    }\r\n                }\r\n                sibling.branches.push(branch);\r\n                const onExit = processCodegen && processCodegen(sibling, branch, false);\r\n                // since the branch was removed, it will not be traversed.\r\n                // make sure to traverse here.\r\n                traverseNode(branch, context);\r\n                // call on exit\r\n                if (onExit)\r\n                    onExit();\r\n                // make sure to reset currentNode after traversal to indicate this\r\n                // node has been removed.\r\n                context.currentNode = null;\r\n            }\r\n            else {\r\n                context.onError(createCompilerError(30 /* X_V_ELSE_NO_ADJACENT_IF */, node.loc));\r\n            }\r\n            break;\r\n        }\r\n    }\r\n}\r\nfunction createIfBranch(node, dir) {\r\n    return {\r\n        type: 10 /* IF_BRANCH */,\r\n        loc: node.loc,\r\n        condition: dir.name === 'else' ? undefined : dir.exp,\r\n        children: node.tagType === 3 /* TEMPLATE */ && !findDir(node, 'for')\r\n            ? node.children\r\n            : [node],\r\n        userKey: findProp(node, `key`)\r\n    };\r\n}\r\nfunction createCodegenNodeForBranch(branch, keyIndex, context) {\r\n    if (branch.condition) {\r\n        return createConditionalExpression(branch.condition, createChildrenCodegenNode(branch, keyIndex, context), \r\n        // make sure to pass in asBlock: true so that the comment node call\r\n        // closes the current block.\r\n        createCallExpression(context.helper(CREATE_COMMENT), [\r\n            (process.env.NODE_ENV !== 'production') ? '\"v-if\"' : '\"\"',\r\n            'true'\r\n        ]));\r\n    }\r\n    else {\r\n        return createChildrenCodegenNode(branch, keyIndex, context);\r\n    }\r\n}\r\nfunction createChildrenCodegenNode(branch, keyIndex, context) {\r\n    const { helper } = context;\r\n    const keyProperty = createObjectProperty(`key`, createSimpleExpression(`${keyIndex}`, false, locStub, 2 /* CAN_HOIST */));\r\n    const { children } = branch;\r\n    const firstChild = children[0];\r\n    const needFragmentWrapper = children.length !== 1 || firstChild.type !== 1 /* ELEMENT */;\r\n    if (needFragmentWrapper) {\r\n        if (children.length === 1 && firstChild.type === 11 /* FOR */) {\r\n            // optimize away nested fragments when child is a ForNode\r\n            const vnodeCall = firstChild.codegenNode;\r\n            injectProp(vnodeCall, keyProperty, context);\r\n            return vnodeCall;\r\n        }\r\n        else {\r\n            let patchFlag = 64 /* STABLE_FRAGMENT */;\r\n            let patchFlagText = PatchFlagNames[64 /* STABLE_FRAGMENT */];\r\n            // check if the fragment actually contains a single valid child with\r\n            // the rest being comments\r\n            if ((process.env.NODE_ENV !== 'production') &&\r\n                children.filter(c => c.type !== 3 /* COMMENT */).length === 1) {\r\n                patchFlag |= 2048 /* DEV_ROOT_FRAGMENT */;\r\n                patchFlagText += `, ${PatchFlagNames[2048 /* DEV_ROOT_FRAGMENT */]}`;\r\n            }\r\n            return createVNodeCall(context, helper(FRAGMENT), createObjectExpression([keyProperty]), children, patchFlag + ((process.env.NODE_ENV !== 'production') ? ` /* ${patchFlagText} */` : ``), undefined, undefined, true, false, false /* isComponent */, branch.loc);\r\n        }\r\n    }\r\n    else {\r\n        const ret = firstChild.codegenNode;\r\n        const vnodeCall = getMemoedVNodeCall(ret);\r\n        // Change createVNode to createBlock.\r\n        if (vnodeCall.type === 13 /* VNODE_CALL */) {\r\n            makeBlock(vnodeCall, context);\r\n        }\r\n        // inject branch key\r\n        injectProp(vnodeCall, keyProperty, context);\r\n        return ret;\r\n    }\r\n}\r\nfunction isSameKey(a, b) {\r\n    if (!a || a.type !== b.type) {\r\n        return false;\r\n    }\r\n    if (a.type === 6 /* ATTRIBUTE */) {\r\n        if (a.value.content !== b.value.content) {\r\n            return false;\r\n        }\r\n    }\r\n    else {\r\n        // directive\r\n        const exp = a.exp;\r\n        const branchExp = b.exp;\r\n        if (exp.type !== branchExp.type) {\r\n            return false;\r\n        }\r\n        if (exp.type !== 4 /* SIMPLE_EXPRESSION */ ||\r\n            exp.isStatic !== branchExp.isStatic ||\r\n            exp.content !== branchExp.content) {\r\n            return false;\r\n        }\r\n    }\r\n    return true;\r\n}\r\nfunction getParentCondition(node) {\r\n    while (true) {\r\n        if (node.type === 19 /* JS_CONDITIONAL_EXPRESSION */) {\r\n            if (node.alternate.type === 19 /* JS_CONDITIONAL_EXPRESSION */) {\r\n                node = node.alternate;\r\n            }\r\n            else {\r\n                return node;\r\n            }\r\n        }\r\n        else if (node.type === 20 /* JS_CACHE_EXPRESSION */) {\r\n            node = node.value;\r\n        }\r\n    }\r\n}\n\nconst transformFor = createStructuralDirectiveTransform('for', (node, dir, context) => {\r\n    const { helper, removeHelper } = context;\r\n    return processFor(node, dir, context, forNode => {\r\n        // create the loop render function expression now, and add the\r\n        // iterator on exit after all children have been traversed\r\n        const renderExp = createCallExpression(helper(RENDER_LIST), [\r\n            forNode.source\r\n        ]);\r\n        const isTemplate = isTemplateNode(node);\r\n        const memo = findDir(node, 'memo');\r\n        const keyProp = findProp(node, `key`);\r\n        const keyExp = keyProp &&\r\n            (keyProp.type === 6 /* ATTRIBUTE */\r\n                ? createSimpleExpression(keyProp.value.content, true)\r\n                : keyProp.exp);\r\n        const keyProperty = keyProp ? createObjectProperty(`key`, keyExp) : null;\r\n        const isStableFragment = forNode.source.type === 4 /* SIMPLE_EXPRESSION */ &&\r\n            forNode.source.constType > 0 /* NOT_CONSTANT */;\r\n        const fragmentFlag = isStableFragment\r\n            ? 64 /* STABLE_FRAGMENT */\r\n            : keyProp\r\n                ? 128 /* KEYED_FRAGMENT */\r\n                : 256 /* UNKEYED_FRAGMENT */;\r\n        forNode.codegenNode = createVNodeCall(context, helper(FRAGMENT), undefined, renderExp, fragmentFlag +\r\n            ((process.env.NODE_ENV !== 'production') ? ` /* ${PatchFlagNames[fragmentFlag]} */` : ``), undefined, undefined, true /* isBlock */, !isStableFragment /* disableTracking */, false /* isComponent */, node.loc);\r\n        return () => {\r\n            // finish the codegen now that all children have been traversed\r\n            let childBlock;\r\n            const { children } = forNode;\r\n            // check <template v-for> key placement\r\n            if (((process.env.NODE_ENV !== 'production') || !true) && isTemplate) {\r\n                node.children.some(c => {\r\n                    if (c.type === 1 /* ELEMENT */) {\r\n                        const key = findProp(c, 'key');\r\n                        if (key) {\r\n                            context.onError(createCompilerError(33 /* X_V_FOR_TEMPLATE_KEY_PLACEMENT */, key.loc));\r\n                            return true;\r\n                        }\r\n                    }\r\n                });\r\n            }\r\n            const needFragmentWrapper = children.length !== 1 || children[0].type !== 1 /* ELEMENT */;\r\n            const slotOutlet = isSlotOutlet(node)\r\n                ? node\r\n                : isTemplate &&\r\n                    node.children.length === 1 &&\r\n                    isSlotOutlet(node.children[0])\r\n                    ? node.children[0] // api-extractor somehow fails to infer this\r\n                    : null;\r\n            if (slotOutlet) {\r\n                // <slot v-for=\"...\"> or <template v-for=\"...\"><slot/></template>\r\n                childBlock = slotOutlet.codegenNode;\r\n                if (isTemplate && keyProperty) {\r\n                    // <template v-for=\"...\" :key=\"...\"><slot/></template>\r\n                    // we need to inject the key to the renderSlot() call.\r\n                    // the props for renderSlot is passed as the 3rd argument.\r\n                    injectProp(childBlock, keyProperty, context);\r\n                }\r\n            }\r\n            else if (needFragmentWrapper) {\r\n                // <template v-for=\"...\"> with text or multi-elements\r\n                // should generate a fragment block for each loop\r\n                childBlock = createVNodeCall(context, helper(FRAGMENT), keyProperty ? createObjectExpression([keyProperty]) : undefined, node.children, 64 /* STABLE_FRAGMENT */ +\r\n                    ((process.env.NODE_ENV !== 'production')\r\n                        ? ` /* ${PatchFlagNames[64 /* STABLE_FRAGMENT */]} */`\r\n                        : ``), undefined, undefined, true, undefined, false /* isComponent */);\r\n            }\r\n            else {\r\n                // Normal element v-for. Directly use the child's codegenNode\r\n                // but mark it as a block.\r\n                childBlock = children[0]\r\n                    .codegenNode;\r\n                if (isTemplate && keyProperty) {\r\n                    injectProp(childBlock, keyProperty, context);\r\n                }\r\n                if (childBlock.isBlock !== !isStableFragment) {\r\n                    if (childBlock.isBlock) {\r\n                        // switch from block to vnode\r\n                        removeHelper(OPEN_BLOCK);\r\n                        removeHelper(getVNodeBlockHelper(context.inSSR, childBlock.isComponent));\r\n                    }\r\n                    else {\r\n                        // switch from vnode to block\r\n                        removeHelper(getVNodeHelper(context.inSSR, childBlock.isComponent));\r\n                    }\r\n                }\r\n                childBlock.isBlock = !isStableFragment;\r\n                if (childBlock.isBlock) {\r\n                    helper(OPEN_BLOCK);\r\n                    helper(getVNodeBlockHelper(context.inSSR, childBlock.isComponent));\r\n                }\r\n                else {\r\n                    helper(getVNodeHelper(context.inSSR, childBlock.isComponent));\r\n                }\r\n            }\r\n            if (memo) {\r\n                const loop = createFunctionExpression(createForLoopParams(forNode.parseResult, [\r\n                    createSimpleExpression(`_cached`)\r\n                ]));\r\n                loop.body = createBlockStatement([\r\n                    createCompoundExpression([`const _memo = (`, memo.exp, `)`]),\r\n                    createCompoundExpression([\r\n                        `if (_cached`,\r\n                        ...(keyExp ? [` && _cached.key === `, keyExp] : []),\r\n                        ` && ${context.helperString(IS_MEMO_SAME)}(_cached, _memo)) return _cached`\r\n                    ]),\r\n                    createCompoundExpression([`const _item = `, childBlock]),\r\n                    createSimpleExpression(`_item.memo = _memo`),\r\n                    createSimpleExpression(`return _item`)\r\n                ]);\r\n                renderExp.arguments.push(loop, createSimpleExpression(`_cache`), createSimpleExpression(String(context.cached++)));\r\n            }\r\n            else {\r\n                renderExp.arguments.push(createFunctionExpression(createForLoopParams(forNode.parseResult), childBlock, true /* force newline */));\r\n            }\r\n        };\r\n    });\r\n});\r\n// target-agnostic transform used for both Client and SSR\r\nfunction processFor(node, dir, context, processCodegen) {\r\n    if (!dir.exp) {\r\n        context.onError(createCompilerError(31 /* X_V_FOR_NO_EXPRESSION */, dir.loc));\r\n        return;\r\n    }\r\n    const parseResult = parseForExpression(\r\n    // can only be simple expression because vFor transform is applied\r\n    // before expression transform.\r\n    dir.exp, context);\r\n    if (!parseResult) {\r\n        context.onError(createCompilerError(32 /* X_V_FOR_MALFORMED_EXPRESSION */, dir.loc));\r\n        return;\r\n    }\r\n    const { addIdentifiers, removeIdentifiers, scopes } = context;\r\n    const { source, value, key, index } = parseResult;\r\n    const forNode = {\r\n        type: 11 /* FOR */,\r\n        loc: dir.loc,\r\n        source,\r\n        valueAlias: value,\r\n        keyAlias: key,\r\n        objectIndexAlias: index,\r\n        parseResult,\r\n        children: isTemplateNode(node) ? node.children : [node]\r\n    };\r\n    context.replaceNode(forNode);\r\n    // bookkeeping\r\n    scopes.vFor++;\r\n    const onExit = processCodegen && processCodegen(forNode);\r\n    return () => {\r\n        scopes.vFor--;\r\n        if (onExit)\r\n            onExit();\r\n    };\r\n}\r\nconst forAliasRE = /([\\s\\S]*?)\\s+(?:in|of)\\s+([\\s\\S]*)/;\r\n// This regex doesn't cover the case if key or index aliases have destructuring,\r\n// but those do not make sense in the first place, so this works in practice.\r\nconst forIteratorRE = /,([^,\\}\\]]*)(?:,([^,\\}\\]]*))?$/;\r\nconst stripParensRE = /^\\(|\\)$/g;\r\nfunction parseForExpression(input, context) {\r\n    const loc = input.loc;\r\n    const exp = input.content;\r\n    const inMatch = exp.match(forAliasRE);\r\n    if (!inMatch)\r\n        return;\r\n    const [, LHS, RHS] = inMatch;\r\n    const result = {\r\n        source: createAliasExpression(loc, RHS.trim(), exp.indexOf(RHS, LHS.length)),\r\n        value: undefined,\r\n        key: undefined,\r\n        index: undefined\r\n    };\r\n    if ((process.env.NODE_ENV !== 'production') && true) {\r\n        validateBrowserExpression(result.source, context);\r\n    }\r\n    let valueContent = LHS.trim().replace(stripParensRE, '').trim();\r\n    const trimmedOffset = LHS.indexOf(valueContent);\r\n    const iteratorMatch = valueContent.match(forIteratorRE);\r\n    if (iteratorMatch) {\r\n        valueContent = valueContent.replace(forIteratorRE, '').trim();\r\n        const keyContent = iteratorMatch[1].trim();\r\n        let keyOffset;\r\n        if (keyContent) {\r\n            keyOffset = exp.indexOf(keyContent, trimmedOffset + valueContent.length);\r\n            result.key = createAliasExpression(loc, keyContent, keyOffset);\r\n            if ((process.env.NODE_ENV !== 'production') && true) {\r\n                validateBrowserExpression(result.key, context, true);\r\n            }\r\n        }\r\n        if (iteratorMatch[2]) {\r\n            const indexContent = iteratorMatch[2].trim();\r\n            if (indexContent) {\r\n                result.index = createAliasExpression(loc, indexContent, exp.indexOf(indexContent, result.key\r\n                    ? keyOffset + keyContent.length\r\n                    : trimmedOffset + valueContent.length));\r\n                if ((process.env.NODE_ENV !== 'production') && true) {\r\n                    validateBrowserExpression(result.index, context, true);\r\n                }\r\n            }\r\n        }\r\n    }\r\n    if (valueContent) {\r\n        result.value = createAliasExpression(loc, valueContent, trimmedOffset);\r\n        if ((process.env.NODE_ENV !== 'production') && true) {\r\n            validateBrowserExpression(result.value, context, true);\r\n        }\r\n    }\r\n    return result;\r\n}\r\nfunction createAliasExpression(range, content, offset) {\r\n    return createSimpleExpression(content, false, getInnerRange(range, offset, content.length));\r\n}\r\nfunction createForLoopParams({ value, key, index }, memoArgs = []) {\r\n    return createParamsList([value, key, index, ...memoArgs]);\r\n}\r\nfunction createParamsList(args) {\r\n    let i = args.length;\r\n    while (i--) {\r\n        if (args[i])\r\n            break;\r\n    }\r\n    return args\r\n        .slice(0, i + 1)\r\n        .map((arg, i) => arg || createSimpleExpression(`_`.repeat(i + 1), false));\r\n}\n\nconst defaultFallback = createSimpleExpression(`undefined`, false);\r\n// A NodeTransform that:\r\n// 1. Tracks scope identifiers for scoped slots so that they don't get prefixed\r\n//    by transformExpression. This is only applied in non-browser builds with\r\n//    { prefixIdentifiers: true }.\r\n// 2. Track v-slot depths so that we know a slot is inside another slot.\r\n//    Note the exit callback is executed before buildSlots() on the same node,\r\n//    so only nested slots see positive numbers.\r\nconst trackSlotScopes = (node, context) => {\r\n    if (node.type === 1 /* ELEMENT */ &&\r\n        (node.tagType === 1 /* COMPONENT */ ||\r\n            node.tagType === 3 /* TEMPLATE */)) {\r\n        // We are only checking non-empty v-slot here\r\n        // since we only care about slots that introduce scope variables.\r\n        const vSlot = findDir(node, 'slot');\r\n        if (vSlot) {\r\n            vSlot.exp;\r\n            context.scopes.vSlot++;\r\n            return () => {\r\n                context.scopes.vSlot--;\r\n            };\r\n        }\r\n    }\r\n};\r\n// A NodeTransform that tracks scope identifiers for scoped slots with v-for.\r\n// This transform is only applied in non-browser builds with { prefixIdentifiers: true }\r\nconst trackVForSlotScopes = (node, context) => {\r\n    let vFor;\r\n    if (isTemplateNode(node) &&\r\n        node.props.some(isVSlot) &&\r\n        (vFor = findDir(node, 'for'))) {\r\n        const result = (vFor.parseResult = parseForExpression(vFor.exp, context));\r\n        if (result) {\r\n            const { value, key, index } = result;\r\n            const { addIdentifiers, removeIdentifiers } = context;\r\n            value && addIdentifiers(value);\r\n            key && addIdentifiers(key);\r\n            index && addIdentifiers(index);\r\n            return () => {\r\n                value && removeIdentifiers(value);\r\n                key && removeIdentifiers(key);\r\n                index && removeIdentifiers(index);\r\n            };\r\n        }\r\n    }\r\n};\r\nconst buildClientSlotFn = (props, children, loc) => createFunctionExpression(props, children, false /* newline */, true /* isSlot */, children.length ? children[0].loc : loc);\r\n// Instead of being a DirectiveTransform, v-slot processing is called during\r\n// transformElement to build the slots object for a component.\r\nfunction buildSlots(node, context, buildSlotFn = buildClientSlotFn) {\r\n    context.helper(WITH_CTX);\r\n    const { children, loc } = node;\r\n    const slotsProperties = [];\r\n    const dynamicSlots = [];\r\n    // If the slot is inside a v-for or another v-slot, force it to be dynamic\r\n    // since it likely uses a scope variable.\r\n    let hasDynamicSlots = context.scopes.vSlot > 0 || context.scopes.vFor > 0;\r\n    // 1. Check for slot with slotProps on component itself.\r\n    //    <Comp v-slot=\"{ prop }\"/>\r\n    const onComponentSlot = findDir(node, 'slot', true);\r\n    if (onComponentSlot) {\r\n        const { arg, exp } = onComponentSlot;\r\n        if (arg && !isStaticExp(arg)) {\r\n            hasDynamicSlots = true;\r\n        }\r\n        slotsProperties.push(createObjectProperty(arg || createSimpleExpression('default', true), buildSlotFn(exp, children, loc)));\r\n    }\r\n    // 2. Iterate through children and check for template slots\r\n    //    <template v-slot:foo=\"{ prop }\">\r\n    let hasTemplateSlots = false;\r\n    let hasNamedDefaultSlot = false;\r\n    const implicitDefaultChildren = [];\r\n    const seenSlotNames = new Set();\r\n    for (let i = 0; i < children.length; i++) {\r\n        const slotElement = children[i];\r\n        let slotDir;\r\n        if (!isTemplateNode(slotElement) ||\r\n            !(slotDir = findDir(slotElement, 'slot', true))) {\r\n            // not a <template v-slot>, skip.\r\n            if (slotElement.type !== 3 /* COMMENT */) {\r\n                implicitDefaultChildren.push(slotElement);\r\n            }\r\n            continue;\r\n        }\r\n        if (onComponentSlot) {\r\n            // already has on-component slot - this is incorrect usage.\r\n            context.onError(createCompilerError(37 /* X_V_SLOT_MIXED_SLOT_USAGE */, slotDir.loc));\r\n            break;\r\n        }\r\n        hasTemplateSlots = true;\r\n        const { children: slotChildren, loc: slotLoc } = slotElement;\r\n        const { arg: slotName = createSimpleExpression(`default`, true), exp: slotProps, loc: dirLoc } = slotDir;\r\n        // check if name is dynamic.\r\n        let staticSlotName;\r\n        if (isStaticExp(slotName)) {\r\n            staticSlotName = slotName ? slotName.content : `default`;\r\n        }\r\n        else {\r\n            hasDynamicSlots = true;\r\n        }\r\n        const slotFunction = buildSlotFn(slotProps, slotChildren, slotLoc);\r\n        // check if this slot is conditional (v-if/v-for)\r\n        let vIf;\r\n        let vElse;\r\n        let vFor;\r\n        if ((vIf = findDir(slotElement, 'if'))) {\r\n            hasDynamicSlots = true;\r\n            dynamicSlots.push(createConditionalExpression(vIf.exp, buildDynamicSlot(slotName, slotFunction), defaultFallback));\r\n        }\r\n        else if ((vElse = findDir(slotElement, /^else(-if)?$/, true /* allowEmpty */))) {\r\n            // find adjacent v-if\r\n            let j = i;\r\n            let prev;\r\n            while (j--) {\r\n                prev = children[j];\r\n                if (prev.type !== 3 /* COMMENT */) {\r\n                    break;\r\n                }\r\n            }\r\n            if (prev && isTemplateNode(prev) && findDir(prev, 'if')) {\r\n                // remove node\r\n                children.splice(i, 1);\r\n                i--;\r\n                // attach this slot to previous conditional\r\n                let conditional = dynamicSlots[dynamicSlots.length - 1];\r\n                while (conditional.alternate.type === 19 /* JS_CONDITIONAL_EXPRESSION */) {\r\n                    conditional = conditional.alternate;\r\n                }\r\n                conditional.alternate = vElse.exp\r\n                    ? createConditionalExpression(vElse.exp, buildDynamicSlot(slotName, slotFunction), defaultFallback)\r\n                    : buildDynamicSlot(slotName, slotFunction);\r\n            }\r\n            else {\r\n                context.onError(createCompilerError(30 /* X_V_ELSE_NO_ADJACENT_IF */, vElse.loc));\r\n            }\r\n        }\r\n        else if ((vFor = findDir(slotElement, 'for'))) {\r\n            hasDynamicSlots = true;\r\n            const parseResult = vFor.parseResult ||\r\n                parseForExpression(vFor.exp, context);\r\n            if (parseResult) {\r\n                // Render the dynamic slots as an array and add it to the createSlot()\r\n                // args. The runtime knows how to handle it appropriately.\r\n                dynamicSlots.push(createCallExpression(context.helper(RENDER_LIST), [\r\n                    parseResult.source,\r\n                    createFunctionExpression(createForLoopParams(parseResult), buildDynamicSlot(slotName, slotFunction), true /* force newline */)\r\n                ]));\r\n            }\r\n            else {\r\n                context.onError(createCompilerError(32 /* X_V_FOR_MALFORMED_EXPRESSION */, vFor.loc));\r\n            }\r\n        }\r\n        else {\r\n            // check duplicate static names\r\n            if (staticSlotName) {\r\n                if (seenSlotNames.has(staticSlotName)) {\r\n                    context.onError(createCompilerError(38 /* X_V_SLOT_DUPLICATE_SLOT_NAMES */, dirLoc));\r\n                    continue;\r\n                }\r\n                seenSlotNames.add(staticSlotName);\r\n                if (staticSlotName === 'default') {\r\n                    hasNamedDefaultSlot = true;\r\n                }\r\n            }\r\n            slotsProperties.push(createObjectProperty(slotName, slotFunction));\r\n        }\r\n    }\r\n    if (!onComponentSlot) {\r\n        const buildDefaultSlotProperty = (props, children) => {\r\n            const fn = buildSlotFn(props, children, loc);\r\n            if (context.compatConfig) {\r\n                fn.isNonScopedSlot = true;\r\n            }\r\n            return createObjectProperty(`default`, fn);\r\n        };\r\n        if (!hasTemplateSlots) {\r\n            // implicit default slot (on component)\r\n            slotsProperties.push(buildDefaultSlotProperty(undefined, children));\r\n        }\r\n        else if (implicitDefaultChildren.length &&\r\n            // #3766\r\n            // with whitespace: 'preserve', whitespaces between slots will end up in\r\n            // implicitDefaultChildren. Ignore if all implicit children are whitespaces.\r\n            implicitDefaultChildren.some(node => isNonWhitespaceContent(node))) {\r\n            // implicit default slot (mixed with named slots)\r\n            if (hasNamedDefaultSlot) {\r\n                context.onError(createCompilerError(39 /* X_V_SLOT_EXTRANEOUS_DEFAULT_SLOT_CHILDREN */, implicitDefaultChildren[0].loc));\r\n            }\r\n            else {\r\n                slotsProperties.push(buildDefaultSlotProperty(undefined, implicitDefaultChildren));\r\n            }\r\n        }\r\n    }\r\n    const slotFlag = hasDynamicSlots\r\n        ? 2 /* DYNAMIC */\r\n        : hasForwardedSlots(node.children)\r\n            ? 3 /* FORWARDED */\r\n            : 1 /* STABLE */;\r\n    let slots = createObjectExpression(slotsProperties.concat(createObjectProperty(`_`, \r\n    // 2 = compiled but dynamic = can skip normalization, but must run diff\r\n    // 1 = compiled and static = can skip normalization AND diff as optimized\r\n    createSimpleExpression(slotFlag + ((process.env.NODE_ENV !== 'production') ? ` /* ${slotFlagsText[slotFlag]} */` : ``), false))), loc);\r\n    if (dynamicSlots.length) {\r\n        slots = createCallExpression(context.helper(CREATE_SLOTS), [\r\n            slots,\r\n            createArrayExpression(dynamicSlots)\r\n        ]);\r\n    }\r\n    return {\r\n        slots,\r\n        hasDynamicSlots\r\n    };\r\n}\r\nfunction buildDynamicSlot(name, fn) {\r\n    return createObjectExpression([\r\n        createObjectProperty(`name`, name),\r\n        createObjectProperty(`fn`, fn)\r\n    ]);\r\n}\r\nfunction hasForwardedSlots(children) {\r\n    for (let i = 0; i < children.length; i++) {\r\n        const child = children[i];\r\n        switch (child.type) {\r\n            case 1 /* ELEMENT */:\r\n                if (child.tagType === 2 /* SLOT */ ||\r\n                    hasForwardedSlots(child.children)) {\r\n                    return true;\r\n                }\r\n                break;\r\n            case 9 /* IF */:\r\n                if (hasForwardedSlots(child.branches))\r\n                    return true;\r\n                break;\r\n            case 10 /* IF_BRANCH */:\r\n            case 11 /* FOR */:\r\n                if (hasForwardedSlots(child.children))\r\n                    return true;\r\n                break;\r\n        }\r\n    }\r\n    return false;\r\n}\r\nfunction isNonWhitespaceContent(node) {\r\n    if (node.type !== 2 /* TEXT */ && node.type !== 12 /* TEXT_CALL */)\r\n        return true;\r\n    return node.type === 2 /* TEXT */\r\n        ? !!node.content.trim()\r\n        : isNonWhitespaceContent(node.content);\r\n}\n\n// some directive transforms (e.g. v-model) may return a symbol for runtime\r\n// import, which should be used instead of a resolveDirective call.\r\nconst directiveImportMap = new WeakMap();\r\n// generate a JavaScript AST for this element's codegen\r\nconst transformElement = (node, context) => {\r\n    // perform the work on exit, after all child expressions have been\r\n    // processed and merged.\r\n    return function postTransformElement() {\r\n        node = context.currentNode;\r\n        if (!(node.type === 1 /* ELEMENT */ &&\r\n            (node.tagType === 0 /* ELEMENT */ ||\r\n                node.tagType === 1 /* COMPONENT */))) {\r\n            return;\r\n        }\r\n        const { tag, props } = node;\r\n        const isComponent = node.tagType === 1 /* COMPONENT */;\r\n        // The goal of the transform is to create a codegenNode implementing the\r\n        // VNodeCall interface.\r\n        let vnodeTag = isComponent\r\n            ? resolveComponentType(node, context)\r\n            : `\"${tag}\"`;\r\n        const isDynamicComponent = isObject(vnodeTag) && vnodeTag.callee === RESOLVE_DYNAMIC_COMPONENT;\r\n        let vnodeProps;\r\n        let vnodeChildren;\r\n        let vnodePatchFlag;\r\n        let patchFlag = 0;\r\n        let vnodeDynamicProps;\r\n        let dynamicPropNames;\r\n        let vnodeDirectives;\r\n        let shouldUseBlock = \r\n        // dynamic component may resolve to plain elements\r\n        isDynamicComponent ||\r\n            vnodeTag === TELEPORT ||\r\n            vnodeTag === SUSPENSE ||\r\n            (!isComponent &&\r\n                // <svg> and <foreignObject> must be forced into blocks so that block\r\n                // updates inside get proper isSVG flag at runtime. (#639, #643)\r\n                // This is technically web-specific, but splitting the logic out of core\r\n                // leads to too much unnecessary complexity.\r\n                (tag === 'svg' || tag === 'foreignObject'));\r\n        // props\r\n        if (props.length > 0) {\r\n            const propsBuildResult = buildProps(node, context);\r\n            vnodeProps = propsBuildResult.props;\r\n            patchFlag = propsBuildResult.patchFlag;\r\n            dynamicPropNames = propsBuildResult.dynamicPropNames;\r\n            const directives = propsBuildResult.directives;\r\n            vnodeDirectives =\r\n                directives && directives.length\r\n                    ? createArrayExpression(directives.map(dir => buildDirectiveArgs(dir, context)))\r\n                    : undefined;\r\n            if (propsBuildResult.shouldUseBlock) {\r\n                shouldUseBlock = true;\r\n            }\r\n        }\r\n        // children\r\n        if (node.children.length > 0) {\r\n            if (vnodeTag === KEEP_ALIVE) {\r\n                // Although a built-in component, we compile KeepAlive with raw children\r\n                // instead of slot functions so that it can be used inside Transition\r\n                // or other Transition-wrapping HOCs.\r\n                // To ensure correct updates with block optimizations, we need to:\r\n                // 1. Force keep-alive into a block. This avoids its children being\r\n                //    collected by a parent block.\r\n                shouldUseBlock = true;\r\n                // 2. Force keep-alive to always be updated, since it uses raw children.\r\n                patchFlag |= 1024 /* DYNAMIC_SLOTS */;\r\n                if ((process.env.NODE_ENV !== 'production') && node.children.length > 1) {\r\n                    context.onError(createCompilerError(45 /* X_KEEP_ALIVE_INVALID_CHILDREN */, {\r\n                        start: node.children[0].loc.start,\r\n                        end: node.children[node.children.length - 1].loc.end,\r\n                        source: ''\r\n                    }));\r\n                }\r\n            }\r\n            const shouldBuildAsSlots = isComponent &&\r\n                // Teleport is not a real component and has dedicated runtime handling\r\n                vnodeTag !== TELEPORT &&\r\n                // explained above.\r\n                vnodeTag !== KEEP_ALIVE;\r\n            if (shouldBuildAsSlots) {\r\n                const { slots, hasDynamicSlots } = buildSlots(node, context);\r\n                vnodeChildren = slots;\r\n                if (hasDynamicSlots) {\r\n                    patchFlag |= 1024 /* DYNAMIC_SLOTS */;\r\n                }\r\n            }\r\n            else if (node.children.length === 1 && vnodeTag !== TELEPORT) {\r\n                const child = node.children[0];\r\n                const type = child.type;\r\n                // check for dynamic text children\r\n                const hasDynamicTextChild = type === 5 /* INTERPOLATION */ ||\r\n                    type === 8 /* COMPOUND_EXPRESSION */;\r\n                if (hasDynamicTextChild &&\r\n                    getConstantType(child, context) === 0 /* NOT_CONSTANT */) {\r\n                    patchFlag |= 1 /* TEXT */;\r\n                }\r\n                // pass directly if the only child is a text node\r\n                // (plain / interpolation / expression)\r\n                if (hasDynamicTextChild || type === 2 /* TEXT */) {\r\n                    vnodeChildren = child;\r\n                }\r\n                else {\r\n                    vnodeChildren = node.children;\r\n                }\r\n            }\r\n            else {\r\n                vnodeChildren = node.children;\r\n            }\r\n        }\r\n        // patchFlag & dynamicPropNames\r\n        if (patchFlag !== 0) {\r\n            if ((process.env.NODE_ENV !== 'production')) {\r\n                if (patchFlag < 0) {\r\n                    // special flags (negative and mutually exclusive)\r\n                    vnodePatchFlag = patchFlag + ` /* ${PatchFlagNames[patchFlag]} */`;\r\n                }\r\n                else {\r\n                    // bitwise flags\r\n                    const flagNames = Object.keys(PatchFlagNames)\r\n                        .map(Number)\r\n                        .filter(n => n > 0 && patchFlag & n)\r\n                        .map(n => PatchFlagNames[n])\r\n                        .join(`, `);\r\n                    vnodePatchFlag = patchFlag + ` /* ${flagNames} */`;\r\n                }\r\n            }\r\n            else {\r\n                vnodePatchFlag = String(patchFlag);\r\n            }\r\n            if (dynamicPropNames && dynamicPropNames.length) {\r\n                vnodeDynamicProps = stringifyDynamicPropNames(dynamicPropNames);\r\n            }\r\n        }\r\n        node.codegenNode = createVNodeCall(context, vnodeTag, vnodeProps, vnodeChildren, vnodePatchFlag, vnodeDynamicProps, vnodeDirectives, !!shouldUseBlock, false /* disableTracking */, isComponent, node.loc);\r\n    };\r\n};\r\nfunction resolveComponentType(node, context, ssr = false) {\r\n    let { tag } = node;\r\n    // 1. dynamic component\r\n    const isExplicitDynamic = isComponentTag(tag);\r\n    const isProp = findProp(node, 'is');\r\n    if (isProp) {\r\n        if (isExplicitDynamic ||\r\n            (isCompatEnabled(\"COMPILER_IS_ON_ELEMENT\" /* COMPILER_IS_ON_ELEMENT */, context))) {\r\n            const exp = isProp.type === 6 /* ATTRIBUTE */\r\n                ? isProp.value && createSimpleExpression(isProp.value.content, true)\r\n                : isProp.exp;\r\n            if (exp) {\r\n                return createCallExpression(context.helper(RESOLVE_DYNAMIC_COMPONENT), [\r\n                    exp\r\n                ]);\r\n            }\r\n        }\r\n        else if (isProp.type === 6 /* ATTRIBUTE */ &&\r\n            isProp.value.content.startsWith('vue:')) {\r\n            // <button is=\"vue:xxx\">\r\n            // if not <component>, only is value that starts with \"vue:\" will be\r\n            // treated as component by the parse phase and reach here, unless it's\r\n            // compat mode where all is values are considered components\r\n            tag = isProp.value.content.slice(4);\r\n        }\r\n    }\r\n    // 1.5 v-is (TODO: Deprecate)\r\n    const isDir = !isExplicitDynamic && findDir(node, 'is');\r\n    if (isDir && isDir.exp) {\r\n        return createCallExpression(context.helper(RESOLVE_DYNAMIC_COMPONENT), [\r\n            isDir.exp\r\n        ]);\r\n    }\r\n    // 2. built-in components (Teleport, Transition, KeepAlive, Suspense...)\r\n    const builtIn = isCoreComponent(tag) || context.isBuiltInComponent(tag);\r\n    if (builtIn) {\r\n        // built-ins are simply fallthroughs / have special handling during ssr\r\n        // so we don't need to import their runtime equivalents\r\n        if (!ssr)\r\n            context.helper(builtIn);\r\n        return builtIn;\r\n    }\r\n    // 5. user component (resolve)\r\n    context.helper(RESOLVE_COMPONENT);\r\n    context.components.add(tag);\r\n    return toValidAssetId(tag, `component`);\r\n}\r\nfunction buildProps(node, context, props = node.props, ssr = false) {\r\n    const { tag, loc: elementLoc, children } = node;\r\n    const isComponent = node.tagType === 1 /* COMPONENT */;\r\n    let properties = [];\r\n    const mergeArgs = [];\r\n    const runtimeDirectives = [];\r\n    const hasChildren = children.length > 0;\r\n    let shouldUseBlock = false;\r\n    // patchFlag analysis\r\n    let patchFlag = 0;\r\n    let hasRef = false;\r\n    let hasClassBinding = false;\r\n    let hasStyleBinding = false;\r\n    let hasHydrationEventBinding = false;\r\n    let hasDynamicKeys = false;\r\n    let hasVnodeHook = false;\r\n    const dynamicPropNames = [];\r\n    const analyzePatchFlag = ({ key, value }) => {\r\n        if (isStaticExp(key)) {\r\n            const name = key.content;\r\n            const isEventHandler = isOn(name);\r\n            if (!isComponent &&\r\n                isEventHandler &&\r\n                // omit the flag for click handlers because hydration gives click\r\n                // dedicated fast path.\r\n                name.toLowerCase() !== 'onclick' &&\r\n                // omit v-model handlers\r\n                name !== 'onUpdate:modelValue' &&\r\n                // omit onVnodeXXX hooks\r\n                !isReservedProp(name)) {\r\n                hasHydrationEventBinding = true;\r\n            }\r\n            if (isEventHandler && isReservedProp(name)) {\r\n                hasVnodeHook = true;\r\n            }\r\n            if (value.type === 20 /* JS_CACHE_EXPRESSION */ ||\r\n                ((value.type === 4 /* SIMPLE_EXPRESSION */ ||\r\n                    value.type === 8 /* COMPOUND_EXPRESSION */) &&\r\n                    getConstantType(value, context) > 0)) {\r\n                // skip if the prop is a cached handler or has constant value\r\n                return;\r\n            }\r\n            if (name === 'ref') {\r\n                hasRef = true;\r\n            }\r\n            else if (name === 'class') {\r\n                hasClassBinding = true;\r\n            }\r\n            else if (name === 'style') {\r\n                hasStyleBinding = true;\r\n            }\r\n            else if (name !== 'key' && !dynamicPropNames.includes(name)) {\r\n                dynamicPropNames.push(name);\r\n            }\r\n            // treat the dynamic class and style binding of the component as dynamic props\r\n            if (isComponent &&\r\n                (name === 'class' || name === 'style') &&\r\n                !dynamicPropNames.includes(name)) {\r\n                dynamicPropNames.push(name);\r\n            }\r\n        }\r\n        else {\r\n            hasDynamicKeys = true;\r\n        }\r\n    };\r\n    for (let i = 0; i < props.length; i++) {\r\n        // static attribute\r\n        const prop = props[i];\r\n        if (prop.type === 6 /* ATTRIBUTE */) {\r\n            const { loc, name, value } = prop;\r\n            let isStatic = true;\r\n            if (name === 'ref') {\r\n                hasRef = true;\r\n                if (context.scopes.vFor > 0) {\r\n                    properties.push(createObjectProperty(createSimpleExpression('ref_for', true), createSimpleExpression('true')));\r\n                }\r\n            }\r\n            // skip is on <component>, or is=\"vue:xxx\"\r\n            if (name === 'is' &&\r\n                (isComponentTag(tag) ||\r\n                    (value && value.content.startsWith('vue:')) ||\r\n                    (isCompatEnabled(\"COMPILER_IS_ON_ELEMENT\" /* COMPILER_IS_ON_ELEMENT */, context)))) {\r\n                continue;\r\n            }\r\n            properties.push(createObjectProperty(createSimpleExpression(name, true, getInnerRange(loc, 0, name.length)), createSimpleExpression(value ? value.content : '', isStatic, value ? value.loc : loc)));\r\n        }\r\n        else {\r\n            // directives\r\n            const { name, arg, exp, loc } = prop;\r\n            const isVBind = name === 'bind';\r\n            const isVOn = name === 'on';\r\n            // skip v-slot - it is handled by its dedicated transform.\r\n            if (name === 'slot') {\r\n                if (!isComponent) {\r\n                    context.onError(createCompilerError(40 /* X_V_SLOT_MISPLACED */, loc));\r\n                }\r\n                continue;\r\n            }\r\n            // skip v-once/v-memo - they are handled by dedicated transforms.\r\n            if (name === 'once' || name === 'memo') {\r\n                continue;\r\n            }\r\n            // skip v-is and :is on <component>\r\n            if (name === 'is' ||\r\n                (isVBind &&\r\n                    isStaticArgOf(arg, 'is') &&\r\n                    (isComponentTag(tag) ||\r\n                        (isCompatEnabled(\"COMPILER_IS_ON_ELEMENT\" /* COMPILER_IS_ON_ELEMENT */, context))))) {\r\n                continue;\r\n            }\r\n            // skip v-on in SSR compilation\r\n            if (isVOn && ssr) {\r\n                continue;\r\n            }\r\n            if (\r\n            // #938: elements with dynamic keys should be forced into blocks\r\n            (isVBind && isStaticArgOf(arg, 'key')) ||\r\n                // inline before-update hooks need to force block so that it is invoked\r\n                // before children\r\n                (isVOn && hasChildren && isStaticArgOf(arg, 'vue:before-update'))) {\r\n                shouldUseBlock = true;\r\n            }\r\n            if (isVBind && isStaticArgOf(arg, 'ref') && context.scopes.vFor > 0) {\r\n                properties.push(createObjectProperty(createSimpleExpression('ref_for', true), createSimpleExpression('true')));\r\n            }\r\n            // special case for v-bind and v-on with no argument\r\n            if (!arg && (isVBind || isVOn)) {\r\n                hasDynamicKeys = true;\r\n                if (exp) {\r\n                    if (properties.length) {\r\n                        mergeArgs.push(createObjectExpression(dedupeProperties(properties), elementLoc));\r\n                        properties = [];\r\n                    }\r\n                    if (isVBind) {\r\n                        {\r\n                            // 2.x v-bind object order compat\r\n                            if ((process.env.NODE_ENV !== 'production')) {\r\n                                const hasOverridableKeys = mergeArgs.some(arg => {\r\n                                    if (arg.type === 15 /* JS_OBJECT_EXPRESSION */) {\r\n                                        return arg.properties.some(({ key }) => {\r\n                                            if (key.type !== 4 /* SIMPLE_EXPRESSION */ ||\r\n                                                !key.isStatic) {\r\n                                                return true;\r\n                                            }\r\n                                            return (key.content !== 'class' &&\r\n                                                key.content !== 'style' &&\r\n                                                !isOn(key.content));\r\n                                        });\r\n                                    }\r\n                                    else {\r\n                                        // dynamic expression\r\n                                        return true;\r\n                                    }\r\n                                });\r\n                                if (hasOverridableKeys) {\r\n                                    checkCompatEnabled(\"COMPILER_V_BIND_OBJECT_ORDER\" /* COMPILER_V_BIND_OBJECT_ORDER */, context, loc);\r\n                                }\r\n                            }\r\n                            if (isCompatEnabled(\"COMPILER_V_BIND_OBJECT_ORDER\" /* COMPILER_V_BIND_OBJECT_ORDER */, context)) {\r\n                                mergeArgs.unshift(exp);\r\n                                continue;\r\n                            }\r\n                        }\r\n                        mergeArgs.push(exp);\r\n                    }\r\n                    else {\r\n                        // v-on=\"obj\" -> toHandlers(obj)\r\n                        mergeArgs.push({\r\n                            type: 14 /* JS_CALL_EXPRESSION */,\r\n                            loc,\r\n                            callee: context.helper(TO_HANDLERS),\r\n                            arguments: [exp]\r\n                        });\r\n                    }\r\n                }\r\n                else {\r\n                    context.onError(createCompilerError(isVBind\r\n                        ? 34 /* X_V_BIND_NO_EXPRESSION */\r\n                        : 35 /* X_V_ON_NO_EXPRESSION */, loc));\r\n                }\r\n                continue;\r\n            }\r\n            const directiveTransform = context.directiveTransforms[name];\r\n            if (directiveTransform) {\r\n                // has built-in directive transform.\r\n                const { props, needRuntime } = directiveTransform(prop, node, context);\r\n                !ssr && props.forEach(analyzePatchFlag);\r\n                properties.push(...props);\r\n                if (needRuntime) {\r\n                    runtimeDirectives.push(prop);\r\n                    if (isSymbol(needRuntime)) {\r\n                        directiveImportMap.set(prop, needRuntime);\r\n                    }\r\n                }\r\n            }\r\n            else if (!isBuiltInDirective(name)) {\r\n                // no built-in transform, this is a user custom directive.\r\n                runtimeDirectives.push(prop);\r\n                // custom dirs may use beforeUpdate so they need to force blocks\r\n                // to ensure before-update gets called before children update\r\n                if (hasChildren) {\r\n                    shouldUseBlock = true;\r\n                }\r\n            }\r\n        }\r\n    }\r\n    let propsExpression = undefined;\r\n    // has v-bind=\"object\" or v-on=\"object\", wrap with mergeProps\r\n    if (mergeArgs.length) {\r\n        if (properties.length) {\r\n            mergeArgs.push(createObjectExpression(dedupeProperties(properties), elementLoc));\r\n        }\r\n        if (mergeArgs.length > 1) {\r\n            propsExpression = createCallExpression(context.helper(MERGE_PROPS), mergeArgs, elementLoc);\r\n        }\r\n        else {\r\n            // single v-bind with nothing else - no need for a mergeProps call\r\n            propsExpression = mergeArgs[0];\r\n        }\r\n    }\r\n    else if (properties.length) {\r\n        propsExpression = createObjectExpression(dedupeProperties(properties), elementLoc);\r\n    }\r\n    // patchFlag analysis\r\n    if (hasDynamicKeys) {\r\n        patchFlag |= 16 /* FULL_PROPS */;\r\n    }\r\n    else {\r\n        if (hasClassBinding && !isComponent) {\r\n            patchFlag |= 2 /* CLASS */;\r\n        }\r\n        if (hasStyleBinding && !isComponent) {\r\n            patchFlag |= 4 /* STYLE */;\r\n        }\r\n        if (dynamicPropNames.length) {\r\n            patchFlag |= 8 /* PROPS */;\r\n        }\r\n        if (hasHydrationEventBinding) {\r\n            patchFlag |= 32 /* HYDRATE_EVENTS */;\r\n        }\r\n    }\r\n    if (!shouldUseBlock &&\r\n        (patchFlag === 0 || patchFlag === 32 /* HYDRATE_EVENTS */) &&\r\n        (hasRef || hasVnodeHook || runtimeDirectives.length > 0)) {\r\n        patchFlag |= 512 /* NEED_PATCH */;\r\n    }\r\n    // pre-normalize props, SSR is skipped for now\r\n    if (!context.inSSR && propsExpression) {\r\n        switch (propsExpression.type) {\r\n            case 15 /* JS_OBJECT_EXPRESSION */:\r\n                // means that there is no v-bind,\r\n                // but still need to deal with dynamic key binding\r\n                let classKeyIndex = -1;\r\n                let styleKeyIndex = -1;\r\n                let hasDynamicKey = false;\r\n                for (let i = 0; i < propsExpression.properties.length; i++) {\r\n                    const key = propsExpression.properties[i].key;\r\n                    if (isStaticExp(key)) {\r\n                        if (key.content === 'class') {\r\n                            classKeyIndex = i;\r\n                        }\r\n                        else if (key.content === 'style') {\r\n                            styleKeyIndex = i;\r\n                        }\r\n                    }\r\n                    else if (!key.isHandlerKey) {\r\n                        hasDynamicKey = true;\r\n                    }\r\n                }\r\n                const classProp = propsExpression.properties[classKeyIndex];\r\n                const styleProp = propsExpression.properties[styleKeyIndex];\r\n                // no dynamic key\r\n                if (!hasDynamicKey) {\r\n                    if (classProp && !isStaticExp(classProp.value)) {\r\n                        classProp.value = createCallExpression(context.helper(NORMALIZE_CLASS), [classProp.value]);\r\n                    }\r\n                    if (styleProp &&\r\n                        !isStaticExp(styleProp.value) &&\r\n                        // the static style is compiled into an object,\r\n                        // so use `hasStyleBinding` to ensure that it is a dynamic style binding\r\n                        (hasStyleBinding ||\r\n                            // v-bind:style and style both exist,\r\n                            // v-bind:style with static literal object\r\n                            styleProp.value.type === 17 /* JS_ARRAY_EXPRESSION */)) {\r\n                        styleProp.value = createCallExpression(context.helper(NORMALIZE_STYLE), [styleProp.value]);\r\n                    }\r\n                }\r\n                else {\r\n                    // dynamic key binding, wrap with `normalizeProps`\r\n                    propsExpression = createCallExpression(context.helper(NORMALIZE_PROPS), [propsExpression]);\r\n                }\r\n                break;\r\n            case 14 /* JS_CALL_EXPRESSION */:\r\n                // mergeProps call, do nothing\r\n                break;\r\n            default:\r\n                // single v-bind\r\n                propsExpression = createCallExpression(context.helper(NORMALIZE_PROPS), [\r\n                    createCallExpression(context.helper(GUARD_REACTIVE_PROPS), [\r\n                        propsExpression\r\n                    ])\r\n                ]);\r\n                break;\r\n        }\r\n    }\r\n    return {\r\n        props: propsExpression,\r\n        directives: runtimeDirectives,\r\n        patchFlag,\r\n        dynamicPropNames,\r\n        shouldUseBlock\r\n    };\r\n}\r\n// Dedupe props in an object literal.\r\n// Literal duplicated attributes would have been warned during the parse phase,\r\n// however, it's possible to encounter duplicated `onXXX` handlers with different\r\n// modifiers. We also need to merge static and dynamic class / style attributes.\r\n// - onXXX handlers / style: merge into array\r\n// - class: merge into single expression with concatenation\r\nfunction dedupeProperties(properties) {\r\n    const knownProps = new Map();\r\n    const deduped = [];\r\n    for (let i = 0; i < properties.length; i++) {\r\n        const prop = properties[i];\r\n        // dynamic keys are always allowed\r\n        if (prop.key.type === 8 /* COMPOUND_EXPRESSION */ || !prop.key.isStatic) {\r\n            deduped.push(prop);\r\n            continue;\r\n        }\r\n        const name = prop.key.content;\r\n        const existing = knownProps.get(name);\r\n        if (existing) {\r\n            if (name === 'style' || name === 'class' || isOn(name)) {\r\n                mergeAsArray(existing, prop);\r\n            }\r\n            // unexpected duplicate, should have emitted error during parse\r\n        }\r\n        else {\r\n            knownProps.set(name, prop);\r\n            deduped.push(prop);\r\n        }\r\n    }\r\n    return deduped;\r\n}\r\nfunction mergeAsArray(existing, incoming) {\r\n    if (existing.value.type === 17 /* JS_ARRAY_EXPRESSION */) {\r\n        existing.value.elements.push(incoming.value);\r\n    }\r\n    else {\r\n        existing.value = createArrayExpression([existing.value, incoming.value], existing.loc);\r\n    }\r\n}\r\nfunction buildDirectiveArgs(dir, context) {\r\n    const dirArgs = [];\r\n    const runtime = directiveImportMap.get(dir);\r\n    if (runtime) {\r\n        // built-in directive with runtime\r\n        dirArgs.push(context.helperString(runtime));\r\n    }\r\n    else {\r\n        {\r\n            // inject statement for resolving directive\r\n            context.helper(RESOLVE_DIRECTIVE);\r\n            context.directives.add(dir.name);\r\n            dirArgs.push(toValidAssetId(dir.name, `directive`));\r\n        }\r\n    }\r\n    const { loc } = dir;\r\n    if (dir.exp)\r\n        dirArgs.push(dir.exp);\r\n    if (dir.arg) {\r\n        if (!dir.exp) {\r\n            dirArgs.push(`void 0`);\r\n        }\r\n        dirArgs.push(dir.arg);\r\n    }\r\n    if (Object.keys(dir.modifiers).length) {\r\n        if (!dir.arg) {\r\n            if (!dir.exp) {\r\n                dirArgs.push(`void 0`);\r\n            }\r\n            dirArgs.push(`void 0`);\r\n        }\r\n        const trueExpression = createSimpleExpression(`true`, false, loc);\r\n        dirArgs.push(createObjectExpression(dir.modifiers.map(modifier => createObjectProperty(modifier, trueExpression)), loc));\r\n    }\r\n    return createArrayExpression(dirArgs, dir.loc);\r\n}\r\nfunction stringifyDynamicPropNames(props) {\r\n    let propsNamesString = `[`;\r\n    for (let i = 0, l = props.length; i < l; i++) {\r\n        propsNamesString += JSON.stringify(props[i]);\r\n        if (i < l - 1)\r\n            propsNamesString += ', ';\r\n    }\r\n    return propsNamesString + `]`;\r\n}\r\nfunction isComponentTag(tag) {\r\n    return tag === 'component' || tag === 'Component';\r\n}\n\n(process.env.NODE_ENV !== 'production')\r\n    ? Object.freeze({})\r\n    : {};\r\n(process.env.NODE_ENV !== 'production') ? Object.freeze([]) : [];\r\nconst cacheStringFunction = (fn) => {\r\n    const cache = Object.create(null);\r\n    return ((str) => {\r\n        const hit = cache[str];\r\n        return hit || (cache[str] = fn(str));\r\n    });\r\n};\r\nconst camelizeRE = /-(\\w)/g;\r\n/**\r\n * @private\r\n */\r\nconst camelize = cacheStringFunction((str) => {\r\n    return str.replace(camelizeRE, (_, c) => (c ? c.toUpperCase() : ''));\r\n});\n\nconst transformSlotOutlet = (node, context) => {\r\n    if (isSlotOutlet(node)) {\r\n        const { children, loc } = node;\r\n        const { slotName, slotProps } = processSlotOutlet(node, context);\r\n        const slotArgs = [\r\n            context.prefixIdentifiers ? `_ctx.$slots` : `$slots`,\r\n            slotName,\r\n            '{}',\r\n            'undefined',\r\n            'true'\r\n        ];\r\n        let expectedLen = 2;\r\n        if (slotProps) {\r\n            slotArgs[2] = slotProps;\r\n            expectedLen = 3;\r\n        }\r\n        if (children.length) {\r\n            slotArgs[3] = createFunctionExpression([], children, false, false, loc);\r\n            expectedLen = 4;\r\n        }\r\n        if (context.scopeId && !context.slotted) {\r\n            expectedLen = 5;\r\n        }\r\n        slotArgs.splice(expectedLen); // remove unused arguments\r\n        node.codegenNode = createCallExpression(context.helper(RENDER_SLOT), slotArgs, loc);\r\n    }\r\n};\r\nfunction processSlotOutlet(node, context) {\r\n    let slotName = `\"default\"`;\r\n    let slotProps = undefined;\r\n    const nonNameProps = [];\r\n    for (let i = 0; i < node.props.length; i++) {\r\n        const p = node.props[i];\r\n        if (p.type === 6 /* ATTRIBUTE */) {\r\n            if (p.value) {\r\n                if (p.name === 'name') {\r\n                    slotName = JSON.stringify(p.value.content);\r\n                }\r\n                else {\r\n                    p.name = camelize(p.name);\r\n                    nonNameProps.push(p);\r\n                }\r\n            }\r\n        }\r\n        else {\r\n            if (p.name === 'bind' && isStaticArgOf(p.arg, 'name')) {\r\n                if (p.exp)\r\n                    slotName = p.exp;\r\n            }\r\n            else {\r\n                if (p.name === 'bind' && p.arg && isStaticExp(p.arg)) {\r\n                    p.arg.content = camelize(p.arg.content);\r\n                }\r\n                nonNameProps.push(p);\r\n            }\r\n        }\r\n    }\r\n    if (nonNameProps.length > 0) {\r\n        const { props, directives } = buildProps(node, context, nonNameProps);\r\n        slotProps = props;\r\n        if (directives.length) {\r\n            context.onError(createCompilerError(36 /* X_V_SLOT_UNEXPECTED_DIRECTIVE_ON_SLOT_OUTLET */, directives[0].loc));\r\n        }\r\n    }\r\n    return {\r\n        slotName,\r\n        slotProps\r\n    };\r\n}\n\nconst fnExpRE = /^\\s*([\\w$_]+|(async\\s*)?\\([^)]*?\\))\\s*=>|^\\s*(async\\s+)?function(?:\\s+[\\w$]+)?\\s*\\(/;\r\nconst transformOn = (dir, node, context, augmentor) => {\r\n    const { loc, modifiers, arg } = dir;\r\n    if (!dir.exp && !modifiers.length) {\r\n        context.onError(createCompilerError(35 /* X_V_ON_NO_EXPRESSION */, loc));\r\n    }\r\n    let eventName;\r\n    if (arg.type === 4 /* SIMPLE_EXPRESSION */) {\r\n        if (arg.isStatic) {\r\n            let rawName = arg.content;\r\n            // TODO deprecate @vnodeXXX usage\r\n            if (rawName.startsWith('vue:')) {\r\n                rawName = `vnode-${rawName.slice(4)}`;\r\n            }\r\n            // for all event listeners, auto convert it to camelCase. See issue #2249\r\n            eventName = createSimpleExpression(toHandlerKey(camelize$1(rawName)), true, arg.loc);\r\n        }\r\n        else {\r\n            // #2388\r\n            eventName = createCompoundExpression([\r\n                `${context.helperString(TO_HANDLER_KEY)}(`,\r\n                arg,\r\n                `)`\r\n            ]);\r\n        }\r\n    }\r\n    else {\r\n        // already a compound expression.\r\n        eventName = arg;\r\n        eventName.children.unshift(`${context.helperString(TO_HANDLER_KEY)}(`);\r\n        eventName.children.push(`)`);\r\n    }\r\n    // handler processing\r\n    let exp = dir.exp;\r\n    if (exp && !exp.content.trim()) {\r\n        exp = undefined;\r\n    }\r\n    let shouldCache = context.cacheHandlers && !exp && !context.inVOnce;\r\n    if (exp) {\r\n        const isMemberExp = isMemberExpression(exp.content);\r\n        const isInlineStatement = !(isMemberExp || fnExpRE.test(exp.content));\r\n        const hasMultipleStatements = exp.content.includes(`;`);\r\n        if ((process.env.NODE_ENV !== 'production') && true) {\r\n            validateBrowserExpression(exp, context, false, hasMultipleStatements);\r\n        }\r\n        if (isInlineStatement || (shouldCache && isMemberExp)) {\r\n            // wrap inline statement in a function expression\r\n            exp = createCompoundExpression([\r\n                `${isInlineStatement\r\n                    ? `$event`\r\n                    : `${``}(...args)`} => ${hasMultipleStatements ? `{` : `(`}`,\r\n                exp,\r\n                hasMultipleStatements ? `}` : `)`\r\n            ]);\r\n        }\r\n    }\r\n    let ret = {\r\n        props: [\r\n            createObjectProperty(eventName, exp || createSimpleExpression(`() => {}`, false, loc))\r\n        ]\r\n    };\r\n    // apply extended compiler augmentor\r\n    if (augmentor) {\r\n        ret = augmentor(ret);\r\n    }\r\n    if (shouldCache) {\r\n        // cache handlers so that it's always the same handler being passed down.\r\n        // this avoids unnecessary re-renders when users use inline handlers on\r\n        // components.\r\n        ret.props[0].value = context.cache(ret.props[0].value);\r\n    }\r\n    // mark the key as handler for props normalization check\r\n    ret.props.forEach(p => (p.key.isHandlerKey = true));\r\n    return ret;\r\n};\n\n// v-bind without arg is handled directly in ./transformElements.ts due to it affecting\r\n// codegen for the entire props object. This transform here is only for v-bind\r\n// *with* args.\r\nconst transformBind = (dir, _node, context) => {\r\n    const { exp, modifiers, loc } = dir;\r\n    const arg = dir.arg;\r\n    if (arg.type !== 4 /* SIMPLE_EXPRESSION */) {\r\n        arg.children.unshift(`(`);\r\n        arg.children.push(`) || \"\"`);\r\n    }\r\n    else if (!arg.isStatic) {\r\n        arg.content = `${arg.content} || \"\"`;\r\n    }\r\n    // .sync is replaced by v-model:arg\r\n    if (modifiers.includes('camel')) {\r\n        if (arg.type === 4 /* SIMPLE_EXPRESSION */) {\r\n            if (arg.isStatic) {\r\n                arg.content = camelize$1(arg.content);\r\n            }\r\n            else {\r\n                arg.content = `${context.helperString(CAMELIZE)}(${arg.content})`;\r\n            }\r\n        }\r\n        else {\r\n            arg.children.unshift(`${context.helperString(CAMELIZE)}(`);\r\n            arg.children.push(`)`);\r\n        }\r\n    }\r\n    if (!context.inSSR) {\r\n        if (modifiers.includes('prop')) {\r\n            injectPrefix(arg, '.');\r\n        }\r\n        if (modifiers.includes('attr')) {\r\n            injectPrefix(arg, '^');\r\n        }\r\n    }\r\n    if (!exp ||\r\n        (exp.type === 4 /* SIMPLE_EXPRESSION */ && !exp.content.trim())) {\r\n        context.onError(createCompilerError(34 /* X_V_BIND_NO_EXPRESSION */, loc));\r\n        return {\r\n            props: [createObjectProperty(arg, createSimpleExpression('', true, loc))]\r\n        };\r\n    }\r\n    return {\r\n        props: [createObjectProperty(arg, exp)]\r\n    };\r\n};\r\nconst injectPrefix = (arg, prefix) => {\r\n    if (arg.type === 4 /* SIMPLE_EXPRESSION */) {\r\n        if (arg.isStatic) {\r\n            arg.content = prefix + arg.content;\r\n        }\r\n        else {\r\n            arg.content = `\\`${prefix}\\${${arg.content}}\\``;\r\n        }\r\n    }\r\n    else {\r\n        arg.children.unshift(`'${prefix}' + (`);\r\n        arg.children.push(`)`);\r\n    }\r\n};\n\n// Merge adjacent text nodes and expressions into a single expression\r\n// e.g. <div>abc {{ d }} {{ e }}</div> should have a single expression node as child.\r\nconst transformText = (node, context) => {\r\n    if (node.type === 0 /* ROOT */ ||\r\n        node.type === 1 /* ELEMENT */ ||\r\n        node.type === 11 /* FOR */ ||\r\n        node.type === 10 /* IF_BRANCH */) {\r\n        // perform the transform on node exit so that all expressions have already\r\n        // been processed.\r\n        return () => {\r\n            const children = node.children;\r\n            let currentContainer = undefined;\r\n            let hasText = false;\r\n            for (let i = 0; i < children.length; i++) {\r\n                const child = children[i];\r\n                if (isText(child)) {\r\n                    hasText = true;\r\n                    for (let j = i + 1; j < children.length; j++) {\r\n                        const next = children[j];\r\n                        if (isText(next)) {\r\n                            if (!currentContainer) {\r\n                                currentContainer = children[i] = {\r\n                                    type: 8 /* COMPOUND_EXPRESSION */,\r\n                                    loc: child.loc,\r\n                                    children: [child]\r\n                                };\r\n                            }\r\n                            // merge adjacent text node into current\r\n                            currentContainer.children.push(` + `, next);\r\n                            children.splice(j, 1);\r\n                            j--;\r\n                        }\r\n                        else {\r\n                            currentContainer = undefined;\r\n                            break;\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n            if (!hasText ||\r\n                // if this is a plain element with a single text child, leave it\r\n                // as-is since the runtime has dedicated fast path for this by directly\r\n                // setting textContent of the element.\r\n                // for component root it's always normalized anyway.\r\n                (children.length === 1 &&\r\n                    (node.type === 0 /* ROOT */ ||\r\n                        (node.type === 1 /* ELEMENT */ &&\r\n                            node.tagType === 0 /* ELEMENT */ &&\r\n                            // #3756\r\n                            // custom directives can potentially add DOM elements arbitrarily,\r\n                            // we need to avoid setting textContent of the element at runtime\r\n                            // to avoid accidentally overwriting the DOM elements added\r\n                            // by the user through custom directives.\r\n                            !node.props.find(p => p.type === 7 /* DIRECTIVE */ &&\r\n                                !context.directiveTransforms[p.name]) &&\r\n                            // in compat mode, <template> tags with no special directives\r\n                            // will be rendered as a fragment so its children must be\r\n                            // converted into vnodes.\r\n                            !(node.tag === 'template'))))) {\r\n                return;\r\n            }\r\n            // pre-convert text nodes into createTextVNode(text) calls to avoid\r\n            // runtime normalization.\r\n            for (let i = 0; i < children.length; i++) {\r\n                const child = children[i];\r\n                if (isText(child) || child.type === 8 /* COMPOUND_EXPRESSION */) {\r\n                    const callArgs = [];\r\n                    // createTextVNode defaults to single whitespace, so if it is a\r\n                    // single space the code could be an empty call to save bytes.\r\n                    if (child.type !== 2 /* TEXT */ || child.content !== ' ') {\r\n                        callArgs.push(child);\r\n                    }\r\n                    // mark dynamic text with flag so it gets patched inside a block\r\n                    if (!context.ssr &&\r\n                        getConstantType(child, context) === 0 /* NOT_CONSTANT */) {\r\n                        callArgs.push(1 /* TEXT */ +\r\n                            ((process.env.NODE_ENV !== 'production') ? ` /* ${PatchFlagNames[1 /* TEXT */]} */` : ``));\r\n                    }\r\n                    children[i] = {\r\n                        type: 12 /* TEXT_CALL */,\r\n                        content: child,\r\n                        loc: child.loc,\r\n                        codegenNode: createCallExpression(context.helper(CREATE_TEXT), callArgs)\r\n                    };\r\n                }\r\n            }\r\n        };\r\n    }\r\n};\n\nconst seen = new WeakSet();\r\nconst transformOnce = (node, context) => {\r\n    if (node.type === 1 /* ELEMENT */ && findDir(node, 'once', true)) {\r\n        if (seen.has(node) || context.inVOnce) {\r\n            return;\r\n        }\r\n        seen.add(node);\r\n        context.inVOnce = true;\r\n        context.helper(SET_BLOCK_TRACKING);\r\n        return () => {\r\n            context.inVOnce = false;\r\n            const cur = context.currentNode;\r\n            if (cur.codegenNode) {\r\n                cur.codegenNode = context.cache(cur.codegenNode, true /* isVNode */);\r\n            }\r\n        };\r\n    }\r\n};\n\nconst transformModel = (dir, node, context) => {\r\n    const { exp, arg } = dir;\r\n    if (!exp) {\r\n        context.onError(createCompilerError(41 /* X_V_MODEL_NO_EXPRESSION */, dir.loc));\r\n        return createTransformProps();\r\n    }\r\n    const rawExp = exp.loc.source;\r\n    const expString = exp.type === 4 /* SIMPLE_EXPRESSION */ ? exp.content : rawExp;\r\n    // im SFC <script setup> inline mode, the exp may have been transformed into\r\n    // _unref(exp)\r\n    context.bindingMetadata[rawExp];\r\n    const maybeRef = !true    /* SETUP_CONST */;\r\n    if (!expString.trim() ||\r\n        (!isMemberExpression(expString) && !maybeRef)) {\r\n        context.onError(createCompilerError(42 /* X_V_MODEL_MALFORMED_EXPRESSION */, exp.loc));\r\n        return createTransformProps();\r\n    }\r\n    const propName = arg ? arg : createSimpleExpression('modelValue', true);\r\n    const eventName = arg\r\n        ? isStaticExp(arg)\r\n            ? `onUpdate:${arg.content}`\r\n            : createCompoundExpression(['\"onUpdate:\" + ', arg])\r\n        : `onUpdate:modelValue`;\r\n    let assignmentExp;\r\n    const eventArg = context.isTS ? `($event: any)` : `$event`;\r\n    {\r\n        assignmentExp = createCompoundExpression([\r\n            `${eventArg} => ((`,\r\n            exp,\r\n            `) = $event)`\r\n        ]);\r\n    }\r\n    const props = [\r\n        // modelValue: foo\r\n        createObjectProperty(propName, dir.exp),\r\n        // \"onUpdate:modelValue\": $event => (foo = $event)\r\n        createObjectProperty(eventName, assignmentExp)\r\n    ];\r\n    // modelModifiers: { foo: true, \"bar-baz\": true }\r\n    if (dir.modifiers.length && node.tagType === 1 /* COMPONENT */) {\r\n        const modifiers = dir.modifiers\r\n            .map(m => (isSimpleIdentifier(m) ? m : JSON.stringify(m)) + `: true`)\r\n            .join(`, `);\r\n        const modifiersKey = arg\r\n            ? isStaticExp(arg)\r\n                ? `${arg.content}Modifiers`\r\n                : createCompoundExpression([arg, ' + \"Modifiers\"'])\r\n            : `modelModifiers`;\r\n        props.push(createObjectProperty(modifiersKey, createSimpleExpression(`{ ${modifiers} }`, false, dir.loc, 2 /* CAN_HOIST */)));\r\n    }\r\n    return createTransformProps(props);\r\n};\r\nfunction createTransformProps(props = []) {\r\n    return { props };\r\n}\n\nconst validDivisionCharRE = /[\\w).+\\-_$\\]]/;\r\nconst transformFilter = (node, context) => {\r\n    if (!isCompatEnabled(\"COMPILER_FILTER\" /* COMPILER_FILTERS */, context)) {\r\n        return;\r\n    }\r\n    if (node.type === 5 /* INTERPOLATION */) {\r\n        // filter rewrite is applied before expression transform so only\r\n        // simple expressions are possible at this stage\r\n        rewriteFilter(node.content, context);\r\n    }\r\n    if (node.type === 1 /* ELEMENT */) {\r\n        node.props.forEach((prop) => {\r\n            if (prop.type === 7 /* DIRECTIVE */ &&\r\n                prop.name !== 'for' &&\r\n                prop.exp) {\r\n                rewriteFilter(prop.exp, context);\r\n            }\r\n        });\r\n    }\r\n};\r\nfunction rewriteFilter(node, context) {\r\n    if (node.type === 4 /* SIMPLE_EXPRESSION */) {\r\n        parseFilter(node, context);\r\n    }\r\n    else {\r\n        for (let i = 0; i < node.children.length; i++) {\r\n            const child = node.children[i];\r\n            if (typeof child !== 'object')\r\n                continue;\r\n            if (child.type === 4 /* SIMPLE_EXPRESSION */) {\r\n                parseFilter(child, context);\r\n            }\r\n            else if (child.type === 8 /* COMPOUND_EXPRESSION */) {\r\n                rewriteFilter(node, context);\r\n            }\r\n            else if (child.type === 5 /* INTERPOLATION */) {\r\n                rewriteFilter(child.content, context);\r\n            }\r\n        }\r\n    }\r\n}\r\nfunction parseFilter(node, context) {\r\n    const exp = node.content;\r\n    let inSingle = false;\r\n    let inDouble = false;\r\n    let inTemplateString = false;\r\n    let inRegex = false;\r\n    let curly = 0;\r\n    let square = 0;\r\n    let paren = 0;\r\n    let lastFilterIndex = 0;\r\n    let c, prev, i, expression, filters = [];\r\n    for (i = 0; i < exp.length; i++) {\r\n        prev = c;\r\n        c = exp.charCodeAt(i);\r\n        if (inSingle) {\r\n            if (c === 0x27 && prev !== 0x5c)\r\n                inSingle = false;\r\n        }\r\n        else if (inDouble) {\r\n            if (c === 0x22 && prev !== 0x5c)\r\n                inDouble = false;\r\n        }\r\n        else if (inTemplateString) {\r\n            if (c === 0x60 && prev !== 0x5c)\r\n                inTemplateString = false;\r\n        }\r\n        else if (inRegex) {\r\n            if (c === 0x2f && prev !== 0x5c)\r\n                inRegex = false;\r\n        }\r\n        else if (c === 0x7c && // pipe\r\n            exp.charCodeAt(i + 1) !== 0x7c &&\r\n            exp.charCodeAt(i - 1) !== 0x7c &&\r\n            !curly &&\r\n            !square &&\r\n            !paren) {\r\n            if (expression === undefined) {\r\n                // first filter, end of expression\r\n                lastFilterIndex = i + 1;\r\n                expression = exp.slice(0, i).trim();\r\n            }\r\n            else {\r\n                pushFilter();\r\n            }\r\n        }\r\n        else {\r\n            switch (c) {\r\n                case 0x22:\r\n                    inDouble = true;\r\n                    break; // \"\r\n                case 0x27:\r\n                    inSingle = true;\r\n                    break; // '\r\n                case 0x60:\r\n                    inTemplateString = true;\r\n                    break; // `\r\n                case 0x28:\r\n                    paren++;\r\n                    break; // (\r\n                case 0x29:\r\n                    paren--;\r\n                    break; // )\r\n                case 0x5b:\r\n                    square++;\r\n                    break; // [\r\n                case 0x5d:\r\n                    square--;\r\n                    break; // ]\r\n                case 0x7b:\r\n                    curly++;\r\n                    break; // {\r\n                case 0x7d:\r\n                    curly--;\r\n                    break; // }\r\n            }\r\n            if (c === 0x2f) {\r\n                // /\r\n                let j = i - 1;\r\n                let p;\r\n                // find first non-whitespace prev char\r\n                for (; j >= 0; j--) {\r\n                    p = exp.charAt(j);\r\n                    if (p !== ' ')\r\n                        break;\r\n                }\r\n                if (!p || !validDivisionCharRE.test(p)) {\r\n                    inRegex = true;\r\n                }\r\n            }\r\n        }\r\n    }\r\n    if (expression === undefined) {\r\n        expression = exp.slice(0, i).trim();\r\n    }\r\n    else if (lastFilterIndex !== 0) {\r\n        pushFilter();\r\n    }\r\n    function pushFilter() {\r\n        filters.push(exp.slice(lastFilterIndex, i).trim());\r\n        lastFilterIndex = i + 1;\r\n    }\r\n    if (filters.length) {\r\n        (process.env.NODE_ENV !== 'production') &&\r\n            warnDeprecation(\"COMPILER_FILTER\" /* COMPILER_FILTERS */, context, node.loc);\r\n        for (i = 0; i < filters.length; i++) {\r\n            expression = wrapFilter(expression, filters[i], context);\r\n        }\r\n        node.content = expression;\r\n    }\r\n}\r\nfunction wrapFilter(exp, filter, context) {\r\n    context.helper(RESOLVE_FILTER);\r\n    const i = filter.indexOf('(');\r\n    if (i < 0) {\r\n        context.filters.add(filter);\r\n        return `${toValidAssetId(filter, 'filter')}(${exp})`;\r\n    }\r\n    else {\r\n        const name = filter.slice(0, i);\r\n        const args = filter.slice(i + 1);\r\n        context.filters.add(name);\r\n        return `${toValidAssetId(name, 'filter')}(${exp}${args !== ')' ? ',' + args : args}`;\r\n    }\r\n}\n\nconst seen$1 = new WeakSet();\r\nconst transformMemo = (node, context) => {\r\n    if (node.type === 1 /* ELEMENT */) {\r\n        const dir = findDir(node, 'memo');\r\n        if (!dir || seen$1.has(node)) {\r\n            return;\r\n        }\r\n        seen$1.add(node);\r\n        return () => {\r\n            const codegenNode = node.codegenNode ||\r\n                context.currentNode.codegenNode;\r\n            if (codegenNode && codegenNode.type === 13 /* VNODE_CALL */) {\r\n                // non-component sub tree should be turned into a block\r\n                if (node.tagType !== 1 /* COMPONENT */) {\r\n                    makeBlock(codegenNode, context);\r\n                }\r\n                node.codegenNode = createCallExpression(context.helper(WITH_MEMO), [\r\n                    dir.exp,\r\n                    createFunctionExpression(undefined, codegenNode),\r\n                    `_cache`,\r\n                    String(context.cached++)\r\n                ]);\r\n            }\r\n        };\r\n    }\r\n};\n\nfunction getBaseTransformPreset(prefixIdentifiers) {\r\n    return [\r\n        [\r\n            transformOnce,\r\n            transformIf,\r\n            transformMemo,\r\n            transformFor,\r\n            ...([transformFilter] ),\r\n            ...((process.env.NODE_ENV !== 'production')\r\n                    ? [transformExpression]\r\n                    : []),\r\n            transformSlotOutlet,\r\n            transformElement,\r\n            trackSlotScopes,\r\n            transformText\r\n        ],\r\n        {\r\n            on: transformOn,\r\n            bind: transformBind,\r\n            model: transformModel\r\n        }\r\n    ];\r\n}\r\n// we name it `baseCompile` so that higher order compilers like\r\n// @vue/compiler-dom can export `compile` while re-exporting everything else.\r\nfunction baseCompile(template, options = {}) {\r\n    const onError = options.onError || defaultOnError;\r\n    const isModuleMode = options.mode === 'module';\r\n    /* istanbul ignore if */\r\n    {\r\n        if (options.prefixIdentifiers === true) {\r\n            onError(createCompilerError(46 /* X_PREFIX_ID_NOT_SUPPORTED */));\r\n        }\r\n        else if (isModuleMode) {\r\n            onError(createCompilerError(47 /* X_MODULE_MODE_NOT_SUPPORTED */));\r\n        }\r\n    }\r\n    const prefixIdentifiers = !true ;\r\n    if (options.cacheHandlers) {\r\n        onError(createCompilerError(48 /* X_CACHE_HANDLER_NOT_SUPPORTED */));\r\n    }\r\n    if (options.scopeId && !isModuleMode) {\r\n        onError(createCompilerError(49 /* X_SCOPE_ID_NOT_SUPPORTED */));\r\n    }\r\n    const ast = isString(template) ? baseParse(template, options) : template;\r\n    const [nodeTransforms, directiveTransforms] = getBaseTransformPreset();\r\n    transform(ast, extend({}, options, {\r\n        prefixIdentifiers,\r\n        nodeTransforms: [\r\n            ...nodeTransforms,\r\n            ...(options.nodeTransforms || []) // user transforms\r\n        ],\r\n        directiveTransforms: extend({}, directiveTransforms, options.directiveTransforms || {} // user transforms\r\n        )\r\n    }));\r\n    return generate(ast, extend({}, options, {\r\n        prefixIdentifiers\r\n    }));\r\n}\n\nconst noopDirectiveTransform = () => ({ props: [] });\n\nexport { BASE_TRANSITION, CAMELIZE, CAPITALIZE, CREATE_BLOCK, CREATE_COMMENT, CREATE_ELEMENT_BLOCK, CREATE_ELEMENT_VNODE, CREATE_SLOTS, CREATE_STATIC, CREATE_TEXT, CREATE_VNODE, FRAGMENT, GUARD_REACTIVE_PROPS, IS_MEMO_SAME, IS_REF, KEEP_ALIVE, MERGE_PROPS, NORMALIZE_CLASS, NORMALIZE_PROPS, NORMALIZE_STYLE, OPEN_BLOCK, POP_SCOPE_ID, PUSH_SCOPE_ID, RENDER_LIST, RENDER_SLOT, RESOLVE_COMPONENT, RESOLVE_DIRECTIVE, RESOLVE_DYNAMIC_COMPONENT, RESOLVE_FILTER, SET_BLOCK_TRACKING, SUSPENSE, TELEPORT, TO_DISPLAY_STRING, TO_HANDLERS, TO_HANDLER_KEY, UNREF, WITH_CTX, WITH_DIRECTIVES, WITH_MEMO, advancePositionWithClone, advancePositionWithMutation, assert, baseCompile, baseParse, buildDirectiveArgs, buildProps, buildSlots, checkCompatEnabled, createArrayExpression, createAssignmentExpression, createBlockStatement, createCacheExpression, createCallExpression, createCompilerError, createCompoundExpression, createConditionalExpression, createForLoopParams, createFunctionExpression, createIfStatement, createInterpolation, createObjectExpression, createObjectProperty, createReturnStatement, createRoot, createSequenceExpression, createSimpleExpression, createStructuralDirectiveTransform, createTemplateLiteral, createTransformContext, createVNodeCall, extractIdentifiers, findDir, findProp, generate, getBaseTransformPreset, getInnerRange, getMemoedVNodeCall, getVNodeBlockHelper, getVNodeHelper, hasDynamicKeyVBind, hasScopeRef, helperNameMap, injectProp, isBuiltInType, isCoreComponent, isFunctionType, isInDestructureAssignment, isMemberExpression, isMemberExpressionBrowser, isMemberExpressionNode, isReferencedIdentifier, isSimpleIdentifier, isSlotOutlet, isStaticArgOf, isStaticExp, isStaticProperty, isStaticPropertyKey, isTemplateNode, isText, isVSlot, locStub, makeBlock, noopDirectiveTransform, processExpression, processFor, processIf, processSlotOutlet, registerRuntimeHelpers, resolveComponentType, toValidAssetId, trackSlotScopes, trackVForSlotScopes, transform, transformBind, transformElement, transformExpression, transformModel, transformOn, traverseNode, walkBlockDeclarations, walkFunctionParams, walkIdentifiers, warnDeprecation };\n","import { registerRuntimeHelpers, isBuiltInType, createSimpleExpression, createCompilerError, createObjectProperty, createCallExpression, TO_DISPLAY_STRING, transformModel as transformModel$1, findProp, hasDynamicKeyVBind, transformOn as transformOn$1, createCompoundExpression, isStaticExp, checkCompatEnabled, noopDirectiveTransform, baseCompile, baseParse } from '@vue/compiler-core';\nexport * from '@vue/compiler-core';\nimport { isVoidTag, isHTMLTag, isSVGTag, makeMap, parseStringStyle, capitalize, extend } from '@vue/shared';\n\nconst V_MODEL_RADIO = Symbol((process.env.NODE_ENV !== 'production') ? `vModelRadio` : ``);\r\nconst V_MODEL_CHECKBOX = Symbol((process.env.NODE_ENV !== 'production') ? `vModelCheckbox` : ``);\r\nconst V_MODEL_TEXT = Symbol((process.env.NODE_ENV !== 'production') ? `vModelText` : ``);\r\nconst V_MODEL_SELECT = Symbol((process.env.NODE_ENV !== 'production') ? `vModelSelect` : ``);\r\nconst V_MODEL_DYNAMIC = Symbol((process.env.NODE_ENV !== 'production') ? `vModelDynamic` : ``);\r\nconst V_ON_WITH_MODIFIERS = Symbol((process.env.NODE_ENV !== 'production') ? `vOnModifiersGuard` : ``);\r\nconst V_ON_WITH_KEYS = Symbol((process.env.NODE_ENV !== 'production') ? `vOnKeysGuard` : ``);\r\nconst V_SHOW = Symbol((process.env.NODE_ENV !== 'production') ? `vShow` : ``);\r\nconst TRANSITION = Symbol((process.env.NODE_ENV !== 'production') ? `Transition` : ``);\r\nconst TRANSITION_GROUP = Symbol((process.env.NODE_ENV !== 'production') ? `TransitionGroup` : ``);\r\nregisterRuntimeHelpers({\r\n    [V_MODEL_RADIO]: `vModelRadio`,\r\n    [V_MODEL_CHECKBOX]: `vModelCheckbox`,\r\n    [V_MODEL_TEXT]: `vModelText`,\r\n    [V_MODEL_SELECT]: `vModelSelect`,\r\n    [V_MODEL_DYNAMIC]: `vModelDynamic`,\r\n    [V_ON_WITH_MODIFIERS]: `withModifiers`,\r\n    [V_ON_WITH_KEYS]: `withKeys`,\r\n    [V_SHOW]: `vShow`,\r\n    [TRANSITION]: `Transition`,\r\n    [TRANSITION_GROUP]: `TransitionGroup`\r\n});\n\n/* eslint-disable no-restricted-globals */\r\nlet decoder;\r\nfunction decodeHtmlBrowser(raw, asAttr = false) {\r\n    if (!decoder) {\r\n        decoder = document.createElement('div');\r\n    }\r\n    if (asAttr) {\r\n        decoder.innerHTML = `<div foo=\"${raw.replace(/\"/g, '&quot;')}\">`;\r\n        return decoder.children[0].getAttribute('foo');\r\n    }\r\n    else {\r\n        decoder.innerHTML = raw;\r\n        return decoder.textContent;\r\n    }\r\n}\n\nconst isRawTextContainer = /*#__PURE__*/ makeMap('style,iframe,script,noscript', true);\r\nconst parserOptions = {\r\n    isVoidTag,\r\n    isNativeTag: tag => isHTMLTag(tag) || isSVGTag(tag),\r\n    isPreTag: tag => tag === 'pre',\r\n    decodeEntities: decodeHtmlBrowser ,\r\n    isBuiltInComponent: (tag) => {\r\n        if (isBuiltInType(tag, `Transition`)) {\r\n            return TRANSITION;\r\n        }\r\n        else if (isBuiltInType(tag, `TransitionGroup`)) {\r\n            return TRANSITION_GROUP;\r\n        }\r\n    },\r\n    // https://html.spec.whatwg.org/multipage/parsing.html#tree-construction-dispatcher\r\n    getNamespace(tag, parent) {\r\n        let ns = parent ? parent.ns : 0 /* HTML */;\r\n        if (parent && ns === 2 /* MATH_ML */) {\r\n            if (parent.tag === 'annotation-xml') {\r\n                if (tag === 'svg') {\r\n                    return 1 /* SVG */;\r\n                }\r\n                if (parent.props.some(a => a.type === 6 /* ATTRIBUTE */ &&\r\n                    a.name === 'encoding' &&\r\n                    a.value != null &&\r\n                    (a.value.content === 'text/html' ||\r\n                        a.value.content === 'application/xhtml+xml'))) {\r\n                    ns = 0 /* HTML */;\r\n                }\r\n            }\r\n            else if (/^m(?:[ions]|text)$/.test(parent.tag) &&\r\n                tag !== 'mglyph' &&\r\n                tag !== 'malignmark') {\r\n                ns = 0 /* HTML */;\r\n            }\r\n        }\r\n        else if (parent && ns === 1 /* SVG */) {\r\n            if (parent.tag === 'foreignObject' ||\r\n                parent.tag === 'desc' ||\r\n                parent.tag === 'title') {\r\n                ns = 0 /* HTML */;\r\n            }\r\n        }\r\n        if (ns === 0 /* HTML */) {\r\n            if (tag === 'svg') {\r\n                return 1 /* SVG */;\r\n            }\r\n            if (tag === 'math') {\r\n                return 2 /* MATH_ML */;\r\n            }\r\n        }\r\n        return ns;\r\n    },\r\n    // https://html.spec.whatwg.org/multipage/parsing.html#parsing-html-fragments\r\n    getTextMode({ tag, ns }) {\r\n        if (ns === 0 /* HTML */) {\r\n            if (tag === 'textarea' || tag === 'title') {\r\n                return 1 /* RCDATA */;\r\n            }\r\n            if (isRawTextContainer(tag)) {\r\n                return 2 /* RAWTEXT */;\r\n            }\r\n        }\r\n        return 0 /* DATA */;\r\n    }\r\n};\n\n// Parse inline CSS strings for static style attributes into an object.\r\n// This is a NodeTransform since it works on the static `style` attribute and\r\n// converts it into a dynamic equivalent:\r\n// style=\"color: red\" -> :style='{ \"color\": \"red\" }'\r\n// It is then processed by `transformElement` and included in the generated\r\n// props.\r\nconst transformStyle = node => {\r\n    if (node.type === 1 /* ELEMENT */) {\r\n        node.props.forEach((p, i) => {\r\n            if (p.type === 6 /* ATTRIBUTE */ && p.name === 'style' && p.value) {\r\n                // replace p with an expression node\r\n                node.props[i] = {\r\n                    type: 7 /* DIRECTIVE */,\r\n                    name: `bind`,\r\n                    arg: createSimpleExpression(`style`, true, p.loc),\r\n                    exp: parseInlineCSS(p.value.content, p.loc),\r\n                    modifiers: [],\r\n                    loc: p.loc\r\n                };\r\n            }\r\n        });\r\n    }\r\n};\r\nconst parseInlineCSS = (cssText, loc) => {\r\n    const normalized = parseStringStyle(cssText);\r\n    return createSimpleExpression(JSON.stringify(normalized), false, loc, 3 /* CAN_STRINGIFY */);\r\n};\n\nfunction createDOMCompilerError(code, loc) {\r\n    return createCompilerError(code, loc, (process.env.NODE_ENV !== 'production') || !true ? DOMErrorMessages : undefined);\r\n}\r\nconst DOMErrorMessages = {\r\n    [50 /* X_V_HTML_NO_EXPRESSION */]: `v-html is missing expression.`,\r\n    [51 /* X_V_HTML_WITH_CHILDREN */]: `v-html will override element children.`,\r\n    [52 /* X_V_TEXT_NO_EXPRESSION */]: `v-text is missing expression.`,\r\n    [53 /* X_V_TEXT_WITH_CHILDREN */]: `v-text will override element children.`,\r\n    [54 /* X_V_MODEL_ON_INVALID_ELEMENT */]: `v-model can only be used on <input>, <textarea> and <select> elements.`,\r\n    [55 /* X_V_MODEL_ARG_ON_ELEMENT */]: `v-model argument is not supported on plain elements.`,\r\n    [56 /* X_V_MODEL_ON_FILE_INPUT_ELEMENT */]: `v-model cannot be used on file inputs since they are read-only. Use a v-on:change listener instead.`,\r\n    [57 /* X_V_MODEL_UNNECESSARY_VALUE */]: `Unnecessary value binding used alongside v-model. It will interfere with v-model's behavior.`,\r\n    [58 /* X_V_SHOW_NO_EXPRESSION */]: `v-show is missing expression.`,\r\n    [59 /* X_TRANSITION_INVALID_CHILDREN */]: `<Transition> expects exactly one child element or component.`,\r\n    [60 /* X_IGNORED_SIDE_EFFECT_TAG */]: `Tags with side effect (<script> and <style>) are ignored in client component templates.`\r\n};\n\nconst transformVHtml = (dir, node, context) => {\r\n    const { exp, loc } = dir;\r\n    if (!exp) {\r\n        context.onError(createDOMCompilerError(50 /* X_V_HTML_NO_EXPRESSION */, loc));\r\n    }\r\n    if (node.children.length) {\r\n        context.onError(createDOMCompilerError(51 /* X_V_HTML_WITH_CHILDREN */, loc));\r\n        node.children.length = 0;\r\n    }\r\n    return {\r\n        props: [\r\n            createObjectProperty(createSimpleExpression(`innerHTML`, true, loc), exp || createSimpleExpression('', true))\r\n        ]\r\n    };\r\n};\n\nconst transformVText = (dir, node, context) => {\r\n    const { exp, loc } = dir;\r\n    if (!exp) {\r\n        context.onError(createDOMCompilerError(52 /* X_V_TEXT_NO_EXPRESSION */, loc));\r\n    }\r\n    if (node.children.length) {\r\n        context.onError(createDOMCompilerError(53 /* X_V_TEXT_WITH_CHILDREN */, loc));\r\n        node.children.length = 0;\r\n    }\r\n    return {\r\n        props: [\r\n            createObjectProperty(createSimpleExpression(`textContent`, true), exp\r\n                ? createCallExpression(context.helperString(TO_DISPLAY_STRING), [exp], loc)\r\n                : createSimpleExpression('', true))\r\n        ]\r\n    };\r\n};\n\nconst transformModel = (dir, node, context) => {\r\n    const baseResult = transformModel$1(dir, node, context);\r\n    // base transform has errors OR component v-model (only need props)\r\n    if (!baseResult.props.length || node.tagType === 1 /* COMPONENT */) {\r\n        return baseResult;\r\n    }\r\n    if (dir.arg) {\r\n        context.onError(createDOMCompilerError(55 /* X_V_MODEL_ARG_ON_ELEMENT */, dir.arg.loc));\r\n    }\r\n    function checkDuplicatedValue() {\r\n        const value = findProp(node, 'value');\r\n        if (value) {\r\n            context.onError(createDOMCompilerError(57 /* X_V_MODEL_UNNECESSARY_VALUE */, value.loc));\r\n        }\r\n    }\r\n    const { tag } = node;\r\n    const isCustomElement = context.isCustomElement(tag);\r\n    if (tag === 'input' ||\r\n        tag === 'textarea' ||\r\n        tag === 'select' ||\r\n        isCustomElement) {\r\n        let directiveToUse = V_MODEL_TEXT;\r\n        let isInvalidType = false;\r\n        if (tag === 'input' || isCustomElement) {\r\n            const type = findProp(node, `type`);\r\n            if (type) {\r\n                if (type.type === 7 /* DIRECTIVE */) {\r\n                    // :type=\"foo\"\r\n                    directiveToUse = V_MODEL_DYNAMIC;\r\n                }\r\n                else if (type.value) {\r\n                    switch (type.value.content) {\r\n                        case 'radio':\r\n                            directiveToUse = V_MODEL_RADIO;\r\n                            break;\r\n                        case 'checkbox':\r\n                            directiveToUse = V_MODEL_CHECKBOX;\r\n                            break;\r\n                        case 'file':\r\n                            isInvalidType = true;\r\n                            context.onError(createDOMCompilerError(56 /* X_V_MODEL_ON_FILE_INPUT_ELEMENT */, dir.loc));\r\n                            break;\r\n                        default:\r\n                            // text type\r\n                            (process.env.NODE_ENV !== 'production') && checkDuplicatedValue();\r\n                            break;\r\n                    }\r\n                }\r\n            }\r\n            else if (hasDynamicKeyVBind(node)) {\r\n                // element has bindings with dynamic keys, which can possibly contain\r\n                // \"type\".\r\n                directiveToUse = V_MODEL_DYNAMIC;\r\n            }\r\n            else {\r\n                // text type\r\n                (process.env.NODE_ENV !== 'production') && checkDuplicatedValue();\r\n            }\r\n        }\r\n        else if (tag === 'select') {\r\n            directiveToUse = V_MODEL_SELECT;\r\n        }\r\n        else {\r\n            // textarea\r\n            (process.env.NODE_ENV !== 'production') && checkDuplicatedValue();\r\n        }\r\n        // inject runtime directive\r\n        // by returning the helper symbol via needRuntime\r\n        // the import will replaced a resolveDirective call.\r\n        if (!isInvalidType) {\r\n            baseResult.needRuntime = context.helper(directiveToUse);\r\n        }\r\n    }\r\n    else {\r\n        context.onError(createDOMCompilerError(54 /* X_V_MODEL_ON_INVALID_ELEMENT */, dir.loc));\r\n    }\r\n    // native vmodel doesn't need the `modelValue` props since they are also\r\n    // passed to the runtime as `binding.value`. removing it reduces code size.\r\n    baseResult.props = baseResult.props.filter(p => !(p.key.type === 4 /* SIMPLE_EXPRESSION */ &&\r\n        p.key.content === 'modelValue'));\r\n    return baseResult;\r\n};\n\nconst isEventOptionModifier = /*#__PURE__*/ makeMap(`passive,once,capture`);\r\nconst isNonKeyModifier = /*#__PURE__*/ makeMap(\r\n// event propagation management\r\n`stop,prevent,self,` +\r\n    // system modifiers + exact\r\n    `ctrl,shift,alt,meta,exact,` +\r\n    // mouse\r\n    `middle`);\r\n// left & right could be mouse or key modifiers based on event type\r\nconst maybeKeyModifier = /*#__PURE__*/ makeMap('left,right');\r\nconst isKeyboardEvent = /*#__PURE__*/ makeMap(`onkeyup,onkeydown,onkeypress`, true);\r\nconst resolveModifiers = (key, modifiers, context, loc) => {\r\n    const keyModifiers = [];\r\n    const nonKeyModifiers = [];\r\n    const eventOptionModifiers = [];\r\n    for (let i = 0; i < modifiers.length; i++) {\r\n        const modifier = modifiers[i];\r\n        if (modifier === 'native' &&\r\n            checkCompatEnabled(\"COMPILER_V_ON_NATIVE\" /* COMPILER_V_ON_NATIVE */, context, loc)) {\r\n            eventOptionModifiers.push(modifier);\r\n        }\r\n        else if (isEventOptionModifier(modifier)) {\r\n            // eventOptionModifiers: modifiers for addEventListener() options,\r\n            // e.g. .passive & .capture\r\n            eventOptionModifiers.push(modifier);\r\n        }\r\n        else {\r\n            // runtimeModifiers: modifiers that needs runtime guards\r\n            if (maybeKeyModifier(modifier)) {\r\n                if (isStaticExp(key)) {\r\n                    if (isKeyboardEvent(key.content)) {\r\n                        keyModifiers.push(modifier);\r\n                    }\r\n                    else {\r\n                        nonKeyModifiers.push(modifier);\r\n                    }\r\n                }\r\n                else {\r\n                    keyModifiers.push(modifier);\r\n                    nonKeyModifiers.push(modifier);\r\n                }\r\n            }\r\n            else {\r\n                if (isNonKeyModifier(modifier)) {\r\n                    nonKeyModifiers.push(modifier);\r\n                }\r\n                else {\r\n                    keyModifiers.push(modifier);\r\n                }\r\n            }\r\n        }\r\n    }\r\n    return {\r\n        keyModifiers,\r\n        nonKeyModifiers,\r\n        eventOptionModifiers\r\n    };\r\n};\r\nconst transformClick = (key, event) => {\r\n    const isStaticClick = isStaticExp(key) && key.content.toLowerCase() === 'onclick';\r\n    return isStaticClick\r\n        ? createSimpleExpression(event, true)\r\n        : key.type !== 4 /* SIMPLE_EXPRESSION */\r\n            ? createCompoundExpression([\r\n                `(`,\r\n                key,\r\n                `) === \"onClick\" ? \"${event}\" : (`,\r\n                key,\r\n                `)`\r\n            ])\r\n            : key;\r\n};\r\nconst transformOn = (dir, node, context) => {\r\n    return transformOn$1(dir, node, context, baseResult => {\r\n        const { modifiers } = dir;\r\n        if (!modifiers.length)\r\n            return baseResult;\r\n        let { key, value: handlerExp } = baseResult.props[0];\r\n        const { keyModifiers, nonKeyModifiers, eventOptionModifiers } = resolveModifiers(key, modifiers, context, dir.loc);\r\n        // normalize click.right and click.middle since they don't actually fire\r\n        if (nonKeyModifiers.includes('right')) {\r\n            key = transformClick(key, `onContextmenu`);\r\n        }\r\n        if (nonKeyModifiers.includes('middle')) {\r\n            key = transformClick(key, `onMouseup`);\r\n        }\r\n        if (nonKeyModifiers.length) {\r\n            handlerExp = createCallExpression(context.helper(V_ON_WITH_MODIFIERS), [\r\n                handlerExp,\r\n                JSON.stringify(nonKeyModifiers)\r\n            ]);\r\n        }\r\n        if (keyModifiers.length &&\r\n            // if event name is dynamic, always wrap with keys guard\r\n            (!isStaticExp(key) || isKeyboardEvent(key.content))) {\r\n            handlerExp = createCallExpression(context.helper(V_ON_WITH_KEYS), [\r\n                handlerExp,\r\n                JSON.stringify(keyModifiers)\r\n            ]);\r\n        }\r\n        if (eventOptionModifiers.length) {\r\n            const modifierPostfix = eventOptionModifiers.map(capitalize).join('');\r\n            key = isStaticExp(key)\r\n                ? createSimpleExpression(`${key.content}${modifierPostfix}`, true)\r\n                : createCompoundExpression([`(`, key, `) + \"${modifierPostfix}\"`]);\r\n        }\r\n        return {\r\n            props: [createObjectProperty(key, handlerExp)]\r\n        };\r\n    });\r\n};\n\nconst transformShow = (dir, node, context) => {\r\n    const { exp, loc } = dir;\r\n    if (!exp) {\r\n        context.onError(createDOMCompilerError(58 /* X_V_SHOW_NO_EXPRESSION */, loc));\r\n    }\r\n    return {\r\n        props: [],\r\n        needRuntime: context.helper(V_SHOW)\r\n    };\r\n};\n\nconst warnTransitionChildren = (node, context) => {\r\n    if (node.type === 1 /* ELEMENT */ &&\r\n        node.tagType === 1 /* COMPONENT */) {\r\n        const component = context.isBuiltInComponent(node.tag);\r\n        if (component === TRANSITION) {\r\n            return () => {\r\n                if (node.children.length && hasMultipleChildren(node)) {\r\n                    context.onError(createDOMCompilerError(59 /* X_TRANSITION_INVALID_CHILDREN */, {\r\n                        start: node.children[0].loc.start,\r\n                        end: node.children[node.children.length - 1].loc.end,\r\n                        source: ''\r\n                    }));\r\n                }\r\n            };\r\n        }\r\n    }\r\n};\r\nfunction hasMultipleChildren(node) {\r\n    // #1352 filter out potential comment nodes.\r\n    const children = (node.children = node.children.filter(c => c.type !== 3 /* COMMENT */ &&\r\n        !(c.type === 2 /* TEXT */ && !c.content.trim())));\r\n    const child = children[0];\r\n    return (children.length !== 1 ||\r\n        child.type === 11 /* FOR */ ||\r\n        (child.type === 9 /* IF */ && child.branches.some(hasMultipleChildren)));\r\n}\n\nconst ignoreSideEffectTags = (node, context) => {\r\n    if (node.type === 1 /* ELEMENT */ &&\r\n        node.tagType === 0 /* ELEMENT */ &&\r\n        (node.tag === 'script' || node.tag === 'style')) {\r\n        context.onError(createDOMCompilerError(60 /* X_IGNORED_SIDE_EFFECT_TAG */, node.loc));\r\n        context.removeNode();\r\n    }\r\n};\n\nconst DOMNodeTransforms = [\r\n    transformStyle,\r\n    ...((process.env.NODE_ENV !== 'production') ? [warnTransitionChildren] : [])\r\n];\r\nconst DOMDirectiveTransforms = {\r\n    cloak: noopDirectiveTransform,\r\n    html: transformVHtml,\r\n    text: transformVText,\r\n    model: transformModel,\r\n    on: transformOn,\r\n    show: transformShow\r\n};\r\nfunction compile(template, options = {}) {\r\n    return baseCompile(template, extend({}, parserOptions, options, {\r\n        nodeTransforms: [\r\n            // ignore <script> and <tag>\r\n            // this is not put inside DOMNodeTransforms because that list is used\r\n            // by compiler-ssr to generate vnode fallback branches\r\n            ignoreSideEffectTags,\r\n            ...DOMNodeTransforms,\r\n            ...(options.nodeTransforms || [])\r\n        ],\r\n        directiveTransforms: extend({}, DOMDirectiveTransforms, options.directiveTransforms || {}),\r\n        transformHoist: null \r\n    }));\r\n}\r\nfunction parse(template, options = {}) {\r\n    return baseParse(template, extend({}, parserOptions, options));\r\n}\n\nexport { DOMDirectiveTransforms, DOMNodeTransforms, TRANSITION, TRANSITION_GROUP, V_MODEL_CHECKBOX, V_MODEL_DYNAMIC, V_MODEL_RADIO, V_MODEL_SELECT, V_MODEL_TEXT, V_ON_WITH_KEYS, V_ON_WITH_MODIFIERS, V_SHOW, compile, createDOMCompilerError, parse, parserOptions, transformStyle };\n","import * as runtimeDom from '@vue/runtime-dom';\nimport { initCustomFormatter, warn, registerRuntimeCompiler } from '@vue/runtime-dom';\nexport * from '@vue/runtime-dom';\nimport { compile } from '@vue/compiler-dom';\nimport { isString, NOOP, extend, generateCodeFrame } from '@vue/shared';\n\nfunction initDev() {\r\n    {\r\n        initCustomFormatter();\r\n    }\r\n}\n\n// This entry is the \"full-build\" that includes both the runtime\r\nif ((process.env.NODE_ENV !== 'production')) {\r\n    initDev();\r\n}\r\nconst compileCache = Object.create(null);\r\nfunction compileToFunction(template, options) {\r\n    if (!isString(template)) {\r\n        if (template.nodeType) {\r\n            template = template.innerHTML;\r\n        }\r\n        else {\r\n            (process.env.NODE_ENV !== 'production') && warn(`invalid template option: `, template);\r\n            return NOOP;\r\n        }\r\n    }\r\n    const key = template;\r\n    const cached = compileCache[key];\r\n    if (cached) {\r\n        return cached;\r\n    }\r\n    if (template[0] === '#') {\r\n        const el = document.querySelector(template);\r\n        if ((process.env.NODE_ENV !== 'production') && !el) {\r\n            warn(`Template element not found or is empty: ${template}`);\r\n        }\r\n        // __UNSAFE__\r\n        // Reason: potential execution of JS expressions in in-DOM template.\r\n        // The user must make sure the in-DOM template is trusted. If it's rendered\r\n        // by the server, the template should not contain any user data.\r\n        template = el ? el.innerHTML : ``;\r\n    }\r\n    const { code } = compile(template, extend({\r\n        hoistStatic: true,\r\n        onError: (process.env.NODE_ENV !== 'production') ? onError : undefined,\r\n        onWarn: (process.env.NODE_ENV !== 'production') ? e => onError(e, true) : NOOP\r\n    }, options));\r\n    function onError(err, asWarning = false) {\r\n        const message = asWarning\r\n            ? err.message\r\n            : `Template compilation error: ${err.message}`;\r\n        const codeFrame = err.loc &&\r\n            generateCodeFrame(template, err.loc.start.offset, err.loc.end.offset);\r\n        warn(codeFrame ? `${message}\\n${codeFrame}` : message);\r\n    }\r\n    // The wildcard import results in a huge object with every export\r\n    // with keys that cannot be mangled, and can be quite heavy size-wise.\r\n    // In the global build we know `Vue` is available globally so we can avoid\r\n    // the wildcard object.\r\n    const render = (new Function('Vue', code)(runtimeDom));\r\n    render._rc = true;\r\n    return (compileCache[key] = render);\r\n}\r\nregisterRuntimeCompiler(compileToFunction);\n\nexport { compileToFunction as compile };\n"],"names":["HOOK_SETUP","HOOK_PLUGIN_SETTINGS_SET","getDevtoolsGlobalHook","getTarget","__VUE_DEVTOOLS_GLOBAL_HOOK__","navigator","window","g","isProxyAvailable","Proxy","setupDevtoolsPlugin","pluginDescriptor","setupFn","descriptor","target","hook","enableProxy","enableEarlyProxy","__VUE_DEVTOOLS_PLUGIN_API_AVAILABLE__","proxy","list","__VUE_DEVTOOLS_PLUGINS__","push","proxiedTarget","emit","ApiProxy","constructor","plugin","this","targetQueue","onQueue","defaultSettings","settings","id","item","defaultValue","localSettingsSaveId","currentSettings","Object","assign","raw","localStorage","getItem","data","JSON","parse","e","fallbacks","getSettings","setSettings","value","setItem","stringify","now","on","pluginId","proxiedOn","get","_target","prop","args","method","keys","includes","resolve","Promise","async","supported","perf","isPerformanceSupported","_a","undefined","performance","perf_hooks","Date","isVue2","defaultOnError","error","defaultOnWarn","msg","createCompilerError","code","loc","messages","additionalMessage","SyntaxError","String","FRAGMENT","Symbol","TELEPORT","SUSPENSE","KEEP_ALIVE","BASE_TRANSITION","OPEN_BLOCK","CREATE_BLOCK","CREATE_ELEMENT_BLOCK","CREATE_VNODE","CREATE_ELEMENT_VNODE","CREATE_COMMENT","CREATE_TEXT","CREATE_STATIC","RESOLVE_COMPONENT","RESOLVE_DYNAMIC_COMPONENT","RESOLVE_DIRECTIVE","RESOLVE_FILTER","WITH_DIRECTIVES","RENDER_LIST","RENDER_SLOT","CREATE_SLOTS","TO_DISPLAY_STRING","MERGE_PROPS","NORMALIZE_CLASS","NORMALIZE_STYLE","NORMALIZE_PROPS","GUARD_REACTIVE_PROPS","TO_HANDLERS","CAMELIZE","CAPITALIZE","TO_HANDLER_KEY","SET_BLOCK_TRACKING","PUSH_SCOPE_ID","POP_SCOPE_ID","WITH_CTX","UNREF","IS_REF","WITH_MEMO","IS_MEMO_SAME","helperNameMap","registerRuntimeHelpers","helpers","getOwnPropertySymbols","forEach","s","locStub","source","start","line","column","offset","end","createRoot","children","type","components","directives","hoists","imports","cached","temps","codegenNode","createVNodeCall","context","tag","props","patchFlag","dynamicProps","isBlock","disableTracking","isComponent","helper","getVNodeBlockHelper","inSSR","getVNodeHelper","createArrayExpression","elements","createObjectExpression","properties","createObjectProperty","key","createSimpleExpression","content","isStatic","constType","createCompoundExpression","createCallExpression","callee","arguments","createFunctionExpression","params","returns","newline","isSlot","createConditionalExpression","test","consequent","alternate","createCacheExpression","index","isVNode","createBlockStatement","body","isStaticExp","p","isBuiltInType","expected","isCoreComponent","nonIdentifierRE","isSimpleIdentifier","name","validFirstIdentCharRE","validIdentCharRE","whitespaceRE","isMemberExpressionBrowser","path","trim","replace","state","stateStack","currentOpenBracketCount","currentOpenParensCount","currentStringType","i","length","char","charAt","pop","isMemberExpression","getInnerRange","slice","newLoc","advancePositionWithClone","pos","numberOfCharacters","advancePositionWithMutation","linesCount","lastNewLinePos","charCodeAt","findDir","node","allowEmpty","exp","findProp","dynamicOnly","isStaticArgOf","arg","hasDynamicKeyVBind","some","isText","isVSlot","isTemplateNode","tagType","isSlotOutlet","ssr","propsHelperSet","Set","getUnnormalizedProps","callPath","has","concat","injectProp","propsWithInjection","parentCall","ret","first","unshift","alreadyExists","propKeyName","toValidAssetId","searchValue","replaceValue","toString","getMemoedVNodeCall","makeBlock","removeHelper","getCompatValue","config","options","compatConfig","isCompatEnabled","mode","checkCompatEnabled","enabled","decodeRE","decodeMap","gt","lt","amp","apos","quot","defaultParserOptions","delimiters","getNamespace","getTextMode","isVoidTag","NO","isPreTag","isCustomElement","decodeEntities","rawText","_","p1","onError","onWarn","comments","createParserContext","getCursor","parseChildren","getSelection","rawOptions","originalSource","inPre","inVPre","ancestors","parent","last","ns","nodes","isEnd","startsWith","parseInterpolation","emitError","parseComment","parseBogusComment","parseCDATA","advanceBy","parseTag","parseElement","isSpecialTemplateDirective","parseText","pushNode","removedWhitespace","shouldCondense","whitespace","prev","next","filter","Boolean","match","exec","prevIndex","nestedIndex","indexOf","contentStart","closeIndex","wasInPre","wasInVPre","element","isPreBoundary","isVPreBoundary","isSelfClosing","inlineTemplateProp","find","startsWithEndTagOpen","toLowerCase","advanceSpaces","cursor","currentSource","parseAttributes","isBuiltInComponent","isNativeTag","attributeNames","attr","parseAttribute","nameSet","add","pattern","m","parseAttributeValue","isPropShorthand","dirName","startOffset","lastIndexOf","getNewPosition","endsWith","isQuoted","valueLoc","modifiers","split","splice","quote","endIndex","parseTextData","unexpectedChars","open","close","innerStart","innerEnd","rawContentLength","rawContent","preTrimContent","endOffset","endTokens","xs","searchString","hoistStatic","root","walk","isSingleElementRoot","child","doNotHoistNode","originalCount","hoistedCount","constantType","getConstantType","hoist","flag","getPatchFlag","getGeneratedPropsConstantType","getNodeProps","scopes","vSlot","branches","transformHoist","constantCache","set","returnType","generatedPropsType","childType","expType","allowHoistedHelperSet","getConstantTypeOfHelperCall","keyType","valueType","parseInt","createTransformContext","filename","prefixIdentifiers","cacheHandlers","nodeTransforms","directiveTransforms","expressionPlugins","scopeId","slotted","ssrCssVars","bindingMetadata","inline","isTS","nameMatch","selfName","Map","identifiers","create","vFor","vPre","vOnce","currentNode","childIndex","inVOnce","count","currentCount","delete","helperString","replaceNode","removeNode","removalIndex","onNodeRemoved","addIdentifiers","removeIdentifiers","identifier","hoisted","cache","filters","transform","traverseNode","createRootCodegen","traverseChildren","nodeRemoved","exitFns","onExit","createStructuralDirectiveTransform","fn","matches","n","PURE_ANNOTATION","createCodegenContext","ast","sourceMap","optimizeImports","runtimeGlobalName","runtimeModuleName","ssrRuntimeModuleName","indentLevel","pure","map","indent","deindent","withoutNewLine","repeat","generate","onContextCreated","hasHelpers","useWithBlock","preambleContext","genFunctionPreamble","functionName","signature","join","genAssets","genNode","preamble","toJSON","VueBinding","aliasHelper","staticHelpers","genHoists","assets","resolver","maybeSelfReference","genNodeListAsArray","multilines","genNodeList","comma","genText","genExpression","genInterpolation","genCompoundExpression","genComment","genVNodeCall","genCallExpression","genObjectExpression","genArrayExpression","genFunctionExpression","genConditionalExpression","genCacheExpression","genExpressionAsPropertyKey","text","callHelper","genNullableArgs","isNonScopedSlot","needNewline","needsParens","isNested","RegExp","transformIf","dir","processIf","ifNode","branch","isRoot","siblings","sibling","createCodegenNodeForBranch","parentCondition","getParentCondition","processCodegen","createIfBranch","condition","userKey","keyIndex","createChildrenCodegenNode","keyProperty","firstChild","needFragmentWrapper","vnodeCall","transformFor","processFor","forNode","renderExp","isTemplate","memo","keyProp","keyExp","isStableFragment","fragmentFlag","childBlock","slotOutlet","loop","createForLoopParams","parseResult","parseForExpression","valueAlias","keyAlias","objectIndexAlias","forAliasRE","forIteratorRE","stripParensRE","input","inMatch","LHS","RHS","result","createAliasExpression","valueContent","trimmedOffset","iteratorMatch","keyContent","keyOffset","indexContent","range","memoArgs","createParamsList","defaultFallback","trackSlotScopes","buildClientSlotFn","buildSlots","buildSlotFn","slotsProperties","dynamicSlots","hasDynamicSlots","onComponentSlot","hasTemplateSlots","hasNamedDefaultSlot","implicitDefaultChildren","seenSlotNames","slotElement","slotDir","slotChildren","slotLoc","slotName","slotProps","dirLoc","staticSlotName","slotFunction","vIf","vElse","buildDynamicSlot","j","conditional","buildDefaultSlotProperty","isNonWhitespaceContent","slotFlag","hasForwardedSlots","slots","directiveImportMap","WeakMap","transformElement","vnodeTag","resolveComponentType","isDynamicComponent","vnodeProps","vnodeChildren","vnodePatchFlag","vnodeDynamicProps","dynamicPropNames","vnodeDirectives","shouldUseBlock","propsBuildResult","buildProps","buildDirectiveArgs","shouldBuildAsSlots","hasDynamicTextChild","stringifyDynamicPropNames","isExplicitDynamic","isComponentTag","isProp","isDir","builtIn","elementLoc","mergeArgs","runtimeDirectives","hasChildren","hasRef","hasClassBinding","hasStyleBinding","hasHydrationEventBinding","hasDynamicKeys","hasVnodeHook","analyzePatchFlag","isEventHandler","isVBind","isVOn","dedupeProperties","directiveTransform","needRuntime","propsExpression","classKeyIndex","styleKeyIndex","hasDynamicKey","isHandlerKey","classProp","styleProp","knownProps","deduped","existing","mergeAsArray","incoming","dirArgs","runtime","trueExpression","modifier","propsNamesString","l","cacheStringFunction","str","hit","camelizeRE","camelize","c","toUpperCase","transformSlotOutlet","processSlotOutlet","slotArgs","expectedLen","nonNameProps","fnExpRE","transformOn","augmentor","eventName","rawName","shouldCache","isMemberExp","isInlineStatement","hasMultipleStatements","transformBind","_node","injectPrefix","prefix","transformText","currentContainer","hasText","callArgs","seen","WeakSet","transformOnce","cur","transformModel","createTransformProps","rawExp","expString","maybeRef","propName","assignmentExp","eventArg","modifiersKey","validDivisionCharRE","transformFilter","rewriteFilter","parseFilter","expression","inSingle","inDouble","inTemplateString","inRegex","curly","square","paren","lastFilterIndex","pushFilter","wrapFilter","seen$1","transformMemo","getBaseTransformPreset","bind","model","baseCompile","template","isModuleMode","noopDirectiveTransform","V_MODEL_RADIO","V_MODEL_CHECKBOX","V_MODEL_TEXT","V_MODEL_SELECT","V_MODEL_DYNAMIC","V_ON_WITH_MODIFIERS","V_ON_WITH_KEYS","V_SHOW","TRANSITION","TRANSITION_GROUP","decoder","decodeHtmlBrowser","asAttr","document","createElement","innerHTML","getAttribute","textContent","isRawTextContainer","parserOptions","a","transformStyle","parseInlineCSS","cssText","normalized","createDOMCompilerError","transformVHtml","transformVText","baseResult","directiveToUse","isInvalidType","isEventOptionModifier","isNonKeyModifier","maybeKeyModifier","isKeyboardEvent","resolveModifiers","keyModifiers","nonKeyModifiers","eventOptionModifiers","transformClick","event","isStaticClick","handlerExp","modifierPostfix","transformShow","ignoreSideEffectTags","DOMNodeTransforms","DOMDirectiveTransforms","cloak","html","show","compile","compileCache","compileToFunction","nodeType","el","querySelector","render","Function","_rc"],"sourceRoot":""}