{"version":3,"file":"js/chunk-vendors-1656f0b4.c7a076d6.js","mappings":"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","sources":["webpack://@creators/cms-next/./node_modules/@vue/compiler-core/dist/compiler-core.esm-bundler.js","webpack://@creators/cms-next/./node_modules/@vue/compiler-dom/dist/compiler-dom.esm-bundler.js","webpack://@creators/cms-next/./node_modules/@vue/devtools-api/lib/esm/const.js","webpack://@creators/cms-next/./node_modules/@vue/devtools-api/lib/esm/env.js","webpack://@creators/cms-next/./node_modules/@vue/devtools-api/lib/esm/index.js","webpack://@creators/cms-next/./node_modules/@vue/devtools-api/lib/esm/proxy.js","webpack://@creators/cms-next/./node_modules/@vue/devtools-api/lib/esm/time.js","webpack://@creators/cms-next/./node_modules/vue-query/node_modules/vue-demi/lib/index.esm.js"],"sourcesContent":["import { isString, hyphenate, NOOP, extend, isObject, NO, isArray, makeMap, isSymbol, EMPTY_OBJ, capitalize, camelize as camelize$1, PatchFlagNames, slotFlagsText, isOn, isBuiltInDirective, isReservedProp, toHandlerKey } from '@vue/shared';\nexport { generateCodeFrame } from '@vue/shared';\n\nfunction defaultOnError(error) {\r\n    throw error;\r\n}\r\nfunction defaultOnWarn(msg) {\r\n    (process.env.NODE_ENV !== 'production') && console.warn(`[Vue warn] ${msg.message}`);\r\n}\r\nfunction createCompilerError(code, loc, messages, additionalMessage) {\r\n    const msg = (process.env.NODE_ENV !== 'production') || !true\r\n        ? (messages || errorMessages)[code] + (additionalMessage || ``)\r\n        : code;\r\n    const error = new SyntaxError(String(msg));\r\n    error.code = code;\r\n    error.loc = loc;\r\n    return error;\r\n}\r\nconst errorMessages = {\r\n    // parse errors\r\n    [0 /* ABRUPT_CLOSING_OF_EMPTY_COMMENT */]: 'Illegal comment.',\r\n    [1 /* CDATA_IN_HTML_CONTENT */]: 'CDATA section is allowed only in XML context.',\r\n    [2 /* DUPLICATE_ATTRIBUTE */]: 'Duplicate attribute.',\r\n    [3 /* END_TAG_WITH_ATTRIBUTES */]: 'End tag cannot have attributes.',\r\n    [4 /* END_TAG_WITH_TRAILING_SOLIDUS */]: \"Illegal '/' in tags.\",\r\n    [5 /* EOF_BEFORE_TAG_NAME */]: 'Unexpected EOF in tag.',\r\n    [6 /* EOF_IN_CDATA */]: 'Unexpected EOF in CDATA section.',\r\n    [7 /* EOF_IN_COMMENT */]: 'Unexpected EOF in comment.',\r\n    [8 /* EOF_IN_SCRIPT_HTML_COMMENT_LIKE_TEXT */]: 'Unexpected EOF in script.',\r\n    [9 /* EOF_IN_TAG */]: 'Unexpected EOF in tag.',\r\n    [10 /* INCORRECTLY_CLOSED_COMMENT */]: 'Incorrectly closed comment.',\r\n    [11 /* INCORRECTLY_OPENED_COMMENT */]: 'Incorrectly opened comment.',\r\n    [12 /* INVALID_FIRST_CHARACTER_OF_TAG_NAME */]: \"Illegal tag name. Use '&lt;' to print '<'.\",\r\n    [13 /* MISSING_ATTRIBUTE_VALUE */]: 'Attribute value was expected.',\r\n    [14 /* MISSING_END_TAG_NAME */]: 'End tag name was expected.',\r\n    [15 /* MISSING_WHITESPACE_BETWEEN_ATTRIBUTES */]: 'Whitespace was expected.',\r\n    [16 /* NESTED_COMMENT */]: \"Unexpected '<!--' in comment.\",\r\n    [17 /* UNEXPECTED_CHARACTER_IN_ATTRIBUTE_NAME */]: 'Attribute name cannot contain U+0022 (\"), U+0027 (\\'), and U+003C (<).',\r\n    [18 /* UNEXPECTED_CHARACTER_IN_UNQUOTED_ATTRIBUTE_VALUE */]: 'Unquoted attribute value cannot contain U+0022 (\"), U+0027 (\\'), U+003C (<), U+003D (=), and U+0060 (`).',\r\n    [19 /* UNEXPECTED_EQUALS_SIGN_BEFORE_ATTRIBUTE_NAME */]: \"Attribute name cannot start with '='.\",\r\n    [21 /* UNEXPECTED_QUESTION_MARK_INSTEAD_OF_TAG_NAME */]: \"'<?' is allowed only in XML context.\",\r\n    [20 /* UNEXPECTED_NULL_CHARACTER */]: `Unexpected null character.`,\r\n    [22 /* UNEXPECTED_SOLIDUS_IN_TAG */]: \"Illegal '/' in tags.\",\r\n    // Vue-specific parse errors\r\n    [23 /* X_INVALID_END_TAG */]: 'Invalid end tag.',\r\n    [24 /* X_MISSING_END_TAG */]: 'Element is missing end tag.',\r\n    [25 /* X_MISSING_INTERPOLATION_END */]: 'Interpolation end sign was not found.',\r\n    [27 /* X_MISSING_DYNAMIC_DIRECTIVE_ARGUMENT_END */]: 'End bracket for dynamic directive argument was not found. ' +\r\n        'Note that dynamic directive argument cannot contain spaces.',\r\n    [26 /* X_MISSING_DIRECTIVE_NAME */]: 'Legal directive name was expected.',\r\n    // transform errors\r\n    [28 /* X_V_IF_NO_EXPRESSION */]: `v-if/v-else-if is missing expression.`,\r\n    [29 /* X_V_IF_SAME_KEY */]: `v-if/else branches must use unique keys.`,\r\n    [30 /* X_V_ELSE_NO_ADJACENT_IF */]: `v-else/v-else-if has no adjacent v-if or v-else-if.`,\r\n    [31 /* X_V_FOR_NO_EXPRESSION */]: `v-for is missing expression.`,\r\n    [32 /* X_V_FOR_MALFORMED_EXPRESSION */]: `v-for has invalid expression.`,\r\n    [33 /* X_V_FOR_TEMPLATE_KEY_PLACEMENT */]: `<template v-for> key should be placed on the <template> tag.`,\r\n    [34 /* X_V_BIND_NO_EXPRESSION */]: `v-bind is missing expression.`,\r\n    [35 /* X_V_ON_NO_EXPRESSION */]: `v-on is missing expression.`,\r\n    [36 /* X_V_SLOT_UNEXPECTED_DIRECTIVE_ON_SLOT_OUTLET */]: `Unexpected custom directive on <slot> outlet.`,\r\n    [37 /* X_V_SLOT_MIXED_SLOT_USAGE */]: `Mixed v-slot usage on both the component and nested <template>.` +\r\n        `When there are multiple named slots, all slots should use <template> ` +\r\n        `syntax to avoid scope ambiguity.`,\r\n    [38 /* X_V_SLOT_DUPLICATE_SLOT_NAMES */]: `Duplicate slot names found. `,\r\n    [39 /* X_V_SLOT_EXTRANEOUS_DEFAULT_SLOT_CHILDREN */]: `Extraneous children found when component already has explicitly named ` +\r\n        `default slot. These children will be ignored.`,\r\n    [40 /* X_V_SLOT_MISPLACED */]: `v-slot can only be used on components or <template> tags.`,\r\n    [41 /* X_V_MODEL_NO_EXPRESSION */]: `v-model is missing expression.`,\r\n    [42 /* X_V_MODEL_MALFORMED_EXPRESSION */]: `v-model value must be a valid JavaScript member expression.`,\r\n    [43 /* X_V_MODEL_ON_SCOPE_VARIABLE */]: `v-model cannot be used on v-for or v-slot scope variables because they are not writable.`,\r\n    [44 /* X_INVALID_EXPRESSION */]: `Error parsing JavaScript expression: `,\r\n    [45 /* X_KEEP_ALIVE_INVALID_CHILDREN */]: `<KeepAlive> expects exactly one child component.`,\r\n    // generic errors\r\n    [46 /* X_PREFIX_ID_NOT_SUPPORTED */]: `\"prefixIdentifiers\" option is not supported in this build of compiler.`,\r\n    [47 /* X_MODULE_MODE_NOT_SUPPORTED */]: `ES module mode is not supported in this build of compiler.`,\r\n    [48 /* X_CACHE_HANDLER_NOT_SUPPORTED */]: `\"cacheHandlers\" option is only supported when the \"prefixIdentifiers\" option is enabled.`,\r\n    [49 /* X_SCOPE_ID_NOT_SUPPORTED */]: `\"scopeId\" option is only supported in module mode.`,\r\n    // just to fulfill types\r\n    [50 /* __EXTEND_POINT__ */]: ``\r\n};\n\nconst FRAGMENT = Symbol((process.env.NODE_ENV !== 'production') ? `Fragment` : ``);\r\nconst TELEPORT = Symbol((process.env.NODE_ENV !== 'production') ? `Teleport` : ``);\r\nconst SUSPENSE = Symbol((process.env.NODE_ENV !== 'production') ? `Suspense` : ``);\r\nconst KEEP_ALIVE = Symbol((process.env.NODE_ENV !== 'production') ? `KeepAlive` : ``);\r\nconst BASE_TRANSITION = Symbol((process.env.NODE_ENV !== 'production') ? `BaseTransition` : ``);\r\nconst OPEN_BLOCK = Symbol((process.env.NODE_ENV !== 'production') ? `openBlock` : ``);\r\nconst CREATE_BLOCK = Symbol((process.env.NODE_ENV !== 'production') ? `createBlock` : ``);\r\nconst CREATE_ELEMENT_BLOCK = Symbol((process.env.NODE_ENV !== 'production') ? `createElementBlock` : ``);\r\nconst CREATE_VNODE = Symbol((process.env.NODE_ENV !== 'production') ? `createVNode` : ``);\r\nconst CREATE_ELEMENT_VNODE = Symbol((process.env.NODE_ENV !== 'production') ? `createElementVNode` : ``);\r\nconst CREATE_COMMENT = Symbol((process.env.NODE_ENV !== 'production') ? `createCommentVNode` : ``);\r\nconst CREATE_TEXT = Symbol((process.env.NODE_ENV !== 'production') ? `createTextVNode` : ``);\r\nconst CREATE_STATIC = Symbol((process.env.NODE_ENV !== 'production') ? `createStaticVNode` : ``);\r\nconst RESOLVE_COMPONENT = Symbol((process.env.NODE_ENV !== 'production') ? `resolveComponent` : ``);\r\nconst RESOLVE_DYNAMIC_COMPONENT = Symbol((process.env.NODE_ENV !== 'production') ? `resolveDynamicComponent` : ``);\r\nconst RESOLVE_DIRECTIVE = Symbol((process.env.NODE_ENV !== 'production') ? `resolveDirective` : ``);\r\nconst RESOLVE_FILTER = Symbol((process.env.NODE_ENV !== 'production') ? `resolveFilter` : ``);\r\nconst WITH_DIRECTIVES = Symbol((process.env.NODE_ENV !== 'production') ? `withDirectives` : ``);\r\nconst RENDER_LIST = Symbol((process.env.NODE_ENV !== 'production') ? `renderList` : ``);\r\nconst RENDER_SLOT = Symbol((process.env.NODE_ENV !== 'production') ? `renderSlot` : ``);\r\nconst CREATE_SLOTS = Symbol((process.env.NODE_ENV !== 'production') ? `createSlots` : ``);\r\nconst TO_DISPLAY_STRING = Symbol((process.env.NODE_ENV !== 'production') ? `toDisplayString` : ``);\r\nconst MERGE_PROPS = Symbol((process.env.NODE_ENV !== 'production') ? `mergeProps` : ``);\r\nconst NORMALIZE_CLASS = Symbol((process.env.NODE_ENV !== 'production') ? `normalizeClass` : ``);\r\nconst NORMALIZE_STYLE = Symbol((process.env.NODE_ENV !== 'production') ? `normalizeStyle` : ``);\r\nconst NORMALIZE_PROPS = Symbol((process.env.NODE_ENV !== 'production') ? `normalizeProps` : ``);\r\nconst GUARD_REACTIVE_PROPS = Symbol((process.env.NODE_ENV !== 'production') ? `guardReactiveProps` : ``);\r\nconst TO_HANDLERS = Symbol((process.env.NODE_ENV !== 'production') ? `toHandlers` : ``);\r\nconst CAMELIZE = Symbol((process.env.NODE_ENV !== 'production') ? `camelize` : ``);\r\nconst CAPITALIZE = Symbol((process.env.NODE_ENV !== 'production') ? `capitalize` : ``);\r\nconst TO_HANDLER_KEY = Symbol((process.env.NODE_ENV !== 'production') ? `toHandlerKey` : ``);\r\nconst SET_BLOCK_TRACKING = Symbol((process.env.NODE_ENV !== 'production') ? `setBlockTracking` : ``);\r\nconst PUSH_SCOPE_ID = Symbol((process.env.NODE_ENV !== 'production') ? `pushScopeId` : ``);\r\nconst POP_SCOPE_ID = Symbol((process.env.NODE_ENV !== 'production') ? `popScopeId` : ``);\r\nconst WITH_CTX = Symbol((process.env.NODE_ENV !== 'production') ? `withCtx` : ``);\r\nconst UNREF = Symbol((process.env.NODE_ENV !== 'production') ? `unref` : ``);\r\nconst IS_REF = Symbol((process.env.NODE_ENV !== 'production') ? `isRef` : ``);\r\nconst WITH_MEMO = Symbol((process.env.NODE_ENV !== 'production') ? `withMemo` : ``);\r\nconst IS_MEMO_SAME = Symbol((process.env.NODE_ENV !== 'production') ? `isMemoSame` : ``);\r\n// Name mapping for runtime helpers that need to be imported from 'vue' in\r\n// generated code. Make sure these are correctly exported in the runtime!\r\n// Using `any` here because TS doesn't allow symbols as index type.\r\nconst helperNameMap = {\r\n    [FRAGMENT]: `Fragment`,\r\n    [TELEPORT]: `Teleport`,\r\n    [SUSPENSE]: `Suspense`,\r\n    [KEEP_ALIVE]: `KeepAlive`,\r\n    [BASE_TRANSITION]: `BaseTransition`,\r\n    [OPEN_BLOCK]: `openBlock`,\r\n    [CREATE_BLOCK]: `createBlock`,\r\n    [CREATE_ELEMENT_BLOCK]: `createElementBlock`,\r\n    [CREATE_VNODE]: `createVNode`,\r\n    [CREATE_ELEMENT_VNODE]: `createElementVNode`,\r\n    [CREATE_COMMENT]: `createCommentVNode`,\r\n    [CREATE_TEXT]: `createTextVNode`,\r\n    [CREATE_STATIC]: `createStaticVNode`,\r\n    [RESOLVE_COMPONENT]: `resolveComponent`,\r\n    [RESOLVE_DYNAMIC_COMPONENT]: `resolveDynamicComponent`,\r\n    [RESOLVE_DIRECTIVE]: `resolveDirective`,\r\n    [RESOLVE_FILTER]: `resolveFilter`,\r\n    [WITH_DIRECTIVES]: `withDirectives`,\r\n    [RENDER_LIST]: `renderList`,\r\n    [RENDER_SLOT]: `renderSlot`,\r\n    [CREATE_SLOTS]: `createSlots`,\r\n    [TO_DISPLAY_STRING]: `toDisplayString`,\r\n    [MERGE_PROPS]: `mergeProps`,\r\n    [NORMALIZE_CLASS]: `normalizeClass`,\r\n    [NORMALIZE_STYLE]: `normalizeStyle`,\r\n    [NORMALIZE_PROPS]: `normalizeProps`,\r\n    [GUARD_REACTIVE_PROPS]: `guardReactiveProps`,\r\n    [TO_HANDLERS]: `toHandlers`,\r\n    [CAMELIZE]: `camelize`,\r\n    [CAPITALIZE]: `capitalize`,\r\n    [TO_HANDLER_KEY]: `toHandlerKey`,\r\n    [SET_BLOCK_TRACKING]: `setBlockTracking`,\r\n    [PUSH_SCOPE_ID]: `pushScopeId`,\r\n    [POP_SCOPE_ID]: `popScopeId`,\r\n    [WITH_CTX]: `withCtx`,\r\n    [UNREF]: `unref`,\r\n    [IS_REF]: `isRef`,\r\n    [WITH_MEMO]: `withMemo`,\r\n    [IS_MEMO_SAME]: `isMemoSame`\r\n};\r\nfunction registerRuntimeHelpers(helpers) {\r\n    Object.getOwnPropertySymbols(helpers).forEach(s => {\r\n        helperNameMap[s] = helpers[s];\r\n    });\r\n}\n\n// AST Utilities ---------------------------------------------------------------\r\n// Some expressions, e.g. sequence and conditional expressions, are never\r\n// associated with template nodes, so their source locations are just a stub.\r\n// Container types like CompoundExpression also don't need a real location.\r\nconst locStub = {\r\n    source: '',\r\n    start: { line: 1, column: 1, offset: 0 },\r\n    end: { line: 1, column: 1, offset: 0 }\r\n};\r\nfunction createRoot(children, loc = locStub) {\r\n    return {\r\n        type: 0 /* ROOT */,\r\n        children,\r\n        helpers: [],\r\n        components: [],\r\n        directives: [],\r\n        hoists: [],\r\n        imports: [],\r\n        cached: 0,\r\n        temps: 0,\r\n        codegenNode: undefined,\r\n        loc\r\n    };\r\n}\r\nfunction createVNodeCall(context, tag, props, children, patchFlag, dynamicProps, directives, isBlock = false, disableTracking = false, isComponent = false, loc = locStub) {\r\n    if (context) {\r\n        if (isBlock) {\r\n            context.helper(OPEN_BLOCK);\r\n            context.helper(getVNodeBlockHelper(context.inSSR, isComponent));\r\n        }\r\n        else {\r\n            context.helper(getVNodeHelper(context.inSSR, isComponent));\r\n        }\r\n        if (directives) {\r\n            context.helper(WITH_DIRECTIVES);\r\n        }\r\n    }\r\n    return {\r\n        type: 13 /* VNODE_CALL */,\r\n        tag,\r\n        props,\r\n        children,\r\n        patchFlag,\r\n        dynamicProps,\r\n        directives,\r\n        isBlock,\r\n        disableTracking,\r\n        isComponent,\r\n        loc\r\n    };\r\n}\r\nfunction createArrayExpression(elements, loc = locStub) {\r\n    return {\r\n        type: 17 /* JS_ARRAY_EXPRESSION */,\r\n        loc,\r\n        elements\r\n    };\r\n}\r\nfunction createObjectExpression(properties, loc = locStub) {\r\n    return {\r\n        type: 15 /* JS_OBJECT_EXPRESSION */,\r\n        loc,\r\n        properties\r\n    };\r\n}\r\nfunction createObjectProperty(key, value) {\r\n    return {\r\n        type: 16 /* JS_PROPERTY */,\r\n        loc: locStub,\r\n        key: isString(key) ? createSimpleExpression(key, true) : key,\r\n        value\r\n    };\r\n}\r\nfunction createSimpleExpression(content, isStatic = false, loc = locStub, constType = 0 /* NOT_CONSTANT */) {\r\n    return {\r\n        type: 4 /* SIMPLE_EXPRESSION */,\r\n        loc,\r\n        content,\r\n        isStatic,\r\n        constType: isStatic ? 3 /* CAN_STRINGIFY */ : constType\r\n    };\r\n}\r\nfunction createInterpolation(content, loc) {\r\n    return {\r\n        type: 5 /* INTERPOLATION */,\r\n        loc,\r\n        content: isString(content)\r\n            ? createSimpleExpression(content, false, loc)\r\n            : content\r\n    };\r\n}\r\nfunction createCompoundExpression(children, loc = locStub) {\r\n    return {\r\n        type: 8 /* COMPOUND_EXPRESSION */,\r\n        loc,\r\n        children\r\n    };\r\n}\r\nfunction createCallExpression(callee, args = [], loc = locStub) {\r\n    return {\r\n        type: 14 /* JS_CALL_EXPRESSION */,\r\n        loc,\r\n        callee,\r\n        arguments: args\r\n    };\r\n}\r\nfunction createFunctionExpression(params, returns = undefined, newline = false, isSlot = false, loc = locStub) {\r\n    return {\r\n        type: 18 /* JS_FUNCTION_EXPRESSION */,\r\n        params,\r\n        returns,\r\n        newline,\r\n        isSlot,\r\n        loc\r\n    };\r\n}\r\nfunction createConditionalExpression(test, consequent, alternate, newline = true) {\r\n    return {\r\n        type: 19 /* JS_CONDITIONAL_EXPRESSION */,\r\n        test,\r\n        consequent,\r\n        alternate,\r\n        newline,\r\n        loc: locStub\r\n    };\r\n}\r\nfunction createCacheExpression(index, value, isVNode = false) {\r\n    return {\r\n        type: 20 /* JS_CACHE_EXPRESSION */,\r\n        index,\r\n        value,\r\n        isVNode,\r\n        loc: locStub\r\n    };\r\n}\r\nfunction createBlockStatement(body) {\r\n    return {\r\n        type: 21 /* JS_BLOCK_STATEMENT */,\r\n        body,\r\n        loc: locStub\r\n    };\r\n}\r\nfunction createTemplateLiteral(elements) {\r\n    return {\r\n        type: 22 /* JS_TEMPLATE_LITERAL */,\r\n        elements,\r\n        loc: locStub\r\n    };\r\n}\r\nfunction createIfStatement(test, consequent, alternate) {\r\n    return {\r\n        type: 23 /* JS_IF_STATEMENT */,\r\n        test,\r\n        consequent,\r\n        alternate,\r\n        loc: locStub\r\n    };\r\n}\r\nfunction createAssignmentExpression(left, right) {\r\n    return {\r\n        type: 24 /* JS_ASSIGNMENT_EXPRESSION */,\r\n        left,\r\n        right,\r\n        loc: locStub\r\n    };\r\n}\r\nfunction createSequenceExpression(expressions) {\r\n    return {\r\n        type: 25 /* JS_SEQUENCE_EXPRESSION */,\r\n        expressions,\r\n        loc: locStub\r\n    };\r\n}\r\nfunction createReturnStatement(returns) {\r\n    return {\r\n        type: 26 /* JS_RETURN_STATEMENT */,\r\n        returns,\r\n        loc: locStub\r\n    };\r\n}\n\nconst isStaticExp = (p) => p.type === 4 /* SIMPLE_EXPRESSION */ && p.isStatic;\r\nconst isBuiltInType = (tag, expected) => tag === expected || tag === hyphenate(expected);\r\nfunction isCoreComponent(tag) {\r\n    if (isBuiltInType(tag, 'Teleport')) {\r\n        return TELEPORT;\r\n    }\r\n    else if (isBuiltInType(tag, 'Suspense')) {\r\n        return SUSPENSE;\r\n    }\r\n    else if (isBuiltInType(tag, 'KeepAlive')) {\r\n        return KEEP_ALIVE;\r\n    }\r\n    else if (isBuiltInType(tag, 'BaseTransition')) {\r\n        return BASE_TRANSITION;\r\n    }\r\n}\r\nconst nonIdentifierRE = /^\\d|[^\\$\\w]/;\r\nconst isSimpleIdentifier = (name) => !nonIdentifierRE.test(name);\r\nconst validFirstIdentCharRE = /[A-Za-z_$\\xA0-\\uFFFF]/;\r\nconst validIdentCharRE = /[\\.\\?\\w$\\xA0-\\uFFFF]/;\r\nconst whitespaceRE = /\\s+[.[]\\s*|\\s*[.[]\\s+/g;\r\n/**\r\n * Simple lexer to check if an expression is a member expression. This is\r\n * lax and only checks validity at the root level (i.e. does not validate exps\r\n * inside square brackets), but it's ok since these are only used on template\r\n * expressions and false positives are invalid expressions in the first place.\r\n */\r\nconst isMemberExpressionBrowser = (path) => {\r\n    // remove whitespaces around . or [ first\r\n    path = path.trim().replace(whitespaceRE, s => s.trim());\r\n    let state = 0 /* inMemberExp */;\r\n    let stateStack = [];\r\n    let currentOpenBracketCount = 0;\r\n    let currentOpenParensCount = 0;\r\n    let currentStringType = null;\r\n    for (let i = 0; i < path.length; i++) {\r\n        const char = path.charAt(i);\r\n        switch (state) {\r\n            case 0 /* inMemberExp */:\r\n                if (char === '[') {\r\n                    stateStack.push(state);\r\n                    state = 1 /* inBrackets */;\r\n                    currentOpenBracketCount++;\r\n                }\r\n                else if (char === '(') {\r\n                    stateStack.push(state);\r\n                    state = 2 /* inParens */;\r\n                    currentOpenParensCount++;\r\n                }\r\n                else if (!(i === 0 ? validFirstIdentCharRE : validIdentCharRE).test(char)) {\r\n                    return false;\r\n                }\r\n                break;\r\n            case 1 /* inBrackets */:\r\n                if (char === `'` || char === `\"` || char === '`') {\r\n                    stateStack.push(state);\r\n                    state = 3 /* inString */;\r\n                    currentStringType = char;\r\n                }\r\n                else if (char === `[`) {\r\n                    currentOpenBracketCount++;\r\n                }\r\n                else if (char === `]`) {\r\n                    if (!--currentOpenBracketCount) {\r\n                        state = stateStack.pop();\r\n                    }\r\n                }\r\n                break;\r\n            case 2 /* inParens */:\r\n                if (char === `'` || char === `\"` || char === '`') {\r\n                    stateStack.push(state);\r\n                    state = 3 /* inString */;\r\n                    currentStringType = char;\r\n                }\r\n                else if (char === `(`) {\r\n                    currentOpenParensCount++;\r\n                }\r\n                else if (char === `)`) {\r\n                    // if the exp ends as a call then it should not be considered valid\r\n                    if (i === path.length - 1) {\r\n                        return false;\r\n                    }\r\n                    if (!--currentOpenParensCount) {\r\n                        state = stateStack.pop();\r\n                    }\r\n                }\r\n                break;\r\n            case 3 /* inString */:\r\n                if (char === currentStringType) {\r\n                    state = stateStack.pop();\r\n                    currentStringType = null;\r\n                }\r\n                break;\r\n        }\r\n    }\r\n    return !currentOpenBracketCount && !currentOpenParensCount;\r\n};\r\nconst isMemberExpressionNode = NOOP\r\n    ;\r\nconst isMemberExpression = isMemberExpressionBrowser\r\n    ;\r\nfunction getInnerRange(loc, offset, length) {\r\n    const source = loc.source.slice(offset, offset + length);\r\n    const newLoc = {\r\n        source,\r\n        start: advancePositionWithClone(loc.start, loc.source, offset),\r\n        end: loc.end\r\n    };\r\n    if (length != null) {\r\n        newLoc.end = advancePositionWithClone(loc.start, loc.source, offset + length);\r\n    }\r\n    return newLoc;\r\n}\r\nfunction advancePositionWithClone(pos, source, numberOfCharacters = source.length) {\r\n    return advancePositionWithMutation(extend({}, pos), source, numberOfCharacters);\r\n}\r\n// advance by mutation without cloning (for performance reasons), since this\r\n// gets called a lot in the parser\r\nfunction advancePositionWithMutation(pos, source, numberOfCharacters = source.length) {\r\n    let linesCount = 0;\r\n    let lastNewLinePos = -1;\r\n    for (let i = 0; i < numberOfCharacters; i++) {\r\n        if (source.charCodeAt(i) === 10 /* newline char code */) {\r\n            linesCount++;\r\n            lastNewLinePos = i;\r\n        }\r\n    }\r\n    pos.offset += numberOfCharacters;\r\n    pos.line += linesCount;\r\n    pos.column =\r\n        lastNewLinePos === -1\r\n            ? pos.column + numberOfCharacters\r\n            : numberOfCharacters - lastNewLinePos;\r\n    return pos;\r\n}\r\nfunction assert(condition, msg) {\r\n    /* istanbul ignore if */\r\n    if (!condition) {\r\n        throw new Error(msg || `unexpected compiler condition`);\r\n    }\r\n}\r\nfunction findDir(node, name, allowEmpty = false) {\r\n    for (let i = 0; i < node.props.length; i++) {\r\n        const p = node.props[i];\r\n        if (p.type === 7 /* DIRECTIVE */ &&\r\n            (allowEmpty || p.exp) &&\r\n            (isString(name) ? p.name === name : name.test(p.name))) {\r\n            return p;\r\n        }\r\n    }\r\n}\r\nfunction findProp(node, name, dynamicOnly = false, allowEmpty = false) {\r\n    for (let i = 0; i < node.props.length; i++) {\r\n        const p = node.props[i];\r\n        if (p.type === 6 /* ATTRIBUTE */) {\r\n            if (dynamicOnly)\r\n                continue;\r\n            if (p.name === name && (p.value || allowEmpty)) {\r\n                return p;\r\n            }\r\n        }\r\n        else if (p.name === 'bind' &&\r\n            (p.exp || allowEmpty) &&\r\n            isStaticArgOf(p.arg, name)) {\r\n            return p;\r\n        }\r\n    }\r\n}\r\nfunction isStaticArgOf(arg, name) {\r\n    return !!(arg && isStaticExp(arg) && arg.content === name);\r\n}\r\nfunction hasDynamicKeyVBind(node) {\r\n    return node.props.some(p => p.type === 7 /* DIRECTIVE */ &&\r\n        p.name === 'bind' &&\r\n        (!p.arg || // v-bind=\"obj\"\r\n            p.arg.type !== 4 /* SIMPLE_EXPRESSION */ || // v-bind:[_ctx.foo]\r\n            !p.arg.isStatic) // v-bind:[foo]\r\n    );\r\n}\r\nfunction isText(node) {\r\n    return node.type === 5 /* INTERPOLATION */ || node.type === 2 /* TEXT */;\r\n}\r\nfunction isVSlot(p) {\r\n    return p.type === 7 /* DIRECTIVE */ && p.name === 'slot';\r\n}\r\nfunction isTemplateNode(node) {\r\n    return (node.type === 1 /* ELEMENT */ && node.tagType === 3 /* TEMPLATE */);\r\n}\r\nfunction isSlotOutlet(node) {\r\n    return node.type === 1 /* ELEMENT */ && node.tagType === 2 /* SLOT */;\r\n}\r\nfunction getVNodeHelper(ssr, isComponent) {\r\n    return ssr || isComponent ? CREATE_VNODE : CREATE_ELEMENT_VNODE;\r\n}\r\nfunction getVNodeBlockHelper(ssr, isComponent) {\r\n    return ssr || isComponent ? CREATE_BLOCK : CREATE_ELEMENT_BLOCK;\r\n}\r\nconst propsHelperSet = new Set([NORMALIZE_PROPS, GUARD_REACTIVE_PROPS]);\r\nfunction getUnnormalizedProps(props, callPath = []) {\r\n    if (props &&\r\n        !isString(props) &&\r\n        props.type === 14 /* JS_CALL_EXPRESSION */) {\r\n        const callee = props.callee;\r\n        if (!isString(callee) && propsHelperSet.has(callee)) {\r\n            return getUnnormalizedProps(props.arguments[0], callPath.concat(props));\r\n        }\r\n    }\r\n    return [props, callPath];\r\n}\r\nfunction injectProp(node, prop, context) {\r\n    let propsWithInjection;\r\n    /**\r\n     * 1. mergeProps(...)\r\n     * 2. toHandlers(...)\r\n     * 3. normalizeProps(...)\r\n     * 4. normalizeProps(guardReactiveProps(...))\r\n     *\r\n     * we need to get the real props before normalization\r\n     */\r\n    let props = node.type === 13 /* VNODE_CALL */ ? node.props : node.arguments[2];\r\n    let callPath = [];\r\n    let parentCall;\r\n    if (props &&\r\n        !isString(props) &&\r\n        props.type === 14 /* JS_CALL_EXPRESSION */) {\r\n        const ret = getUnnormalizedProps(props);\r\n        props = ret[0];\r\n        callPath = ret[1];\r\n        parentCall = callPath[callPath.length - 1];\r\n    }\r\n    if (props == null || isString(props)) {\r\n        propsWithInjection = createObjectExpression([prop]);\r\n    }\r\n    else if (props.type === 14 /* JS_CALL_EXPRESSION */) {\r\n        // merged props... add ours\r\n        // only inject key to object literal if it's the first argument so that\r\n        // if doesn't override user provided keys\r\n        const first = props.arguments[0];\r\n        if (!isString(first) && first.type === 15 /* JS_OBJECT_EXPRESSION */) {\r\n            first.properties.unshift(prop);\r\n        }\r\n        else {\r\n            if (props.callee === TO_HANDLERS) {\r\n                // #2366\r\n                propsWithInjection = createCallExpression(context.helper(MERGE_PROPS), [\r\n                    createObjectExpression([prop]),\r\n                    props\r\n                ]);\r\n            }\r\n            else {\r\n                props.arguments.unshift(createObjectExpression([prop]));\r\n            }\r\n        }\r\n        !propsWithInjection && (propsWithInjection = props);\r\n    }\r\n    else if (props.type === 15 /* JS_OBJECT_EXPRESSION */) {\r\n        let alreadyExists = false;\r\n        // check existing key to avoid overriding user provided keys\r\n        if (prop.key.type === 4 /* SIMPLE_EXPRESSION */) {\r\n            const propKeyName = prop.key.content;\r\n            alreadyExists = props.properties.some(p => p.key.type === 4 /* SIMPLE_EXPRESSION */ &&\r\n                p.key.content === propKeyName);\r\n        }\r\n        if (!alreadyExists) {\r\n            props.properties.unshift(prop);\r\n        }\r\n        propsWithInjection = props;\r\n    }\r\n    else {\r\n        // single v-bind with expression, return a merged replacement\r\n        propsWithInjection = createCallExpression(context.helper(MERGE_PROPS), [\r\n            createObjectExpression([prop]),\r\n            props\r\n        ]);\r\n        // in the case of nested helper call, e.g. `normalizeProps(guardReactiveProps(props))`,\r\n        // it will be rewritten as `normalizeProps(mergeProps({ key: 0 }, props))`,\r\n        // the `guardReactiveProps` will no longer be needed\r\n        if (parentCall && parentCall.callee === GUARD_REACTIVE_PROPS) {\r\n            parentCall = callPath[callPath.length - 2];\r\n        }\r\n    }\r\n    if (node.type === 13 /* VNODE_CALL */) {\r\n        if (parentCall) {\r\n            parentCall.arguments[0] = propsWithInjection;\r\n        }\r\n        else {\r\n            node.props = propsWithInjection;\r\n        }\r\n    }\r\n    else {\r\n        if (parentCall) {\r\n            parentCall.arguments[0] = propsWithInjection;\r\n        }\r\n        else {\r\n            node.arguments[2] = propsWithInjection;\r\n        }\r\n    }\r\n}\r\nfunction toValidAssetId(name, type) {\r\n    // see issue#4422, we need adding identifier on validAssetId if variable `name` has specific character\r\n    return `_${type}_${name.replace(/[^\\w]/g, (searchValue, replaceValue) => {\r\n        return searchValue === '-' ? '_' : name.charCodeAt(replaceValue).toString();\r\n    })}`;\r\n}\r\n// Check if a node contains expressions that reference current context scope ids\r\nfunction hasScopeRef(node, ids) {\r\n    if (!node || Object.keys(ids).length === 0) {\r\n        return false;\r\n    }\r\n    switch (node.type) {\r\n        case 1 /* ELEMENT */:\r\n            for (let i = 0; i < node.props.length; i++) {\r\n                const p = node.props[i];\r\n                if (p.type === 7 /* DIRECTIVE */ &&\r\n                    (hasScopeRef(p.arg, ids) || hasScopeRef(p.exp, ids))) {\r\n                    return true;\r\n                }\r\n            }\r\n            return node.children.some(c => hasScopeRef(c, ids));\r\n        case 11 /* FOR */:\r\n            if (hasScopeRef(node.source, ids)) {\r\n                return true;\r\n            }\r\n            return node.children.some(c => hasScopeRef(c, ids));\r\n        case 9 /* IF */:\r\n            return node.branches.some(b => hasScopeRef(b, ids));\r\n        case 10 /* IF_BRANCH */:\r\n            if (hasScopeRef(node.condition, ids)) {\r\n                return true;\r\n            }\r\n            return node.children.some(c => hasScopeRef(c, ids));\r\n        case 4 /* SIMPLE_EXPRESSION */:\r\n            return (!node.isStatic &&\r\n                isSimpleIdentifier(node.content) &&\r\n                !!ids[node.content]);\r\n        case 8 /* COMPOUND_EXPRESSION */:\r\n            return node.children.some(c => isObject(c) && hasScopeRef(c, ids));\r\n        case 5 /* INTERPOLATION */:\r\n        case 12 /* TEXT_CALL */:\r\n            return hasScopeRef(node.content, ids);\r\n        case 2 /* TEXT */:\r\n        case 3 /* COMMENT */:\r\n            return false;\r\n        default:\r\n            if ((process.env.NODE_ENV !== 'production')) ;\r\n            return false;\r\n    }\r\n}\r\nfunction getMemoedVNodeCall(node) {\r\n    if (node.type === 14 /* JS_CALL_EXPRESSION */ && node.callee === WITH_MEMO) {\r\n        return node.arguments[1].returns;\r\n    }\r\n    else {\r\n        return node;\r\n    }\r\n}\r\nfunction makeBlock(node, { helper, removeHelper, inSSR }) {\r\n    if (!node.isBlock) {\r\n        node.isBlock = true;\r\n        removeHelper(getVNodeHelper(inSSR, node.isComponent));\r\n        helper(OPEN_BLOCK);\r\n        helper(getVNodeBlockHelper(inSSR, node.isComponent));\r\n    }\r\n}\n\nconst deprecationData = {\r\n    [\"COMPILER_IS_ON_ELEMENT\" /* COMPILER_IS_ON_ELEMENT */]: {\r\n        message: `Platform-native elements with \"is\" prop will no longer be ` +\r\n            `treated as components in Vue 3 unless the \"is\" value is explicitly ` +\r\n            `prefixed with \"vue:\".`,\r\n        link: `https://v3-migration.vuejs.org/breaking-changes/custom-elements-interop.html`\r\n    },\r\n    [\"COMPILER_V_BIND_SYNC\" /* COMPILER_V_BIND_SYNC */]: {\r\n        message: key => `.sync modifier for v-bind has been removed. Use v-model with ` +\r\n            `argument instead. \\`v-bind:${key}.sync\\` should be changed to ` +\r\n            `\\`v-model:${key}\\`.`,\r\n        link: `https://v3-migration.vuejs.org/breaking-changes/v-model.html`\r\n    },\r\n    [\"COMPILER_V_BIND_PROP\" /* COMPILER_V_BIND_PROP */]: {\r\n        message: `.prop modifier for v-bind has been removed and no longer necessary. ` +\r\n            `Vue 3 will automatically set a binding as DOM property when appropriate.`\r\n    },\r\n    [\"COMPILER_V_BIND_OBJECT_ORDER\" /* COMPILER_V_BIND_OBJECT_ORDER */]: {\r\n        message: `v-bind=\"obj\" usage is now order sensitive and behaves like JavaScript ` +\r\n            `object spread: it will now overwrite an existing non-mergeable attribute ` +\r\n            `that appears before v-bind in the case of conflict. ` +\r\n            `To retain 2.x behavior, move v-bind to make it the first attribute. ` +\r\n            `You can also suppress this warning if the usage is intended.`,\r\n        link: `https://v3-migration.vuejs.org/breaking-changes/v-bind.html`\r\n    },\r\n    [\"COMPILER_V_ON_NATIVE\" /* COMPILER_V_ON_NATIVE */]: {\r\n        message: `.native modifier for v-on has been removed as is no longer necessary.`,\r\n        link: `https://v3-migration.vuejs.org/breaking-changes/v-on-native-modifier-removed.html`\r\n    },\r\n    [\"COMPILER_V_IF_V_FOR_PRECEDENCE\" /* COMPILER_V_IF_V_FOR_PRECEDENCE */]: {\r\n        message: `v-if / v-for precedence when used on the same element has changed ` +\r\n            `in Vue 3: v-if now takes higher precedence and will no longer have ` +\r\n            `access to v-for scope variables. It is best to avoid the ambiguity ` +\r\n            `with <template> tags or use a computed property that filters v-for ` +\r\n            `data source.`,\r\n        link: `https://v3-migration.vuejs.org/breaking-changes/v-if-v-for.html`\r\n    },\r\n    [\"COMPILER_NATIVE_TEMPLATE\" /* COMPILER_NATIVE_TEMPLATE */]: {\r\n        message: `<template> with no special directives will render as a native template ` +\r\n            `element instead of its inner content in Vue 3.`\r\n    },\r\n    [\"COMPILER_INLINE_TEMPLATE\" /* COMPILER_INLINE_TEMPLATE */]: {\r\n        message: `\"inline-template\" has been removed in Vue 3.`,\r\n        link: `https://v3-migration.vuejs.org/breaking-changes/inline-template-attribute.html`\r\n    },\r\n    [\"COMPILER_FILTER\" /* COMPILER_FILTERS */]: {\r\n        message: `filters have been removed in Vue 3. ` +\r\n            `The \"|\" symbol will be treated as native JavaScript bitwise OR operator. ` +\r\n            `Use method calls or computed properties instead.`,\r\n        link: `https://v3-migration.vuejs.org/breaking-changes/filters.html`\r\n    }\r\n};\r\nfunction getCompatValue(key, context) {\r\n    const config = context.options\r\n        ? context.options.compatConfig\r\n        : context.compatConfig;\r\n    const value = config && config[key];\r\n    if (key === 'MODE') {\r\n        return value || 3; // compiler defaults to v3 behavior\r\n    }\r\n    else {\r\n        return value;\r\n    }\r\n}\r\nfunction isCompatEnabled(key, context) {\r\n    const mode = getCompatValue('MODE', context);\r\n    const value = getCompatValue(key, context);\r\n    // in v3 mode, only enable if explicitly set to true\r\n    // otherwise enable for any non-false value\r\n    return mode === 3 ? value === true : value !== false;\r\n}\r\nfunction checkCompatEnabled(key, context, loc, ...args) {\r\n    const enabled = isCompatEnabled(key, context);\r\n    if ((process.env.NODE_ENV !== 'production') && enabled) {\r\n        warnDeprecation(key, context, loc, ...args);\r\n    }\r\n    return enabled;\r\n}\r\nfunction warnDeprecation(key, context, loc, ...args) {\r\n    const val = getCompatValue(key, context);\r\n    if (val === 'suppress-warning') {\r\n        return;\r\n    }\r\n    const { message, link } = deprecationData[key];\r\n    const msg = `(deprecation ${key}) ${typeof message === 'function' ? message(...args) : message}${link ? `\\n  Details: ${link}` : ``}`;\r\n    const err = new SyntaxError(msg);\r\n    err.code = key;\r\n    if (loc)\r\n        err.loc = loc;\r\n    context.onWarn(err);\r\n}\n\n// The default decoder only provides escapes for characters reserved as part of\r\n// the template syntax, and is only used if the custom renderer did not provide\r\n// a platform-specific decoder.\r\nconst decodeRE = /&(gt|lt|amp|apos|quot);/g;\r\nconst decodeMap = {\r\n    gt: '>',\r\n    lt: '<',\r\n    amp: '&',\r\n    apos: \"'\",\r\n    quot: '\"'\r\n};\r\nconst defaultParserOptions = {\r\n    delimiters: [`{{`, `}}`],\r\n    getNamespace: () => 0 /* HTML */,\r\n    getTextMode: () => 0 /* DATA */,\r\n    isVoidTag: NO,\r\n    isPreTag: NO,\r\n    isCustomElement: NO,\r\n    decodeEntities: (rawText) => rawText.replace(decodeRE, (_, p1) => decodeMap[p1]),\r\n    onError: defaultOnError,\r\n    onWarn: defaultOnWarn,\r\n    comments: (process.env.NODE_ENV !== 'production')\r\n};\r\nfunction baseParse(content, options = {}) {\r\n    const context = createParserContext(content, options);\r\n    const start = getCursor(context);\r\n    return createRoot(parseChildren(context, 0 /* DATA */, []), getSelection(context, start));\r\n}\r\nfunction createParserContext(content, rawOptions) {\r\n    const options = extend({}, defaultParserOptions);\r\n    let key;\r\n    for (key in rawOptions) {\r\n        // @ts-ignore\r\n        options[key] =\r\n            rawOptions[key] === undefined\r\n                ? defaultParserOptions[key]\r\n                : rawOptions[key];\r\n    }\r\n    return {\r\n        options,\r\n        column: 1,\r\n        line: 1,\r\n        offset: 0,\r\n        originalSource: content,\r\n        source: content,\r\n        inPre: false,\r\n        inVPre: false,\r\n        onWarn: options.onWarn\r\n    };\r\n}\r\nfunction parseChildren(context, mode, ancestors) {\r\n    const parent = last(ancestors);\r\n    const ns = parent ? parent.ns : 0 /* HTML */;\r\n    const nodes = [];\r\n    while (!isEnd(context, mode, ancestors)) {\r\n        const s = context.source;\r\n        let node = undefined;\r\n        if (mode === 0 /* DATA */ || mode === 1 /* RCDATA */) {\r\n            if (!context.inVPre && startsWith(s, context.options.delimiters[0])) {\r\n                // '{{'\r\n                node = parseInterpolation(context, mode);\r\n            }\r\n            else if (mode === 0 /* DATA */ && s[0] === '<') {\r\n                // https://html.spec.whatwg.org/multipage/parsing.html#tag-open-state\r\n                if (s.length === 1) {\r\n                    emitError(context, 5 /* EOF_BEFORE_TAG_NAME */, 1);\r\n                }\r\n                else if (s[1] === '!') {\r\n                    // https://html.spec.whatwg.org/multipage/parsing.html#markup-declaration-open-state\r\n                    if (startsWith(s, '<!--')) {\r\n                        node = parseComment(context);\r\n                    }\r\n                    else if (startsWith(s, '<!DOCTYPE')) {\r\n                        // Ignore DOCTYPE by a limitation.\r\n                        node = parseBogusComment(context);\r\n                    }\r\n                    else if (startsWith(s, '<![CDATA[')) {\r\n                        if (ns !== 0 /* HTML */) {\r\n                            node = parseCDATA(context, ancestors);\r\n                        }\r\n                        else {\r\n                            emitError(context, 1 /* CDATA_IN_HTML_CONTENT */);\r\n                            node = parseBogusComment(context);\r\n                        }\r\n                    }\r\n                    else {\r\n                        emitError(context, 11 /* INCORRECTLY_OPENED_COMMENT */);\r\n                        node = parseBogusComment(context);\r\n                    }\r\n                }\r\n                else if (s[1] === '/') {\r\n                    // https://html.spec.whatwg.org/multipage/parsing.html#end-tag-open-state\r\n                    if (s.length === 2) {\r\n                        emitError(context, 5 /* EOF_BEFORE_TAG_NAME */, 2);\r\n                    }\r\n                    else if (s[2] === '>') {\r\n                        emitError(context, 14 /* MISSING_END_TAG_NAME */, 2);\r\n                        advanceBy(context, 3);\r\n                        continue;\r\n                    }\r\n                    else if (/[a-z]/i.test(s[2])) {\r\n                        emitError(context, 23 /* X_INVALID_END_TAG */);\r\n                        parseTag(context, 1 /* End */, parent);\r\n                        continue;\r\n                    }\r\n                    else {\r\n                        emitError(context, 12 /* INVALID_FIRST_CHARACTER_OF_TAG_NAME */, 2);\r\n                        node = parseBogusComment(context);\r\n                    }\r\n                }\r\n                else if (/[a-z]/i.test(s[1])) {\r\n                    node = parseElement(context, ancestors);\r\n                    // 2.x <template> with no directive compat\r\n                    if (isCompatEnabled(\"COMPILER_NATIVE_TEMPLATE\" /* COMPILER_NATIVE_TEMPLATE */, context) &&\r\n                        node &&\r\n                        node.tag === 'template' &&\r\n                        !node.props.some(p => p.type === 7 /* DIRECTIVE */ &&\r\n                            isSpecialTemplateDirective(p.name))) {\r\n                        (process.env.NODE_ENV !== 'production') &&\r\n                            warnDeprecation(\"COMPILER_NATIVE_TEMPLATE\" /* COMPILER_NATIVE_TEMPLATE */, context, node.loc);\r\n                        node = node.children;\r\n                    }\r\n                }\r\n                else if (s[1] === '?') {\r\n                    emitError(context, 21 /* UNEXPECTED_QUESTION_MARK_INSTEAD_OF_TAG_NAME */, 1);\r\n                    node = parseBogusComment(context);\r\n                }\r\n                else {\r\n                    emitError(context, 12 /* INVALID_FIRST_CHARACTER_OF_TAG_NAME */, 1);\r\n                }\r\n            }\r\n        }\r\n        if (!node) {\r\n            node = parseText(context, mode);\r\n        }\r\n        if (isArray(node)) {\r\n            for (let i = 0; i < node.length; i++) {\r\n                pushNode(nodes, node[i]);\r\n            }\r\n        }\r\n        else {\r\n            pushNode(nodes, node);\r\n        }\r\n    }\r\n    // Whitespace handling strategy like v2\r\n    let removedWhitespace = false;\r\n    if (mode !== 2 /* RAWTEXT */ && mode !== 1 /* RCDATA */) {\r\n        const shouldCondense = context.options.whitespace !== 'preserve';\r\n        for (let i = 0; i < nodes.length; i++) {\r\n            const node = nodes[i];\r\n            if (!context.inPre && node.type === 2 /* TEXT */) {\r\n                if (!/[^\\t\\r\\n\\f ]/.test(node.content)) {\r\n                    const prev = nodes[i - 1];\r\n                    const next = nodes[i + 1];\r\n                    // Remove if:\r\n                    // - the whitespace is the first or last node, or:\r\n                    // - (condense mode) the whitespace is adjacent to a comment, or:\r\n                    // - (condense mode) the whitespace is between two elements AND contains newline\r\n                    if (!prev ||\r\n                        !next ||\r\n                        (shouldCondense &&\r\n                            (prev.type === 3 /* COMMENT */ ||\r\n                                next.type === 3 /* COMMENT */ ||\r\n                                (prev.type === 1 /* ELEMENT */ &&\r\n                                    next.type === 1 /* ELEMENT */ &&\r\n                                    /[\\r\\n]/.test(node.content))))) {\r\n                        removedWhitespace = true;\r\n                        nodes[i] = null;\r\n                    }\r\n                    else {\r\n                        // Otherwise, the whitespace is condensed into a single space\r\n                        node.content = ' ';\r\n                    }\r\n                }\r\n                else if (shouldCondense) {\r\n                    // in condense mode, consecutive whitespaces in text are condensed\r\n                    // down to a single space.\r\n                    node.content = node.content.replace(/[\\t\\r\\n\\f ]+/g, ' ');\r\n                }\r\n            }\r\n            // Remove comment nodes if desired by configuration.\r\n            else if (node.type === 3 /* COMMENT */ && !context.options.comments) {\r\n                removedWhitespace = true;\r\n                nodes[i] = null;\r\n            }\r\n        }\r\n        if (context.inPre && parent && context.options.isPreTag(parent.tag)) {\r\n            // remove leading newline per html spec\r\n            // https://html.spec.whatwg.org/multipage/grouping-content.html#the-pre-element\r\n            const first = nodes[0];\r\n            if (first && first.type === 2 /* TEXT */) {\r\n                first.content = first.content.replace(/^\\r?\\n/, '');\r\n            }\r\n        }\r\n    }\r\n    return removedWhitespace ? nodes.filter(Boolean) : nodes;\r\n}\r\nfunction pushNode(nodes, node) {\r\n    if (node.type === 2 /* TEXT */) {\r\n        const prev = last(nodes);\r\n        // Merge if both this and the previous node are text and those are\r\n        // consecutive. This happens for cases like \"a < b\".\r\n        if (prev &&\r\n            prev.type === 2 /* TEXT */ &&\r\n            prev.loc.end.offset === node.loc.start.offset) {\r\n            prev.content += node.content;\r\n            prev.loc.end = node.loc.end;\r\n            prev.loc.source += node.loc.source;\r\n            return;\r\n        }\r\n    }\r\n    nodes.push(node);\r\n}\r\nfunction parseCDATA(context, ancestors) {\r\n    advanceBy(context, 9);\r\n    const nodes = parseChildren(context, 3 /* CDATA */, ancestors);\r\n    if (context.source.length === 0) {\r\n        emitError(context, 6 /* EOF_IN_CDATA */);\r\n    }\r\n    else {\r\n        advanceBy(context, 3);\r\n    }\r\n    return nodes;\r\n}\r\nfunction parseComment(context) {\r\n    const start = getCursor(context);\r\n    let content;\r\n    // Regular comment.\r\n    const match = /--(\\!)?>/.exec(context.source);\r\n    if (!match) {\r\n        content = context.source.slice(4);\r\n        advanceBy(context, context.source.length);\r\n        emitError(context, 7 /* EOF_IN_COMMENT */);\r\n    }\r\n    else {\r\n        if (match.index <= 3) {\r\n            emitError(context, 0 /* ABRUPT_CLOSING_OF_EMPTY_COMMENT */);\r\n        }\r\n        if (match[1]) {\r\n            emitError(context, 10 /* INCORRECTLY_CLOSED_COMMENT */);\r\n        }\r\n        content = context.source.slice(4, match.index);\r\n        // Advancing with reporting nested comments.\r\n        const s = context.source.slice(0, match.index);\r\n        let prevIndex = 1, nestedIndex = 0;\r\n        while ((nestedIndex = s.indexOf('<!--', prevIndex)) !== -1) {\r\n            advanceBy(context, nestedIndex - prevIndex + 1);\r\n            if (nestedIndex + 4 < s.length) {\r\n                emitError(context, 16 /* NESTED_COMMENT */);\r\n            }\r\n            prevIndex = nestedIndex + 1;\r\n        }\r\n        advanceBy(context, match.index + match[0].length - prevIndex + 1);\r\n    }\r\n    return {\r\n        type: 3 /* COMMENT */,\r\n        content,\r\n        loc: getSelection(context, start)\r\n    };\r\n}\r\nfunction parseBogusComment(context) {\r\n    const start = getCursor(context);\r\n    const contentStart = context.source[1] === '?' ? 1 : 2;\r\n    let content;\r\n    const closeIndex = context.source.indexOf('>');\r\n    if (closeIndex === -1) {\r\n        content = context.source.slice(contentStart);\r\n        advanceBy(context, context.source.length);\r\n    }\r\n    else {\r\n        content = context.source.slice(contentStart, closeIndex);\r\n        advanceBy(context, closeIndex + 1);\r\n    }\r\n    return {\r\n        type: 3 /* COMMENT */,\r\n        content,\r\n        loc: getSelection(context, start)\r\n    };\r\n}\r\nfunction parseElement(context, ancestors) {\r\n    // Start tag.\r\n    const wasInPre = context.inPre;\r\n    const wasInVPre = context.inVPre;\r\n    const parent = last(ancestors);\r\n    const element = parseTag(context, 0 /* Start */, parent);\r\n    const isPreBoundary = context.inPre && !wasInPre;\r\n    const isVPreBoundary = context.inVPre && !wasInVPre;\r\n    if (element.isSelfClosing || context.options.isVoidTag(element.tag)) {\r\n        // #4030 self-closing <pre> tag\r\n        if (isPreBoundary) {\r\n            context.inPre = false;\r\n        }\r\n        if (isVPreBoundary) {\r\n            context.inVPre = false;\r\n        }\r\n        return element;\r\n    }\r\n    // Children.\r\n    ancestors.push(element);\r\n    const mode = context.options.getTextMode(element, parent);\r\n    const children = parseChildren(context, mode, ancestors);\r\n    ancestors.pop();\r\n    // 2.x inline-template compat\r\n    {\r\n        const inlineTemplateProp = element.props.find(p => p.type === 6 /* ATTRIBUTE */ && p.name === 'inline-template');\r\n        if (inlineTemplateProp &&\r\n            checkCompatEnabled(\"COMPILER_INLINE_TEMPLATE\" /* COMPILER_INLINE_TEMPLATE */, context, inlineTemplateProp.loc)) {\r\n            const loc = getSelection(context, element.loc.end);\r\n            inlineTemplateProp.value = {\r\n                type: 2 /* TEXT */,\r\n                content: loc.source,\r\n                loc\r\n            };\r\n        }\r\n    }\r\n    element.children = children;\r\n    // End tag.\r\n    if (startsWithEndTagOpen(context.source, element.tag)) {\r\n        parseTag(context, 1 /* End */, parent);\r\n    }\r\n    else {\r\n        emitError(context, 24 /* X_MISSING_END_TAG */, 0, element.loc.start);\r\n        if (context.source.length === 0 && element.tag.toLowerCase() === 'script') {\r\n            const first = children[0];\r\n            if (first && startsWith(first.loc.source, '<!--')) {\r\n                emitError(context, 8 /* EOF_IN_SCRIPT_HTML_COMMENT_LIKE_TEXT */);\r\n            }\r\n        }\r\n    }\r\n    element.loc = getSelection(context, element.loc.start);\r\n    if (isPreBoundary) {\r\n        context.inPre = false;\r\n    }\r\n    if (isVPreBoundary) {\r\n        context.inVPre = false;\r\n    }\r\n    return element;\r\n}\r\nconst isSpecialTemplateDirective = /*#__PURE__*/ makeMap(`if,else,else-if,for,slot`);\r\nfunction parseTag(context, type, parent) {\r\n    // Tag open.\r\n    const start = getCursor(context);\r\n    const match = /^<\\/?([a-z][^\\t\\r\\n\\f />]*)/i.exec(context.source);\r\n    const tag = match[1];\r\n    const ns = context.options.getNamespace(tag, parent);\r\n    advanceBy(context, match[0].length);\r\n    advanceSpaces(context);\r\n    // save current state in case we need to re-parse attributes with v-pre\r\n    const cursor = getCursor(context);\r\n    const currentSource = context.source;\r\n    // check <pre> tag\r\n    if (context.options.isPreTag(tag)) {\r\n        context.inPre = true;\r\n    }\r\n    // Attributes.\r\n    let props = parseAttributes(context, type);\r\n    // check v-pre\r\n    if (type === 0 /* Start */ &&\r\n        !context.inVPre &&\r\n        props.some(p => p.type === 7 /* DIRECTIVE */ && p.name === 'pre')) {\r\n        context.inVPre = true;\r\n        // reset context\r\n        extend(context, cursor);\r\n        context.source = currentSource;\r\n        // re-parse attrs and filter out v-pre itself\r\n        props = parseAttributes(context, type).filter(p => p.name !== 'v-pre');\r\n    }\r\n    // Tag close.\r\n    let isSelfClosing = false;\r\n    if (context.source.length === 0) {\r\n        emitError(context, 9 /* EOF_IN_TAG */);\r\n    }\r\n    else {\r\n        isSelfClosing = startsWith(context.source, '/>');\r\n        if (type === 1 /* End */ && isSelfClosing) {\r\n            emitError(context, 4 /* END_TAG_WITH_TRAILING_SOLIDUS */);\r\n        }\r\n        advanceBy(context, isSelfClosing ? 2 : 1);\r\n    }\r\n    if (type === 1 /* End */) {\r\n        return;\r\n    }\r\n    // 2.x deprecation checks\r\n    if ((process.env.NODE_ENV !== 'production') &&\r\n        isCompatEnabled(\"COMPILER_V_IF_V_FOR_PRECEDENCE\" /* COMPILER_V_IF_V_FOR_PRECEDENCE */, context)) {\r\n        let hasIf = false;\r\n        let hasFor = false;\r\n        for (let i = 0; i < props.length; i++) {\r\n            const p = props[i];\r\n            if (p.type === 7 /* DIRECTIVE */) {\r\n                if (p.name === 'if') {\r\n                    hasIf = true;\r\n                }\r\n                else if (p.name === 'for') {\r\n                    hasFor = true;\r\n                }\r\n            }\r\n            if (hasIf && hasFor) {\r\n                warnDeprecation(\"COMPILER_V_IF_V_FOR_PRECEDENCE\" /* COMPILER_V_IF_V_FOR_PRECEDENCE */, context, getSelection(context, start));\r\n                break;\r\n            }\r\n        }\r\n    }\r\n    let tagType = 0 /* ELEMENT */;\r\n    if (!context.inVPre) {\r\n        if (tag === 'slot') {\r\n            tagType = 2 /* SLOT */;\r\n        }\r\n        else if (tag === 'template') {\r\n            if (props.some(p => p.type === 7 /* DIRECTIVE */ && isSpecialTemplateDirective(p.name))) {\r\n                tagType = 3 /* TEMPLATE */;\r\n            }\r\n        }\r\n        else if (isComponent(tag, props, context)) {\r\n            tagType = 1 /* COMPONENT */;\r\n        }\r\n    }\r\n    return {\r\n        type: 1 /* ELEMENT */,\r\n        ns,\r\n        tag,\r\n        tagType,\r\n        props,\r\n        isSelfClosing,\r\n        children: [],\r\n        loc: getSelection(context, start),\r\n        codegenNode: undefined // to be created during transform phase\r\n    };\r\n}\r\nfunction isComponent(tag, props, context) {\r\n    const options = context.options;\r\n    if (options.isCustomElement(tag)) {\r\n        return false;\r\n    }\r\n    if (tag === 'component' ||\r\n        /^[A-Z]/.test(tag) ||\r\n        isCoreComponent(tag) ||\r\n        (options.isBuiltInComponent && options.isBuiltInComponent(tag)) ||\r\n        (options.isNativeTag && !options.isNativeTag(tag))) {\r\n        return true;\r\n    }\r\n    // at this point the tag should be a native tag, but check for potential \"is\"\r\n    // casting\r\n    for (let i = 0; i < props.length; i++) {\r\n        const p = props[i];\r\n        if (p.type === 6 /* ATTRIBUTE */) {\r\n            if (p.name === 'is' && p.value) {\r\n                if (p.value.content.startsWith('vue:')) {\r\n                    return true;\r\n                }\r\n                else if (checkCompatEnabled(\"COMPILER_IS_ON_ELEMENT\" /* COMPILER_IS_ON_ELEMENT */, context, p.loc)) {\r\n                    return true;\r\n                }\r\n            }\r\n        }\r\n        else {\r\n            // directive\r\n            // v-is (TODO Deprecate)\r\n            if (p.name === 'is') {\r\n                return true;\r\n            }\r\n            else if (\r\n            // :is on plain element - only treat as component in compat mode\r\n            p.name === 'bind' &&\r\n                isStaticArgOf(p.arg, 'is') &&\r\n                true &&\r\n                checkCompatEnabled(\"COMPILER_IS_ON_ELEMENT\" /* COMPILER_IS_ON_ELEMENT */, context, p.loc)) {\r\n                return true;\r\n            }\r\n        }\r\n    }\r\n}\r\nfunction parseAttributes(context, type) {\r\n    const props = [];\r\n    const attributeNames = new Set();\r\n    while (context.source.length > 0 &&\r\n        !startsWith(context.source, '>') &&\r\n        !startsWith(context.source, '/>')) {\r\n        if (startsWith(context.source, '/')) {\r\n            emitError(context, 22 /* UNEXPECTED_SOLIDUS_IN_TAG */);\r\n            advanceBy(context, 1);\r\n            advanceSpaces(context);\r\n            continue;\r\n        }\r\n        if (type === 1 /* End */) {\r\n            emitError(context, 3 /* END_TAG_WITH_ATTRIBUTES */);\r\n        }\r\n        const attr = parseAttribute(context, attributeNames);\r\n        // Trim whitespace between class\r\n        // https://github.com/vuejs/core/issues/4251\r\n        if (attr.type === 6 /* ATTRIBUTE */ &&\r\n            attr.value &&\r\n            attr.name === 'class') {\r\n            attr.value.content = attr.value.content.replace(/\\s+/g, ' ').trim();\r\n        }\r\n        if (type === 0 /* Start */) {\r\n            props.push(attr);\r\n        }\r\n        if (/^[^\\t\\r\\n\\f />]/.test(context.source)) {\r\n            emitError(context, 15 /* MISSING_WHITESPACE_BETWEEN_ATTRIBUTES */);\r\n        }\r\n        advanceSpaces(context);\r\n    }\r\n    return props;\r\n}\r\nfunction parseAttribute(context, nameSet) {\r\n    // Name.\r\n    const start = getCursor(context);\r\n    const match = /^[^\\t\\r\\n\\f />][^\\t\\r\\n\\f />=]*/.exec(context.source);\r\n    const name = match[0];\r\n    if (nameSet.has(name)) {\r\n        emitError(context, 2 /* DUPLICATE_ATTRIBUTE */);\r\n    }\r\n    nameSet.add(name);\r\n    if (name[0] === '=') {\r\n        emitError(context, 19 /* UNEXPECTED_EQUALS_SIGN_BEFORE_ATTRIBUTE_NAME */);\r\n    }\r\n    {\r\n        const pattern = /[\"'<]/g;\r\n        let m;\r\n        while ((m = pattern.exec(name))) {\r\n            emitError(context, 17 /* UNEXPECTED_CHARACTER_IN_ATTRIBUTE_NAME */, m.index);\r\n        }\r\n    }\r\n    advanceBy(context, name.length);\r\n    // Value\r\n    let value = undefined;\r\n    if (/^[\\t\\r\\n\\f ]*=/.test(context.source)) {\r\n        advanceSpaces(context);\r\n        advanceBy(context, 1);\r\n        advanceSpaces(context);\r\n        value = parseAttributeValue(context);\r\n        if (!value) {\r\n            emitError(context, 13 /* MISSING_ATTRIBUTE_VALUE */);\r\n        }\r\n    }\r\n    const loc = getSelection(context, start);\r\n    if (!context.inVPre && /^(v-[A-Za-z0-9-]|:|\\.|@|#)/.test(name)) {\r\n        const match = /(?:^v-([a-z0-9-]+))?(?:(?::|^\\.|^@|^#)(\\[[^\\]]+\\]|[^\\.]+))?(.+)?$/i.exec(name);\r\n        let isPropShorthand = startsWith(name, '.');\r\n        let dirName = match[1] ||\r\n            (isPropShorthand || startsWith(name, ':')\r\n                ? 'bind'\r\n                : startsWith(name, '@')\r\n                    ? 'on'\r\n                    : 'slot');\r\n        let arg;\r\n        if (match[2]) {\r\n            const isSlot = dirName === 'slot';\r\n            const startOffset = name.lastIndexOf(match[2]);\r\n            const loc = getSelection(context, getNewPosition(context, start, startOffset), getNewPosition(context, start, startOffset + match[2].length + ((isSlot && match[3]) || '').length));\r\n            let content = match[2];\r\n            let isStatic = true;\r\n            if (content.startsWith('[')) {\r\n                isStatic = false;\r\n                if (!content.endsWith(']')) {\r\n                    emitError(context, 27 /* X_MISSING_DYNAMIC_DIRECTIVE_ARGUMENT_END */);\r\n                    content = content.slice(1);\r\n                }\r\n                else {\r\n                    content = content.slice(1, content.length - 1);\r\n                }\r\n            }\r\n            else if (isSlot) {\r\n                // #1241 special case for v-slot: vuetify relies extensively on slot\r\n                // names containing dots. v-slot doesn't have any modifiers and Vue 2.x\r\n                // supports such usage so we are keeping it consistent with 2.x.\r\n                content += match[3] || '';\r\n            }\r\n            arg = {\r\n                type: 4 /* SIMPLE_EXPRESSION */,\r\n                content,\r\n                isStatic,\r\n                constType: isStatic\r\n                    ? 3 /* CAN_STRINGIFY */\r\n                    : 0 /* NOT_CONSTANT */,\r\n                loc\r\n            };\r\n        }\r\n        if (value && value.isQuoted) {\r\n            const valueLoc = value.loc;\r\n            valueLoc.start.offset++;\r\n            valueLoc.start.column++;\r\n            valueLoc.end = advancePositionWithClone(valueLoc.start, value.content);\r\n            valueLoc.source = valueLoc.source.slice(1, -1);\r\n        }\r\n        const modifiers = match[3] ? match[3].slice(1).split('.') : [];\r\n        if (isPropShorthand)\r\n            modifiers.push('prop');\r\n        // 2.x compat v-bind:foo.sync -> v-model:foo\r\n        if (dirName === 'bind' && arg) {\r\n            if (modifiers.includes('sync') &&\r\n                checkCompatEnabled(\"COMPILER_V_BIND_SYNC\" /* COMPILER_V_BIND_SYNC */, context, loc, arg.loc.source)) {\r\n                dirName = 'model';\r\n                modifiers.splice(modifiers.indexOf('sync'), 1);\r\n            }\r\n            if ((process.env.NODE_ENV !== 'production') && modifiers.includes('prop')) {\r\n                checkCompatEnabled(\"COMPILER_V_BIND_PROP\" /* COMPILER_V_BIND_PROP */, context, loc);\r\n            }\r\n        }\r\n        return {\r\n            type: 7 /* DIRECTIVE */,\r\n            name: dirName,\r\n            exp: value && {\r\n                type: 4 /* SIMPLE_EXPRESSION */,\r\n                content: value.content,\r\n                isStatic: false,\r\n                // Treat as non-constant by default. This can be potentially set to\r\n                // other values by `transformExpression` to make it eligible for hoisting.\r\n                constType: 0 /* NOT_CONSTANT */,\r\n                loc: value.loc\r\n            },\r\n            arg,\r\n            modifiers,\r\n            loc\r\n        };\r\n    }\r\n    // missing directive name or illegal directive name\r\n    if (!context.inVPre && startsWith(name, 'v-')) {\r\n        emitError(context, 26 /* X_MISSING_DIRECTIVE_NAME */);\r\n    }\r\n    return {\r\n        type: 6 /* ATTRIBUTE */,\r\n        name,\r\n        value: value && {\r\n            type: 2 /* TEXT */,\r\n            content: value.content,\r\n            loc: value.loc\r\n        },\r\n        loc\r\n    };\r\n}\r\nfunction parseAttributeValue(context) {\r\n    const start = getCursor(context);\r\n    let content;\r\n    const quote = context.source[0];\r\n    const isQuoted = quote === `\"` || quote === `'`;\r\n    if (isQuoted) {\r\n        // Quoted value.\r\n        advanceBy(context, 1);\r\n        const endIndex = context.source.indexOf(quote);\r\n        if (endIndex === -1) {\r\n            content = parseTextData(context, context.source.length, 4 /* ATTRIBUTE_VALUE */);\r\n        }\r\n        else {\r\n            content = parseTextData(context, endIndex, 4 /* ATTRIBUTE_VALUE */);\r\n            advanceBy(context, 1);\r\n        }\r\n    }\r\n    else {\r\n        // Unquoted\r\n        const match = /^[^\\t\\r\\n\\f >]+/.exec(context.source);\r\n        if (!match) {\r\n            return undefined;\r\n        }\r\n        const unexpectedChars = /[\"'<=`]/g;\r\n        let m;\r\n        while ((m = unexpectedChars.exec(match[0]))) {\r\n            emitError(context, 18 /* UNEXPECTED_CHARACTER_IN_UNQUOTED_ATTRIBUTE_VALUE */, m.index);\r\n        }\r\n        content = parseTextData(context, match[0].length, 4 /* ATTRIBUTE_VALUE */);\r\n    }\r\n    return { content, isQuoted, loc: getSelection(context, start) };\r\n}\r\nfunction parseInterpolation(context, mode) {\r\n    const [open, close] = context.options.delimiters;\r\n    const closeIndex = context.source.indexOf(close, open.length);\r\n    if (closeIndex === -1) {\r\n        emitError(context, 25 /* X_MISSING_INTERPOLATION_END */);\r\n        return undefined;\r\n    }\r\n    const start = getCursor(context);\r\n    advanceBy(context, open.length);\r\n    const innerStart = getCursor(context);\r\n    const innerEnd = getCursor(context);\r\n    const rawContentLength = closeIndex - open.length;\r\n    const rawContent = context.source.slice(0, rawContentLength);\r\n    const preTrimContent = parseTextData(context, rawContentLength, mode);\r\n    const content = preTrimContent.trim();\r\n    const startOffset = preTrimContent.indexOf(content);\r\n    if (startOffset > 0) {\r\n        advancePositionWithMutation(innerStart, rawContent, startOffset);\r\n    }\r\n    const endOffset = rawContentLength - (preTrimContent.length - content.length - startOffset);\r\n    advancePositionWithMutation(innerEnd, rawContent, endOffset);\r\n    advanceBy(context, close.length);\r\n    return {\r\n        type: 5 /* INTERPOLATION */,\r\n        content: {\r\n            type: 4 /* SIMPLE_EXPRESSION */,\r\n            isStatic: false,\r\n            // Set `isConstant` to false by default and will decide in transformExpression\r\n            constType: 0 /* NOT_CONSTANT */,\r\n            content,\r\n            loc: getSelection(context, innerStart, innerEnd)\r\n        },\r\n        loc: getSelection(context, start)\r\n    };\r\n}\r\nfunction parseText(context, mode) {\r\n    const endTokens = mode === 3 /* CDATA */ ? [']]>'] : ['<', context.options.delimiters[0]];\r\n    let endIndex = context.source.length;\r\n    for (let i = 0; i < endTokens.length; i++) {\r\n        const index = context.source.indexOf(endTokens[i], 1);\r\n        if (index !== -1 && endIndex > index) {\r\n            endIndex = index;\r\n        }\r\n    }\r\n    const start = getCursor(context);\r\n    const content = parseTextData(context, endIndex, mode);\r\n    return {\r\n        type: 2 /* TEXT */,\r\n        content,\r\n        loc: getSelection(context, start)\r\n    };\r\n}\r\n/**\r\n * Get text data with a given length from the current location.\r\n * This translates HTML entities in the text data.\r\n */\r\nfunction parseTextData(context, length, mode) {\r\n    const rawText = context.source.slice(0, length);\r\n    advanceBy(context, length);\r\n    if (mode === 2 /* RAWTEXT */ ||\r\n        mode === 3 /* CDATA */ ||\r\n        !rawText.includes('&')) {\r\n        return rawText;\r\n    }\r\n    else {\r\n        // DATA or RCDATA containing \"&\"\". Entity decoding required.\r\n        return context.options.decodeEntities(rawText, mode === 4 /* ATTRIBUTE_VALUE */);\r\n    }\r\n}\r\nfunction getCursor(context) {\r\n    const { column, line, offset } = context;\r\n    return { column, line, offset };\r\n}\r\nfunction getSelection(context, start, end) {\r\n    end = end || getCursor(context);\r\n    return {\r\n        start,\r\n        end,\r\n        source: context.originalSource.slice(start.offset, end.offset)\r\n    };\r\n}\r\nfunction last(xs) {\r\n    return xs[xs.length - 1];\r\n}\r\nfunction startsWith(source, searchString) {\r\n    return source.startsWith(searchString);\r\n}\r\nfunction advanceBy(context, numberOfCharacters) {\r\n    const { source } = context;\r\n    advancePositionWithMutation(context, source, numberOfCharacters);\r\n    context.source = source.slice(numberOfCharacters);\r\n}\r\nfunction advanceSpaces(context) {\r\n    const match = /^[\\t\\r\\n\\f ]+/.exec(context.source);\r\n    if (match) {\r\n        advanceBy(context, match[0].length);\r\n    }\r\n}\r\nfunction getNewPosition(context, start, numberOfCharacters) {\r\n    return advancePositionWithClone(start, context.originalSource.slice(start.offset, numberOfCharacters), numberOfCharacters);\r\n}\r\nfunction emitError(context, code, offset, loc = getCursor(context)) {\r\n    if (offset) {\r\n        loc.offset += offset;\r\n        loc.column += offset;\r\n    }\r\n    context.options.onError(createCompilerError(code, {\r\n        start: loc,\r\n        end: loc,\r\n        source: ''\r\n    }));\r\n}\r\nfunction isEnd(context, mode, ancestors) {\r\n    const s = context.source;\r\n    switch (mode) {\r\n        case 0 /* DATA */:\r\n            if (startsWith(s, '</')) {\r\n                // TODO: probably bad performance\r\n                for (let i = ancestors.length - 1; i >= 0; --i) {\r\n                    if (startsWithEndTagOpen(s, ancestors[i].tag)) {\r\n                        return true;\r\n                    }\r\n                }\r\n            }\r\n            break;\r\n        case 1 /* RCDATA */:\r\n        case 2 /* RAWTEXT */: {\r\n            const parent = last(ancestors);\r\n            if (parent && startsWithEndTagOpen(s, parent.tag)) {\r\n                return true;\r\n            }\r\n            break;\r\n        }\r\n        case 3 /* CDATA */:\r\n            if (startsWith(s, ']]>')) {\r\n                return true;\r\n            }\r\n            break;\r\n    }\r\n    return !s;\r\n}\r\nfunction startsWithEndTagOpen(source, tag) {\r\n    return (startsWith(source, '</') &&\r\n        source.slice(2, 2 + tag.length).toLowerCase() === tag.toLowerCase() &&\r\n        /[\\t\\r\\n\\f />]/.test(source[2 + tag.length] || '>'));\r\n}\n\nfunction hoistStatic(root, context) {\r\n    walk(root, context, \r\n    // Root node is unfortunately non-hoistable due to potential parent\r\n    // fallthrough attributes.\r\n    isSingleElementRoot(root, root.children[0]));\r\n}\r\nfunction isSingleElementRoot(root, child) {\r\n    const { children } = root;\r\n    return (children.length === 1 &&\r\n        child.type === 1 /* ELEMENT */ &&\r\n        !isSlotOutlet(child));\r\n}\r\nfunction walk(node, context, doNotHoistNode = false) {\r\n    const { children } = node;\r\n    const originalCount = children.length;\r\n    let hoistedCount = 0;\r\n    for (let i = 0; i < children.length; i++) {\r\n        const child = children[i];\r\n        // only plain elements & text calls are eligible for hoisting.\r\n        if (child.type === 1 /* ELEMENT */ &&\r\n            child.tagType === 0 /* ELEMENT */) {\r\n            const constantType = doNotHoistNode\r\n                ? 0 /* NOT_CONSTANT */\r\n                : getConstantType(child, context);\r\n            if (constantType > 0 /* NOT_CONSTANT */) {\r\n                if (constantType >= 2 /* CAN_HOIST */) {\r\n                    child.codegenNode.patchFlag =\r\n                        -1 /* HOISTED */ + ((process.env.NODE_ENV !== 'production') ? ` /* HOISTED */` : ``);\r\n                    child.codegenNode = context.hoist(child.codegenNode);\r\n                    hoistedCount++;\r\n                    continue;\r\n                }\r\n            }\r\n            else {\r\n                // node may contain dynamic children, but its props may be eligible for\r\n                // hoisting.\r\n                const codegenNode = child.codegenNode;\r\n                if (codegenNode.type === 13 /* VNODE_CALL */) {\r\n                    const flag = getPatchFlag(codegenNode);\r\n                    if ((!flag ||\r\n                        flag === 512 /* NEED_PATCH */ ||\r\n                        flag === 1 /* TEXT */) &&\r\n                        getGeneratedPropsConstantType(child, context) >=\r\n                            2 /* CAN_HOIST */) {\r\n                        const props = getNodeProps(child);\r\n                        if (props) {\r\n                            codegenNode.props = context.hoist(props);\r\n                        }\r\n                    }\r\n                    if (codegenNode.dynamicProps) {\r\n                        codegenNode.dynamicProps = context.hoist(codegenNode.dynamicProps);\r\n                    }\r\n                }\r\n            }\r\n        }\r\n        else if (child.type === 12 /* TEXT_CALL */ &&\r\n            getConstantType(child.content, context) >= 2 /* CAN_HOIST */) {\r\n            child.codegenNode = context.hoist(child.codegenNode);\r\n            hoistedCount++;\r\n        }\r\n        // walk further\r\n        if (child.type === 1 /* ELEMENT */) {\r\n            const isComponent = child.tagType === 1 /* COMPONENT */;\r\n            if (isComponent) {\r\n                context.scopes.vSlot++;\r\n            }\r\n            walk(child, context);\r\n            if (isComponent) {\r\n                context.scopes.vSlot--;\r\n            }\r\n        }\r\n        else if (child.type === 11 /* FOR */) {\r\n            // Do not hoist v-for single child because it has to be a block\r\n            walk(child, context, child.children.length === 1);\r\n        }\r\n        else if (child.type === 9 /* IF */) {\r\n            for (let i = 0; i < child.branches.length; i++) {\r\n                // Do not hoist v-if single child because it has to be a block\r\n                walk(child.branches[i], context, child.branches[i].children.length === 1);\r\n            }\r\n        }\r\n    }\r\n    if (hoistedCount && context.transformHoist) {\r\n        context.transformHoist(children, context, node);\r\n    }\r\n    // all children were hoisted - the entire children array is hoistable.\r\n    if (hoistedCount &&\r\n        hoistedCount === originalCount &&\r\n        node.type === 1 /* ELEMENT */ &&\r\n        node.tagType === 0 /* ELEMENT */ &&\r\n        node.codegenNode &&\r\n        node.codegenNode.type === 13 /* VNODE_CALL */ &&\r\n        isArray(node.codegenNode.children)) {\r\n        node.codegenNode.children = context.hoist(createArrayExpression(node.codegenNode.children));\r\n    }\r\n}\r\nfunction getConstantType(node, context) {\r\n    const { constantCache } = context;\r\n    switch (node.type) {\r\n        case 1 /* ELEMENT */:\r\n            if (node.tagType !== 0 /* ELEMENT */) {\r\n                return 0 /* NOT_CONSTANT */;\r\n            }\r\n            const cached = constantCache.get(node);\r\n            if (cached !== undefined) {\r\n                return cached;\r\n            }\r\n            const codegenNode = node.codegenNode;\r\n            if (codegenNode.type !== 13 /* VNODE_CALL */) {\r\n                return 0 /* NOT_CONSTANT */;\r\n            }\r\n            if (codegenNode.isBlock &&\r\n                node.tag !== 'svg' &&\r\n                node.tag !== 'foreignObject') {\r\n                return 0 /* NOT_CONSTANT */;\r\n            }\r\n            const flag = getPatchFlag(codegenNode);\r\n            if (!flag) {\r\n                let returnType = 3 /* CAN_STRINGIFY */;\r\n                // Element itself has no patch flag. However we still need to check:\r\n                // 1. Even for a node with no patch flag, it is possible for it to contain\r\n                // non-hoistable expressions that refers to scope variables, e.g. compiler\r\n                // injected keys or cached event handlers. Therefore we need to always\r\n                // check the codegenNode's props to be sure.\r\n                const generatedPropsType = getGeneratedPropsConstantType(node, context);\r\n                if (generatedPropsType === 0 /* NOT_CONSTANT */) {\r\n                    constantCache.set(node, 0 /* NOT_CONSTANT */);\r\n                    return 0 /* NOT_CONSTANT */;\r\n                }\r\n                if (generatedPropsType < returnType) {\r\n                    returnType = generatedPropsType;\r\n                }\r\n                // 2. its children.\r\n                for (let i = 0; i < node.children.length; i++) {\r\n                    const childType = getConstantType(node.children[i], context);\r\n                    if (childType === 0 /* NOT_CONSTANT */) {\r\n                        constantCache.set(node, 0 /* NOT_CONSTANT */);\r\n                        return 0 /* NOT_CONSTANT */;\r\n                    }\r\n                    if (childType < returnType) {\r\n                        returnType = childType;\r\n                    }\r\n                }\r\n                // 3. if the type is not already CAN_SKIP_PATCH which is the lowest non-0\r\n                // type, check if any of the props can cause the type to be lowered\r\n                // we can skip can_patch because it's guaranteed by the absence of a\r\n                // patchFlag.\r\n                if (returnType > 1 /* CAN_SKIP_PATCH */) {\r\n                    for (let i = 0; i < node.props.length; i++) {\r\n                        const p = node.props[i];\r\n                        if (p.type === 7 /* DIRECTIVE */ && p.name === 'bind' && p.exp) {\r\n                            const expType = getConstantType(p.exp, context);\r\n                            if (expType === 0 /* NOT_CONSTANT */) {\r\n                                constantCache.set(node, 0 /* NOT_CONSTANT */);\r\n                                return 0 /* NOT_CONSTANT */;\r\n                            }\r\n                            if (expType < returnType) {\r\n                                returnType = expType;\r\n                            }\r\n                        }\r\n                    }\r\n                }\r\n                // only svg/foreignObject could be block here, however if they are\r\n                // static then they don't need to be blocks since there will be no\r\n                // nested updates.\r\n                if (codegenNode.isBlock) {\r\n                    context.removeHelper(OPEN_BLOCK);\r\n                    context.removeHelper(getVNodeBlockHelper(context.inSSR, codegenNode.isComponent));\r\n                    codegenNode.isBlock = false;\r\n                    context.helper(getVNodeHelper(context.inSSR, codegenNode.isComponent));\r\n                }\r\n                constantCache.set(node, returnType);\r\n                return returnType;\r\n            }\r\n            else {\r\n                constantCache.set(node, 0 /* NOT_CONSTANT */);\r\n                return 0 /* NOT_CONSTANT */;\r\n            }\r\n        case 2 /* TEXT */:\r\n        case 3 /* COMMENT */:\r\n            return 3 /* CAN_STRINGIFY */;\r\n        case 9 /* IF */:\r\n        case 11 /* FOR */:\r\n        case 10 /* IF_BRANCH */:\r\n            return 0 /* NOT_CONSTANT */;\r\n        case 5 /* INTERPOLATION */:\r\n        case 12 /* TEXT_CALL */:\r\n            return getConstantType(node.content, context);\r\n        case 4 /* SIMPLE_EXPRESSION */:\r\n            return node.constType;\r\n        case 8 /* COMPOUND_EXPRESSION */:\r\n            let returnType = 3 /* CAN_STRINGIFY */;\r\n            for (let i = 0; i < node.children.length; i++) {\r\n                const child = node.children[i];\r\n                if (isString(child) || isSymbol(child)) {\r\n                    continue;\r\n                }\r\n                const childType = getConstantType(child, context);\r\n                if (childType === 0 /* NOT_CONSTANT */) {\r\n                    return 0 /* NOT_CONSTANT */;\r\n                }\r\n                else if (childType < returnType) {\r\n                    returnType = childType;\r\n                }\r\n            }\r\n            return returnType;\r\n        default:\r\n            if ((process.env.NODE_ENV !== 'production')) ;\r\n            return 0 /* NOT_CONSTANT */;\r\n    }\r\n}\r\nconst allowHoistedHelperSet = new Set([\r\n    NORMALIZE_CLASS,\r\n    NORMALIZE_STYLE,\r\n    NORMALIZE_PROPS,\r\n    GUARD_REACTIVE_PROPS\r\n]);\r\nfunction getConstantTypeOfHelperCall(value, context) {\r\n    if (value.type === 14 /* JS_CALL_EXPRESSION */ &&\r\n        !isString(value.callee) &&\r\n        allowHoistedHelperSet.has(value.callee)) {\r\n        const arg = value.arguments[0];\r\n        if (arg.type === 4 /* SIMPLE_EXPRESSION */) {\r\n            return getConstantType(arg, context);\r\n        }\r\n        else if (arg.type === 14 /* JS_CALL_EXPRESSION */) {\r\n            // in the case of nested helper call, e.g. `normalizeProps(guardReactiveProps(exp))`\r\n            return getConstantTypeOfHelperCall(arg, context);\r\n        }\r\n    }\r\n    return 0 /* NOT_CONSTANT */;\r\n}\r\nfunction getGeneratedPropsConstantType(node, context) {\r\n    let returnType = 3 /* CAN_STRINGIFY */;\r\n    const props = getNodeProps(node);\r\n    if (props && props.type === 15 /* JS_OBJECT_EXPRESSION */) {\r\n        const { properties } = props;\r\n        for (let i = 0; i < properties.length; i++) {\r\n            const { key, value } = properties[i];\r\n            const keyType = getConstantType(key, context);\r\n            if (keyType === 0 /* NOT_CONSTANT */) {\r\n                return keyType;\r\n            }\r\n            if (keyType < returnType) {\r\n                returnType = keyType;\r\n            }\r\n            let valueType;\r\n            if (value.type === 4 /* SIMPLE_EXPRESSION */) {\r\n                valueType = getConstantType(value, context);\r\n            }\r\n            else if (value.type === 14 /* JS_CALL_EXPRESSION */) {\r\n                // some helper calls can be hoisted,\r\n                // such as the `normalizeProps` generated by the compiler for pre-normalize class,\r\n                // in this case we need to respect the ConstantType of the helper's arguments\r\n                valueType = getConstantTypeOfHelperCall(value, context);\r\n            }\r\n            else {\r\n                valueType = 0 /* NOT_CONSTANT */;\r\n            }\r\n            if (valueType === 0 /* NOT_CONSTANT */) {\r\n                return valueType;\r\n            }\r\n            if (valueType < returnType) {\r\n                returnType = valueType;\r\n            }\r\n        }\r\n    }\r\n    return returnType;\r\n}\r\nfunction getNodeProps(node) {\r\n    const codegenNode = node.codegenNode;\r\n    if (codegenNode.type === 13 /* VNODE_CALL */) {\r\n        return codegenNode.props;\r\n    }\r\n}\r\nfunction getPatchFlag(node) {\r\n    const flag = node.patchFlag;\r\n    return flag ? parseInt(flag, 10) : undefined;\r\n}\n\nfunction createTransformContext(root, { filename = '', prefixIdentifiers = false, hoistStatic = false, cacheHandlers = false, nodeTransforms = [], directiveTransforms = {}, transformHoist = null, isBuiltInComponent = NOOP, isCustomElement = NOOP, expressionPlugins = [], scopeId = null, slotted = true, ssr = false, inSSR = false, ssrCssVars = ``, bindingMetadata = EMPTY_OBJ, inline = false, isTS = false, onError = defaultOnError, onWarn = defaultOnWarn, compatConfig }) {\r\n    const nameMatch = filename.replace(/\\?.*$/, '').match(/([^/\\\\]+)\\.\\w+$/);\r\n    const context = {\r\n        // options\r\n        selfName: nameMatch && capitalize(camelize$1(nameMatch[1])),\r\n        prefixIdentifiers,\r\n        hoistStatic,\r\n        cacheHandlers,\r\n        nodeTransforms,\r\n        directiveTransforms,\r\n        transformHoist,\r\n        isBuiltInComponent,\r\n        isCustomElement,\r\n        expressionPlugins,\r\n        scopeId,\r\n        slotted,\r\n        ssr,\r\n        inSSR,\r\n        ssrCssVars,\r\n        bindingMetadata,\r\n        inline,\r\n        isTS,\r\n        onError,\r\n        onWarn,\r\n        compatConfig,\r\n        // state\r\n        root,\r\n        helpers: new Map(),\r\n        components: new Set(),\r\n        directives: new Set(),\r\n        hoists: [],\r\n        imports: [],\r\n        constantCache: new Map(),\r\n        temps: 0,\r\n        cached: 0,\r\n        identifiers: Object.create(null),\r\n        scopes: {\r\n            vFor: 0,\r\n            vSlot: 0,\r\n            vPre: 0,\r\n            vOnce: 0\r\n        },\r\n        parent: null,\r\n        currentNode: root,\r\n        childIndex: 0,\r\n        inVOnce: false,\r\n        // methods\r\n        helper(name) {\r\n            const count = context.helpers.get(name) || 0;\r\n            context.helpers.set(name, count + 1);\r\n            return name;\r\n        },\r\n        removeHelper(name) {\r\n            const count = context.helpers.get(name);\r\n            if (count) {\r\n                const currentCount = count - 1;\r\n                if (!currentCount) {\r\n                    context.helpers.delete(name);\r\n                }\r\n                else {\r\n                    context.helpers.set(name, currentCount);\r\n                }\r\n            }\r\n        },\r\n        helperString(name) {\r\n            return `_${helperNameMap[context.helper(name)]}`;\r\n        },\r\n        replaceNode(node) {\r\n            /* istanbul ignore if */\r\n            if ((process.env.NODE_ENV !== 'production')) {\r\n                if (!context.currentNode) {\r\n                    throw new Error(`Node being replaced is already removed.`);\r\n                }\r\n                if (!context.parent) {\r\n                    throw new Error(`Cannot replace root node.`);\r\n                }\r\n            }\r\n            context.parent.children[context.childIndex] = context.currentNode = node;\r\n        },\r\n        removeNode(node) {\r\n            if ((process.env.NODE_ENV !== 'production') && !context.parent) {\r\n                throw new Error(`Cannot remove root node.`);\r\n            }\r\n            const list = context.parent.children;\r\n            const removalIndex = node\r\n                ? list.indexOf(node)\r\n                : context.currentNode\r\n                    ? context.childIndex\r\n                    : -1;\r\n            /* istanbul ignore if */\r\n            if ((process.env.NODE_ENV !== 'production') && removalIndex < 0) {\r\n                throw new Error(`node being removed is not a child of current parent`);\r\n            }\r\n            if (!node || node === context.currentNode) {\r\n                // current node removed\r\n                context.currentNode = null;\r\n                context.onNodeRemoved();\r\n            }\r\n            else {\r\n                // sibling node removed\r\n                if (context.childIndex > removalIndex) {\r\n                    context.childIndex--;\r\n                    context.onNodeRemoved();\r\n                }\r\n            }\r\n            context.parent.children.splice(removalIndex, 1);\r\n        },\r\n        onNodeRemoved: () => { },\r\n        addIdentifiers(exp) {\r\n        },\r\n        removeIdentifiers(exp) {\r\n        },\r\n        hoist(exp) {\r\n            if (isString(exp))\r\n                exp = createSimpleExpression(exp);\r\n            context.hoists.push(exp);\r\n            const identifier = createSimpleExpression(`_hoisted_${context.hoists.length}`, false, exp.loc, 2 /* CAN_HOIST */);\r\n            identifier.hoisted = exp;\r\n            return identifier;\r\n        },\r\n        cache(exp, isVNode = false) {\r\n            return createCacheExpression(context.cached++, exp, isVNode);\r\n        }\r\n    };\r\n    {\r\n        context.filters = new Set();\r\n    }\r\n    return context;\r\n}\r\nfunction transform(root, options) {\r\n    const context = createTransformContext(root, options);\r\n    traverseNode(root, context);\r\n    if (options.hoistStatic) {\r\n        hoistStatic(root, context);\r\n    }\r\n    if (!options.ssr) {\r\n        createRootCodegen(root, context);\r\n    }\r\n    // finalize meta information\r\n    root.helpers = [...context.helpers.keys()];\r\n    root.components = [...context.components];\r\n    root.directives = [...context.directives];\r\n    root.imports = context.imports;\r\n    root.hoists = context.hoists;\r\n    root.temps = context.temps;\r\n    root.cached = context.cached;\r\n    {\r\n        root.filters = [...context.filters];\r\n    }\r\n}\r\nfunction createRootCodegen(root, context) {\r\n    const { helper } = context;\r\n    const { children } = root;\r\n    if (children.length === 1) {\r\n        const child = children[0];\r\n        // if the single child is an element, turn it into a block.\r\n        if (isSingleElementRoot(root, child) && child.codegenNode) {\r\n            // single element root is never hoisted so codegenNode will never be\r\n            // SimpleExpressionNode\r\n            const codegenNode = child.codegenNode;\r\n            if (codegenNode.type === 13 /* VNODE_CALL */) {\r\n                makeBlock(codegenNode, context);\r\n            }\r\n            root.codegenNode = codegenNode;\r\n        }\r\n        else {\r\n            // - single <slot/>, IfNode, ForNode: already blocks.\r\n            // - single text node: always patched.\r\n            // root codegen falls through via genNode()\r\n            root.codegenNode = child;\r\n        }\r\n    }\r\n    else if (children.length > 1) {\r\n        // root has multiple nodes - return a fragment block.\r\n        let patchFlag = 64 /* STABLE_FRAGMENT */;\r\n        let patchFlagText = PatchFlagNames[64 /* STABLE_FRAGMENT */];\r\n        // check if the fragment actually contains a single valid child with\r\n        // the rest being comments\r\n        if ((process.env.NODE_ENV !== 'production') &&\r\n            children.filter(c => c.type !== 3 /* COMMENT */).length === 1) {\r\n            patchFlag |= 2048 /* DEV_ROOT_FRAGMENT */;\r\n            patchFlagText += `, ${PatchFlagNames[2048 /* DEV_ROOT_FRAGMENT */]}`;\r\n        }\r\n        root.codegenNode = createVNodeCall(context, helper(FRAGMENT), undefined, root.children, patchFlag + ((process.env.NODE_ENV !== 'production') ? ` /* ${patchFlagText} */` : ``), undefined, undefined, true, undefined, false /* isComponent */);\r\n    }\r\n    else ;\r\n}\r\nfunction traverseChildren(parent, context) {\r\n    let i = 0;\r\n    const nodeRemoved = () => {\r\n        i--;\r\n    };\r\n    for (; i < parent.children.length; i++) {\r\n        const child = parent.children[i];\r\n        if (isString(child))\r\n            continue;\r\n        context.parent = parent;\r\n        context.childIndex = i;\r\n        context.onNodeRemoved = nodeRemoved;\r\n        traverseNode(child, context);\r\n    }\r\n}\r\nfunction traverseNode(node, context) {\r\n    context.currentNode = node;\r\n    // apply transform plugins\r\n    const { nodeTransforms } = context;\r\n    const exitFns = [];\r\n    for (let i = 0; i < nodeTransforms.length; i++) {\r\n        const onExit = nodeTransforms[i](node, context);\r\n        if (onExit) {\r\n            if (isArray(onExit)) {\r\n                exitFns.push(...onExit);\r\n            }\r\n            else {\r\n                exitFns.push(onExit);\r\n            }\r\n        }\r\n        if (!context.currentNode) {\r\n            // node was removed\r\n            return;\r\n        }\r\n        else {\r\n            // node may have been replaced\r\n            node = context.currentNode;\r\n        }\r\n    }\r\n    switch (node.type) {\r\n        case 3 /* COMMENT */:\r\n            if (!context.ssr) {\r\n                // inject import for the Comment symbol, which is needed for creating\r\n                // comment nodes with `createVNode`\r\n                context.helper(CREATE_COMMENT);\r\n            }\r\n            break;\r\n        case 5 /* INTERPOLATION */:\r\n            // no need to traverse, but we need to inject toString helper\r\n            if (!context.ssr) {\r\n                context.helper(TO_DISPLAY_STRING);\r\n            }\r\n            break;\r\n        // for container types, further traverse downwards\r\n        case 9 /* IF */:\r\n            for (let i = 0; i < node.branches.length; i++) {\r\n                traverseNode(node.branches[i], context);\r\n            }\r\n            break;\r\n        case 10 /* IF_BRANCH */:\r\n        case 11 /* FOR */:\r\n        case 1 /* ELEMENT */:\r\n        case 0 /* ROOT */:\r\n            traverseChildren(node, context);\r\n            break;\r\n    }\r\n    // exit transforms\r\n    context.currentNode = node;\r\n    let i = exitFns.length;\r\n    while (i--) {\r\n        exitFns[i]();\r\n    }\r\n}\r\nfunction createStructuralDirectiveTransform(name, fn) {\r\n    const matches = isString(name)\r\n        ? (n) => n === name\r\n        : (n) => name.test(n);\r\n    return (node, context) => {\r\n        if (node.type === 1 /* ELEMENT */) {\r\n            const { props } = node;\r\n            // structural directive transforms are not concerned with slots\r\n            // as they are handled separately in vSlot.ts\r\n            if (node.tagType === 3 /* TEMPLATE */ && props.some(isVSlot)) {\r\n                return;\r\n            }\r\n            const exitFns = [];\r\n            for (let i = 0; i < props.length; i++) {\r\n                const prop = props[i];\r\n                if (prop.type === 7 /* DIRECTIVE */ && matches(prop.name)) {\r\n                    // structural directives are removed to avoid infinite recursion\r\n                    // also we remove them *before* applying so that it can further\r\n                    // traverse itself in case it moves the node around\r\n                    props.splice(i, 1);\r\n                    i--;\r\n                    const onExit = fn(node, prop, context);\r\n                    if (onExit)\r\n                        exitFns.push(onExit);\r\n                }\r\n            }\r\n            return exitFns;\r\n        }\r\n    };\r\n}\n\nconst PURE_ANNOTATION = `/*#__PURE__*/`;\r\nfunction createCodegenContext(ast, { mode = 'function', prefixIdentifiers = mode === 'module', sourceMap = false, filename = `template.vue.html`, scopeId = null, optimizeImports = false, runtimeGlobalName = `Vue`, runtimeModuleName = `vue`, ssrRuntimeModuleName = 'vue/server-renderer', ssr = false, isTS = false, inSSR = false }) {\r\n    const context = {\r\n        mode,\r\n        prefixIdentifiers,\r\n        sourceMap,\r\n        filename,\r\n        scopeId,\r\n        optimizeImports,\r\n        runtimeGlobalName,\r\n        runtimeModuleName,\r\n        ssrRuntimeModuleName,\r\n        ssr,\r\n        isTS,\r\n        inSSR,\r\n        source: ast.loc.source,\r\n        code: ``,\r\n        column: 1,\r\n        line: 1,\r\n        offset: 0,\r\n        indentLevel: 0,\r\n        pure: false,\r\n        map: undefined,\r\n        helper(key) {\r\n            return `_${helperNameMap[key]}`;\r\n        },\r\n        push(code, node) {\r\n            context.code += code;\r\n        },\r\n        indent() {\r\n            newline(++context.indentLevel);\r\n        },\r\n        deindent(withoutNewLine = false) {\r\n            if (withoutNewLine) {\r\n                --context.indentLevel;\r\n            }\r\n            else {\r\n                newline(--context.indentLevel);\r\n            }\r\n        },\r\n        newline() {\r\n            newline(context.indentLevel);\r\n        }\r\n    };\r\n    function newline(n) {\r\n        context.push('\\n' + `  `.repeat(n));\r\n    }\r\n    return context;\r\n}\r\nfunction generate(ast, options = {}) {\r\n    const context = createCodegenContext(ast, options);\r\n    if (options.onContextCreated)\r\n        options.onContextCreated(context);\r\n    const { mode, push, prefixIdentifiers, indent, deindent, newline, scopeId, ssr } = context;\r\n    const hasHelpers = ast.helpers.length > 0;\r\n    const useWithBlock = !prefixIdentifiers && mode !== 'module';\r\n    // preambles\r\n    // in setup() inline mode, the preamble is generated in a sub context\r\n    // and returned separately.\r\n    const preambleContext = context;\r\n    {\r\n        genFunctionPreamble(ast, preambleContext);\r\n    }\r\n    // enter render function\r\n    const functionName = ssr ? `ssrRender` : `render`;\r\n    const args = ssr ? ['_ctx', '_push', '_parent', '_attrs'] : ['_ctx', '_cache'];\r\n    const signature = args.join(', ');\r\n    {\r\n        push(`function ${functionName}(${signature}) {`);\r\n    }\r\n    indent();\r\n    if (useWithBlock) {\r\n        push(`with (_ctx) {`);\r\n        indent();\r\n        // function mode const declarations should be inside with block\r\n        // also they should be renamed to avoid collision with user properties\r\n        if (hasHelpers) {\r\n            push(`const { ${ast.helpers\r\n                .map(s => `${helperNameMap[s]}: _${helperNameMap[s]}`)\r\n                .join(', ')} } = _Vue`);\r\n            push(`\\n`);\r\n            newline();\r\n        }\r\n    }\r\n    // generate asset resolution statements\r\n    if (ast.components.length) {\r\n        genAssets(ast.components, 'component', context);\r\n        if (ast.directives.length || ast.temps > 0) {\r\n            newline();\r\n        }\r\n    }\r\n    if (ast.directives.length) {\r\n        genAssets(ast.directives, 'directive', context);\r\n        if (ast.temps > 0) {\r\n            newline();\r\n        }\r\n    }\r\n    if (ast.filters && ast.filters.length) {\r\n        newline();\r\n        genAssets(ast.filters, 'filter', context);\r\n        newline();\r\n    }\r\n    if (ast.temps > 0) {\r\n        push(`let `);\r\n        for (let i = 0; i < ast.temps; i++) {\r\n            push(`${i > 0 ? `, ` : ``}_temp${i}`);\r\n        }\r\n    }\r\n    if (ast.components.length || ast.directives.length || ast.temps) {\r\n        push(`\\n`);\r\n        newline();\r\n    }\r\n    // generate the VNode tree expression\r\n    if (!ssr) {\r\n        push(`return `);\r\n    }\r\n    if (ast.codegenNode) {\r\n        genNode(ast.codegenNode, context);\r\n    }\r\n    else {\r\n        push(`null`);\r\n    }\r\n    if (useWithBlock) {\r\n        deindent();\r\n        push(`}`);\r\n    }\r\n    deindent();\r\n    push(`}`);\r\n    return {\r\n        ast,\r\n        code: context.code,\r\n        preamble: ``,\r\n        // SourceMapGenerator does have toJSON() method but it's not in the types\r\n        map: context.map ? context.map.toJSON() : undefined\r\n    };\r\n}\r\nfunction genFunctionPreamble(ast, context) {\r\n    const { ssr, prefixIdentifiers, push, newline, runtimeModuleName, runtimeGlobalName, ssrRuntimeModuleName } = context;\r\n    const VueBinding = runtimeGlobalName;\r\n    const aliasHelper = (s) => `${helperNameMap[s]}: _${helperNameMap[s]}`;\r\n    // Generate const declaration for helpers\r\n    // In prefix mode, we place the const declaration at top so it's done\r\n    // only once; But if we not prefixing, we place the declaration inside the\r\n    // with block so it doesn't incur the `in` check cost for every helper access.\r\n    if (ast.helpers.length > 0) {\r\n        {\r\n            // \"with\" mode.\r\n            // save Vue in a separate variable to avoid collision\r\n            push(`const _Vue = ${VueBinding}\\n`);\r\n            // in \"with\" mode, helpers are declared inside the with block to avoid\r\n            // has check cost, but hoists are lifted out of the function - we need\r\n            // to provide the helper here.\r\n            if (ast.hoists.length) {\r\n                const staticHelpers = [\r\n                    CREATE_VNODE,\r\n                    CREATE_ELEMENT_VNODE,\r\n                    CREATE_COMMENT,\r\n                    CREATE_TEXT,\r\n                    CREATE_STATIC\r\n                ]\r\n                    .filter(helper => ast.helpers.includes(helper))\r\n                    .map(aliasHelper)\r\n                    .join(', ');\r\n                push(`const { ${staticHelpers} } = _Vue\\n`);\r\n            }\r\n        }\r\n    }\r\n    genHoists(ast.hoists, context);\r\n    newline();\r\n    push(`return `);\r\n}\r\nfunction genAssets(assets, type, { helper, push, newline, isTS }) {\r\n    const resolver = helper(type === 'filter'\r\n        ? RESOLVE_FILTER\r\n        : type === 'component'\r\n            ? RESOLVE_COMPONENT\r\n            : RESOLVE_DIRECTIVE);\r\n    for (let i = 0; i < assets.length; i++) {\r\n        let id = assets[i];\r\n        // potential component implicit self-reference inferred from SFC filename\r\n        const maybeSelfReference = id.endsWith('__self');\r\n        if (maybeSelfReference) {\r\n            id = id.slice(0, -6);\r\n        }\r\n        push(`const ${toValidAssetId(id, type)} = ${resolver}(${JSON.stringify(id)}${maybeSelfReference ? `, true` : ``})${isTS ? `!` : ``}`);\r\n        if (i < assets.length - 1) {\r\n            newline();\r\n        }\r\n    }\r\n}\r\nfunction genHoists(hoists, context) {\r\n    if (!hoists.length) {\r\n        return;\r\n    }\r\n    context.pure = true;\r\n    const { push, newline, helper, scopeId, mode } = context;\r\n    newline();\r\n    for (let i = 0; i < hoists.length; i++) {\r\n        const exp = hoists[i];\r\n        if (exp) {\r\n            push(`const _hoisted_${i + 1} = ${``}`);\r\n            genNode(exp, context);\r\n            newline();\r\n        }\r\n    }\r\n    context.pure = false;\r\n}\r\nfunction isText$1(n) {\r\n    return (isString(n) ||\r\n        n.type === 4 /* SIMPLE_EXPRESSION */ ||\r\n        n.type === 2 /* TEXT */ ||\r\n        n.type === 5 /* INTERPOLATION */ ||\r\n        n.type === 8 /* COMPOUND_EXPRESSION */);\r\n}\r\nfunction genNodeListAsArray(nodes, context) {\r\n    const multilines = nodes.length > 3 ||\r\n        (((process.env.NODE_ENV !== 'production')) && nodes.some(n => isArray(n) || !isText$1(n)));\r\n    context.push(`[`);\r\n    multilines && context.indent();\r\n    genNodeList(nodes, context, multilines);\r\n    multilines && context.deindent();\r\n    context.push(`]`);\r\n}\r\nfunction genNodeList(nodes, context, multilines = false, comma = true) {\r\n    const { push, newline } = context;\r\n    for (let i = 0; i < nodes.length; i++) {\r\n        const node = nodes[i];\r\n        if (isString(node)) {\r\n            push(node);\r\n        }\r\n        else if (isArray(node)) {\r\n            genNodeListAsArray(node, context);\r\n        }\r\n        else {\r\n            genNode(node, context);\r\n        }\r\n        if (i < nodes.length - 1) {\r\n            if (multilines) {\r\n                comma && push(',');\r\n                newline();\r\n            }\r\n            else {\r\n                comma && push(', ');\r\n            }\r\n        }\r\n    }\r\n}\r\nfunction genNode(node, context) {\r\n    if (isString(node)) {\r\n        context.push(node);\r\n        return;\r\n    }\r\n    if (isSymbol(node)) {\r\n        context.push(context.helper(node));\r\n        return;\r\n    }\r\n    switch (node.type) {\r\n        case 1 /* ELEMENT */:\r\n        case 9 /* IF */:\r\n        case 11 /* FOR */:\r\n            (process.env.NODE_ENV !== 'production') &&\r\n                assert(node.codegenNode != null, `Codegen node is missing for element/if/for node. ` +\r\n                    `Apply appropriate transforms first.`);\r\n            genNode(node.codegenNode, context);\r\n            break;\r\n        case 2 /* TEXT */:\r\n            genText(node, context);\r\n            break;\r\n        case 4 /* SIMPLE_EXPRESSION */:\r\n            genExpression(node, context);\r\n            break;\r\n        case 5 /* INTERPOLATION */:\r\n            genInterpolation(node, context);\r\n            break;\r\n        case 12 /* TEXT_CALL */:\r\n            genNode(node.codegenNode, context);\r\n            break;\r\n        case 8 /* COMPOUND_EXPRESSION */:\r\n            genCompoundExpression(node, context);\r\n            break;\r\n        case 3 /* COMMENT */:\r\n            genComment(node, context);\r\n            break;\r\n        case 13 /* VNODE_CALL */:\r\n            genVNodeCall(node, context);\r\n            break;\r\n        case 14 /* JS_CALL_EXPRESSION */:\r\n            genCallExpression(node, context);\r\n            break;\r\n        case 15 /* JS_OBJECT_EXPRESSION */:\r\n            genObjectExpression(node, context);\r\n            break;\r\n        case 17 /* JS_ARRAY_EXPRESSION */:\r\n            genArrayExpression(node, context);\r\n            break;\r\n        case 18 /* JS_FUNCTION_EXPRESSION */:\r\n            genFunctionExpression(node, context);\r\n            break;\r\n        case 19 /* JS_CONDITIONAL_EXPRESSION */:\r\n            genConditionalExpression(node, context);\r\n            break;\r\n        case 20 /* JS_CACHE_EXPRESSION */:\r\n            genCacheExpression(node, context);\r\n            break;\r\n        case 21 /* JS_BLOCK_STATEMENT */:\r\n            genNodeList(node.body, context, true, false);\r\n            break;\r\n        // SSR only types\r\n        case 22 /* JS_TEMPLATE_LITERAL */:\r\n            break;\r\n        case 23 /* JS_IF_STATEMENT */:\r\n            break;\r\n        case 24 /* JS_ASSIGNMENT_EXPRESSION */:\r\n            break;\r\n        case 25 /* JS_SEQUENCE_EXPRESSION */:\r\n            break;\r\n        case 26 /* JS_RETURN_STATEMENT */:\r\n            break;\r\n        /* istanbul ignore next */\r\n        case 10 /* IF_BRANCH */:\r\n            // noop\r\n            break;\r\n        default:\r\n            if ((process.env.NODE_ENV !== 'production')) {\r\n                assert(false, `unhandled codegen node type: ${node.type}`);\r\n                // make sure we exhaust all possible types\r\n                const exhaustiveCheck = node;\r\n                return exhaustiveCheck;\r\n            }\r\n    }\r\n}\r\nfunction genText(node, context) {\r\n    context.push(JSON.stringify(node.content), node);\r\n}\r\nfunction genExpression(node, context) {\r\n    const { content, isStatic } = node;\r\n    context.push(isStatic ? JSON.stringify(content) : content, node);\r\n}\r\nfunction genInterpolation(node, context) {\r\n    const { push, helper, pure } = context;\r\n    if (pure)\r\n        push(PURE_ANNOTATION);\r\n    push(`${helper(TO_DISPLAY_STRING)}(`);\r\n    genNode(node.content, context);\r\n    push(`)`);\r\n}\r\nfunction genCompoundExpression(node, context) {\r\n    for (let i = 0; i < node.children.length; i++) {\r\n        const child = node.children[i];\r\n        if (isString(child)) {\r\n            context.push(child);\r\n        }\r\n        else {\r\n            genNode(child, context);\r\n        }\r\n    }\r\n}\r\nfunction genExpressionAsPropertyKey(node, context) {\r\n    const { push } = context;\r\n    if (node.type === 8 /* COMPOUND_EXPRESSION */) {\r\n        push(`[`);\r\n        genCompoundExpression(node, context);\r\n        push(`]`);\r\n    }\r\n    else if (node.isStatic) {\r\n        // only quote keys if necessary\r\n        const text = isSimpleIdentifier(node.content)\r\n            ? node.content\r\n            : JSON.stringify(node.content);\r\n        push(text, node);\r\n    }\r\n    else {\r\n        push(`[${node.content}]`, node);\r\n    }\r\n}\r\nfunction genComment(node, context) {\r\n    const { push, helper, pure } = context;\r\n    if (pure) {\r\n        push(PURE_ANNOTATION);\r\n    }\r\n    push(`${helper(CREATE_COMMENT)}(${JSON.stringify(node.content)})`, node);\r\n}\r\nfunction genVNodeCall(node, context) {\r\n    const { push, helper, pure } = context;\r\n    const { tag, props, children, patchFlag, dynamicProps, directives, isBlock, disableTracking, isComponent } = node;\r\n    if (directives) {\r\n        push(helper(WITH_DIRECTIVES) + `(`);\r\n    }\r\n    if (isBlock) {\r\n        push(`(${helper(OPEN_BLOCK)}(${disableTracking ? `true` : ``}), `);\r\n    }\r\n    if (pure) {\r\n        push(PURE_ANNOTATION);\r\n    }\r\n    const callHelper = isBlock\r\n        ? getVNodeBlockHelper(context.inSSR, isComponent)\r\n        : getVNodeHelper(context.inSSR, isComponent);\r\n    push(helper(callHelper) + `(`, node);\r\n    genNodeList(genNullableArgs([tag, props, children, patchFlag, dynamicProps]), context);\r\n    push(`)`);\r\n    if (isBlock) {\r\n        push(`)`);\r\n    }\r\n    if (directives) {\r\n        push(`, `);\r\n        genNode(directives, context);\r\n        push(`)`);\r\n    }\r\n}\r\nfunction genNullableArgs(args) {\r\n    let i = args.length;\r\n    while (i--) {\r\n        if (args[i] != null)\r\n            break;\r\n    }\r\n    return args.slice(0, i + 1).map(arg => arg || `null`);\r\n}\r\n// JavaScript\r\nfunction genCallExpression(node, context) {\r\n    const { push, helper, pure } = context;\r\n    const callee = isString(node.callee) ? node.callee : helper(node.callee);\r\n    if (pure) {\r\n        push(PURE_ANNOTATION);\r\n    }\r\n    push(callee + `(`, node);\r\n    genNodeList(node.arguments, context);\r\n    push(`)`);\r\n}\r\nfunction genObjectExpression(node, context) {\r\n    const { push, indent, deindent, newline } = context;\r\n    const { properties } = node;\r\n    if (!properties.length) {\r\n        push(`{}`, node);\r\n        return;\r\n    }\r\n    const multilines = properties.length > 1 ||\r\n        (((process.env.NODE_ENV !== 'production')) &&\r\n            properties.some(p => p.value.type !== 4 /* SIMPLE_EXPRESSION */));\r\n    push(multilines ? `{` : `{ `);\r\n    multilines && indent();\r\n    for (let i = 0; i < properties.length; i++) {\r\n        const { key, value } = properties[i];\r\n        // key\r\n        genExpressionAsPropertyKey(key, context);\r\n        push(`: `);\r\n        // value\r\n        genNode(value, context);\r\n        if (i < properties.length - 1) {\r\n            // will only reach this if it's multilines\r\n            push(`,`);\r\n            newline();\r\n        }\r\n    }\r\n    multilines && deindent();\r\n    push(multilines ? `}` : ` }`);\r\n}\r\nfunction genArrayExpression(node, context) {\r\n    genNodeListAsArray(node.elements, context);\r\n}\r\nfunction genFunctionExpression(node, context) {\r\n    const { push, indent, deindent } = context;\r\n    const { params, returns, body, newline, isSlot } = node;\r\n    if (isSlot) {\r\n        // wrap slot functions with owner context\r\n        push(`_${helperNameMap[WITH_CTX]}(`);\r\n    }\r\n    push(`(`, node);\r\n    if (isArray(params)) {\r\n        genNodeList(params, context);\r\n    }\r\n    else if (params) {\r\n        genNode(params, context);\r\n    }\r\n    push(`) => `);\r\n    if (newline || body) {\r\n        push(`{`);\r\n        indent();\r\n    }\r\n    if (returns) {\r\n        if (newline) {\r\n            push(`return `);\r\n        }\r\n        if (isArray(returns)) {\r\n            genNodeListAsArray(returns, context);\r\n        }\r\n        else {\r\n            genNode(returns, context);\r\n        }\r\n    }\r\n    else if (body) {\r\n        genNode(body, context);\r\n    }\r\n    if (newline || body) {\r\n        deindent();\r\n        push(`}`);\r\n    }\r\n    if (isSlot) {\r\n        if (node.isNonScopedSlot) {\r\n            push(`, undefined, true`);\r\n        }\r\n        push(`)`);\r\n    }\r\n}\r\nfunction genConditionalExpression(node, context) {\r\n    const { test, consequent, alternate, newline: needNewline } = node;\r\n    const { push, indent, deindent, newline } = context;\r\n    if (test.type === 4 /* SIMPLE_EXPRESSION */) {\r\n        const needsParens = !isSimpleIdentifier(test.content);\r\n        needsParens && push(`(`);\r\n        genExpression(test, context);\r\n        needsParens && push(`)`);\r\n    }\r\n    else {\r\n        push(`(`);\r\n        genNode(test, context);\r\n        push(`)`);\r\n    }\r\n    needNewline && indent();\r\n    context.indentLevel++;\r\n    needNewline || push(` `);\r\n    push(`? `);\r\n    genNode(consequent, context);\r\n    context.indentLevel--;\r\n    needNewline && newline();\r\n    needNewline || push(` `);\r\n    push(`: `);\r\n    const isNested = alternate.type === 19 /* JS_CONDITIONAL_EXPRESSION */;\r\n    if (!isNested) {\r\n        context.indentLevel++;\r\n    }\r\n    genNode(alternate, context);\r\n    if (!isNested) {\r\n        context.indentLevel--;\r\n    }\r\n    needNewline && deindent(true /* without newline */);\r\n}\r\nfunction genCacheExpression(node, context) {\r\n    const { push, helper, indent, deindent, newline } = context;\r\n    push(`_cache[${node.index}] || (`);\r\n    if (node.isVNode) {\r\n        indent();\r\n        push(`${helper(SET_BLOCK_TRACKING)}(-1),`);\r\n        newline();\r\n    }\r\n    push(`_cache[${node.index}] = `);\r\n    genNode(node.value, context);\r\n    if (node.isVNode) {\r\n        push(`,`);\r\n        newline();\r\n        push(`${helper(SET_BLOCK_TRACKING)}(1),`);\r\n        newline();\r\n        push(`_cache[${node.index}]`);\r\n        deindent();\r\n    }\r\n    push(`)`);\r\n}\n\nfunction walkIdentifiers(root, onIdentifier, includeAll = false, parentStack = [], knownIds = Object.create(null)) {\r\n    {\r\n        return;\r\n    }\r\n}\r\nfunction isReferencedIdentifier(id, parent, parentStack) {\r\n    {\r\n        return false;\r\n    }\r\n}\r\nfunction isInDestructureAssignment(parent, parentStack) {\r\n    if (parent &&\r\n        (parent.type === 'ObjectProperty' || parent.type === 'ArrayPattern')) {\r\n        let i = parentStack.length;\r\n        while (i--) {\r\n            const p = parentStack[i];\r\n            if (p.type === 'AssignmentExpression') {\r\n                return true;\r\n            }\r\n            else if (p.type !== 'ObjectProperty' && !p.type.endsWith('Pattern')) {\r\n                break;\r\n            }\r\n        }\r\n    }\r\n    return false;\r\n}\r\nfunction walkFunctionParams(node, onIdent) {\r\n    for (const p of node.params) {\r\n        for (const id of extractIdentifiers(p)) {\r\n            onIdent(id);\r\n        }\r\n    }\r\n}\r\nfunction walkBlockDeclarations(block, onIdent) {\r\n    for (const stmt of block.body) {\r\n        if (stmt.type === 'VariableDeclaration') {\r\n            if (stmt.declare)\r\n                continue;\r\n            for (const decl of stmt.declarations) {\r\n                for (const id of extractIdentifiers(decl.id)) {\r\n                    onIdent(id);\r\n                }\r\n            }\r\n        }\r\n        else if (stmt.type === 'FunctionDeclaration' ||\r\n            stmt.type === 'ClassDeclaration') {\r\n            if (stmt.declare || !stmt.id)\r\n                continue;\r\n            onIdent(stmt.id);\r\n        }\r\n    }\r\n}\r\nfunction extractIdentifiers(param, nodes = []) {\r\n    switch (param.type) {\r\n        case 'Identifier':\r\n            nodes.push(param);\r\n            break;\r\n        case 'MemberExpression':\r\n            let object = param;\r\n            while (object.type === 'MemberExpression') {\r\n                object = object.object;\r\n            }\r\n            nodes.push(object);\r\n            break;\r\n        case 'ObjectPattern':\r\n            for (const prop of param.properties) {\r\n                if (prop.type === 'RestElement') {\r\n                    extractIdentifiers(prop.argument, nodes);\r\n                }\r\n                else {\r\n                    extractIdentifiers(prop.value, nodes);\r\n                }\r\n            }\r\n            break;\r\n        case 'ArrayPattern':\r\n            param.elements.forEach(element => {\r\n                if (element)\r\n                    extractIdentifiers(element, nodes);\r\n            });\r\n            break;\r\n        case 'RestElement':\r\n            extractIdentifiers(param.argument, nodes);\r\n            break;\r\n        case 'AssignmentPattern':\r\n            extractIdentifiers(param.left, nodes);\r\n            break;\r\n    }\r\n    return nodes;\r\n}\r\nconst isFunctionType = (node) => {\r\n    return /Function(?:Expression|Declaration)$|Method$/.test(node.type);\r\n};\r\nconst isStaticProperty = (node) => node &&\r\n    (node.type === 'ObjectProperty' || node.type === 'ObjectMethod') &&\r\n    !node.computed;\r\nconst isStaticPropertyKey = (node, parent) => isStaticProperty(parent) && parent.key === node;\n\n// these keywords should not appear inside expressions, but operators like\r\n// typeof, instanceof and in are allowed\r\nconst prohibitedKeywordRE = new RegExp('\\\\b' +\r\n    ('do,if,for,let,new,try,var,case,else,with,await,break,catch,class,const,' +\r\n        'super,throw,while,yield,delete,export,import,return,switch,default,' +\r\n        'extends,finally,continue,debugger,function,arguments,typeof,void')\r\n        .split(',')\r\n        .join('\\\\b|\\\\b') +\r\n    '\\\\b');\r\n// strip strings in expressions\r\nconst stripStringRE = /'(?:[^'\\\\]|\\\\.)*'|\"(?:[^\"\\\\]|\\\\.)*\"|`(?:[^`\\\\]|\\\\.)*\\$\\{|\\}(?:[^`\\\\]|\\\\.)*`|`(?:[^`\\\\]|\\\\.)*`/g;\r\n/**\r\n * Validate a non-prefixed expression.\r\n * This is only called when using the in-browser runtime compiler since it\r\n * doesn't prefix expressions.\r\n */\r\nfunction validateBrowserExpression(node, context, asParams = false, asRawStatements = false) {\r\n    const exp = node.content;\r\n    // empty expressions are validated per-directive since some directives\r\n    // do allow empty expressions.\r\n    if (!exp.trim()) {\r\n        return;\r\n    }\r\n    try {\r\n        new Function(asRawStatements\r\n            ? ` ${exp} `\r\n            : `return ${asParams ? `(${exp}) => {}` : `(${exp})`}`);\r\n    }\r\n    catch (e) {\r\n        let message = e.message;\r\n        const keywordMatch = exp\r\n            .replace(stripStringRE, '')\r\n            .match(prohibitedKeywordRE);\r\n        if (keywordMatch) {\r\n            message = `avoid using JavaScript keyword as property name: \"${keywordMatch[0]}\"`;\r\n        }\r\n        context.onError(createCompilerError(44 /* X_INVALID_EXPRESSION */, node.loc, undefined, message));\r\n    }\r\n}\n\nconst transformExpression = (node, context) => {\r\n    if (node.type === 5 /* INTERPOLATION */) {\r\n        node.content = processExpression(node.content, context);\r\n    }\r\n    else if (node.type === 1 /* ELEMENT */) {\r\n        // handle directives on element\r\n        for (let i = 0; i < node.props.length; i++) {\r\n            const dir = node.props[i];\r\n            // do not process for v-on & v-for since they are special handled\r\n            if (dir.type === 7 /* DIRECTIVE */ && dir.name !== 'for') {\r\n                const exp = dir.exp;\r\n                const arg = dir.arg;\r\n                // do not process exp if this is v-on:arg - we need special handling\r\n                // for wrapping inline statements.\r\n                if (exp &&\r\n                    exp.type === 4 /* SIMPLE_EXPRESSION */ &&\r\n                    !(dir.name === 'on' && arg)) {\r\n                    dir.exp = processExpression(exp, context, \r\n                    // slot args must be processed as function params\r\n                    dir.name === 'slot');\r\n                }\r\n                if (arg && arg.type === 4 /* SIMPLE_EXPRESSION */ && !arg.isStatic) {\r\n                    dir.arg = processExpression(arg, context);\r\n                }\r\n            }\r\n        }\r\n    }\r\n};\r\n// Important: since this function uses Node.js only dependencies, it should\r\n// always be used with a leading !true check so that it can be\r\n// tree-shaken from the browser build.\r\nfunction processExpression(node, context, \r\n// some expressions like v-slot props & v-for aliases should be parsed as\r\n// function params\r\nasParams = false, \r\n// v-on handler values may contain multiple statements\r\nasRawStatements = false, localVars = Object.create(context.identifiers)) {\r\n    {\r\n        if ((process.env.NODE_ENV !== 'production')) {\r\n            // simple in-browser validation (same logic in 2.x)\r\n            validateBrowserExpression(node, context, asParams, asRawStatements);\r\n        }\r\n        return node;\r\n    }\r\n}\n\nconst transformIf = createStructuralDirectiveTransform(/^(if|else|else-if)$/, (node, dir, context) => {\r\n    return processIf(node, dir, context, (ifNode, branch, isRoot) => {\r\n        // #1587: We need to dynamically increment the key based on the current\r\n        // node's sibling nodes, since chained v-if/else branches are\r\n        // rendered at the same depth\r\n        const siblings = context.parent.children;\r\n        let i = siblings.indexOf(ifNode);\r\n        let key = 0;\r\n        while (i-- >= 0) {\r\n            const sibling = siblings[i];\r\n            if (sibling && sibling.type === 9 /* IF */) {\r\n                key += sibling.branches.length;\r\n            }\r\n        }\r\n        // Exit callback. Complete the codegenNode when all children have been\r\n        // transformed.\r\n        return () => {\r\n            if (isRoot) {\r\n                ifNode.codegenNode = createCodegenNodeForBranch(branch, key, context);\r\n            }\r\n            else {\r\n                // attach this branch's codegen node to the v-if root.\r\n                const parentCondition = getParentCondition(ifNode.codegenNode);\r\n                parentCondition.alternate = createCodegenNodeForBranch(branch, key + ifNode.branches.length - 1, context);\r\n            }\r\n        };\r\n    });\r\n});\r\n// target-agnostic transform used for both Client and SSR\r\nfunction processIf(node, dir, context, processCodegen) {\r\n    if (dir.name !== 'else' &&\r\n        (!dir.exp || !dir.exp.content.trim())) {\r\n        const loc = dir.exp ? dir.exp.loc : node.loc;\r\n        context.onError(createCompilerError(28 /* X_V_IF_NO_EXPRESSION */, dir.loc));\r\n        dir.exp = createSimpleExpression(`true`, false, loc);\r\n    }\r\n    if ((process.env.NODE_ENV !== 'production') && true && dir.exp) {\r\n        validateBrowserExpression(dir.exp, context);\r\n    }\r\n    if (dir.name === 'if') {\r\n        const branch = createIfBranch(node, dir);\r\n        const ifNode = {\r\n            type: 9 /* IF */,\r\n            loc: node.loc,\r\n            branches: [branch]\r\n        };\r\n        context.replaceNode(ifNode);\r\n        if (processCodegen) {\r\n            return processCodegen(ifNode, branch, true);\r\n        }\r\n    }\r\n    else {\r\n        // locate the adjacent v-if\r\n        const siblings = context.parent.children;\r\n        const comments = [];\r\n        let i = siblings.indexOf(node);\r\n        while (i-- >= -1) {\r\n            const sibling = siblings[i];\r\n            if ((process.env.NODE_ENV !== 'production') && sibling && sibling.type === 3 /* COMMENT */) {\r\n                context.removeNode(sibling);\r\n                comments.unshift(sibling);\r\n                continue;\r\n            }\r\n            if (sibling &&\r\n                sibling.type === 2 /* TEXT */ &&\r\n                !sibling.content.trim().length) {\r\n                context.removeNode(sibling);\r\n                continue;\r\n            }\r\n            if (sibling && sibling.type === 9 /* IF */) {\r\n                // Check if v-else was followed by v-else-if\r\n                if (dir.name === 'else-if' &&\r\n                    sibling.branches[sibling.branches.length - 1].condition === undefined) {\r\n                    context.onError(createCompilerError(30 /* X_V_ELSE_NO_ADJACENT_IF */, node.loc));\r\n                }\r\n                // move the node to the if node's branches\r\n                context.removeNode();\r\n                const branch = createIfBranch(node, dir);\r\n                if ((process.env.NODE_ENV !== 'production') &&\r\n                    comments.length &&\r\n                    // #3619 ignore comments if the v-if is direct child of <transition>\r\n                    !(context.parent &&\r\n                        context.parent.type === 1 /* ELEMENT */ &&\r\n                        isBuiltInType(context.parent.tag, 'transition'))) {\r\n                    branch.children = [...comments, ...branch.children];\r\n                }\r\n                // check if user is forcing same key on different branches\r\n                if ((process.env.NODE_ENV !== 'production') || !true) {\r\n                    const key = branch.userKey;\r\n                    if (key) {\r\n                        sibling.branches.forEach(({ userKey }) => {\r\n                            if (isSameKey(userKey, key)) {\r\n                                context.onError(createCompilerError(29 /* X_V_IF_SAME_KEY */, branch.userKey.loc));\r\n                            }\r\n                        });\r\n                    }\r\n                }\r\n                sibling.branches.push(branch);\r\n                const onExit = processCodegen && processCodegen(sibling, branch, false);\r\n                // since the branch was removed, it will not be traversed.\r\n                // make sure to traverse here.\r\n                traverseNode(branch, context);\r\n                // call on exit\r\n                if (onExit)\r\n                    onExit();\r\n                // make sure to reset currentNode after traversal to indicate this\r\n                // node has been removed.\r\n                context.currentNode = null;\r\n            }\r\n            else {\r\n                context.onError(createCompilerError(30 /* X_V_ELSE_NO_ADJACENT_IF */, node.loc));\r\n            }\r\n            break;\r\n        }\r\n    }\r\n}\r\nfunction createIfBranch(node, dir) {\r\n    return {\r\n        type: 10 /* IF_BRANCH */,\r\n        loc: node.loc,\r\n        condition: dir.name === 'else' ? undefined : dir.exp,\r\n        children: node.tagType === 3 /* TEMPLATE */ && !findDir(node, 'for')\r\n            ? node.children\r\n            : [node],\r\n        userKey: findProp(node, `key`)\r\n    };\r\n}\r\nfunction createCodegenNodeForBranch(branch, keyIndex, context) {\r\n    if (branch.condition) {\r\n        return createConditionalExpression(branch.condition, createChildrenCodegenNode(branch, keyIndex, context), \r\n        // make sure to pass in asBlock: true so that the comment node call\r\n        // closes the current block.\r\n        createCallExpression(context.helper(CREATE_COMMENT), [\r\n            (process.env.NODE_ENV !== 'production') ? '\"v-if\"' : '\"\"',\r\n            'true'\r\n        ]));\r\n    }\r\n    else {\r\n        return createChildrenCodegenNode(branch, keyIndex, context);\r\n    }\r\n}\r\nfunction createChildrenCodegenNode(branch, keyIndex, context) {\r\n    const { helper } = context;\r\n    const keyProperty = createObjectProperty(`key`, createSimpleExpression(`${keyIndex}`, false, locStub, 2 /* CAN_HOIST */));\r\n    const { children } = branch;\r\n    const firstChild = children[0];\r\n    const needFragmentWrapper = children.length !== 1 || firstChild.type !== 1 /* ELEMENT */;\r\n    if (needFragmentWrapper) {\r\n        if (children.length === 1 && firstChild.type === 11 /* FOR */) {\r\n            // optimize away nested fragments when child is a ForNode\r\n            const vnodeCall = firstChild.codegenNode;\r\n            injectProp(vnodeCall, keyProperty, context);\r\n            return vnodeCall;\r\n        }\r\n        else {\r\n            let patchFlag = 64 /* STABLE_FRAGMENT */;\r\n            let patchFlagText = PatchFlagNames[64 /* STABLE_FRAGMENT */];\r\n            // check if the fragment actually contains a single valid child with\r\n            // the rest being comments\r\n            if ((process.env.NODE_ENV !== 'production') &&\r\n                children.filter(c => c.type !== 3 /* COMMENT */).length === 1) {\r\n                patchFlag |= 2048 /* DEV_ROOT_FRAGMENT */;\r\n                patchFlagText += `, ${PatchFlagNames[2048 /* DEV_ROOT_FRAGMENT */]}`;\r\n            }\r\n            return createVNodeCall(context, helper(FRAGMENT), createObjectExpression([keyProperty]), children, patchFlag + ((process.env.NODE_ENV !== 'production') ? ` /* ${patchFlagText} */` : ``), undefined, undefined, true, false, false /* isComponent */, branch.loc);\r\n        }\r\n    }\r\n    else {\r\n        const ret = firstChild.codegenNode;\r\n        const vnodeCall = getMemoedVNodeCall(ret);\r\n        // Change createVNode to createBlock.\r\n        if (vnodeCall.type === 13 /* VNODE_CALL */) {\r\n            makeBlock(vnodeCall, context);\r\n        }\r\n        // inject branch key\r\n        injectProp(vnodeCall, keyProperty, context);\r\n        return ret;\r\n    }\r\n}\r\nfunction isSameKey(a, b) {\r\n    if (!a || a.type !== b.type) {\r\n        return false;\r\n    }\r\n    if (a.type === 6 /* ATTRIBUTE */) {\r\n        if (a.value.content !== b.value.content) {\r\n            return false;\r\n        }\r\n    }\r\n    else {\r\n        // directive\r\n        const exp = a.exp;\r\n        const branchExp = b.exp;\r\n        if (exp.type !== branchExp.type) {\r\n            return false;\r\n        }\r\n        if (exp.type !== 4 /* SIMPLE_EXPRESSION */ ||\r\n            exp.isStatic !== branchExp.isStatic ||\r\n            exp.content !== branchExp.content) {\r\n            return false;\r\n        }\r\n    }\r\n    return true;\r\n}\r\nfunction getParentCondition(node) {\r\n    while (true) {\r\n        if (node.type === 19 /* JS_CONDITIONAL_EXPRESSION */) {\r\n            if (node.alternate.type === 19 /* JS_CONDITIONAL_EXPRESSION */) {\r\n                node = node.alternate;\r\n            }\r\n            else {\r\n                return node;\r\n            }\r\n        }\r\n        else if (node.type === 20 /* JS_CACHE_EXPRESSION */) {\r\n            node = node.value;\r\n        }\r\n    }\r\n}\n\nconst transformFor = createStructuralDirectiveTransform('for', (node, dir, context) => {\r\n    const { helper, removeHelper } = context;\r\n    return processFor(node, dir, context, forNode => {\r\n        // create the loop render function expression now, and add the\r\n        // iterator on exit after all children have been traversed\r\n        const renderExp = createCallExpression(helper(RENDER_LIST), [\r\n            forNode.source\r\n        ]);\r\n        const isTemplate = isTemplateNode(node);\r\n        const memo = findDir(node, 'memo');\r\n        const keyProp = findProp(node, `key`);\r\n        const keyExp = keyProp &&\r\n            (keyProp.type === 6 /* ATTRIBUTE */\r\n                ? createSimpleExpression(keyProp.value.content, true)\r\n                : keyProp.exp);\r\n        const keyProperty = keyProp ? createObjectProperty(`key`, keyExp) : null;\r\n        const isStableFragment = forNode.source.type === 4 /* SIMPLE_EXPRESSION */ &&\r\n            forNode.source.constType > 0 /* NOT_CONSTANT */;\r\n        const fragmentFlag = isStableFragment\r\n            ? 64 /* STABLE_FRAGMENT */\r\n            : keyProp\r\n                ? 128 /* KEYED_FRAGMENT */\r\n                : 256 /* UNKEYED_FRAGMENT */;\r\n        forNode.codegenNode = createVNodeCall(context, helper(FRAGMENT), undefined, renderExp, fragmentFlag +\r\n            ((process.env.NODE_ENV !== 'production') ? ` /* ${PatchFlagNames[fragmentFlag]} */` : ``), undefined, undefined, true /* isBlock */, !isStableFragment /* disableTracking */, false /* isComponent */, node.loc);\r\n        return () => {\r\n            // finish the codegen now that all children have been traversed\r\n            let childBlock;\r\n            const { children } = forNode;\r\n            // check <template v-for> key placement\r\n            if (((process.env.NODE_ENV !== 'production') || !true) && isTemplate) {\r\n                node.children.some(c => {\r\n                    if (c.type === 1 /* ELEMENT */) {\r\n                        const key = findProp(c, 'key');\r\n                        if (key) {\r\n                            context.onError(createCompilerError(33 /* X_V_FOR_TEMPLATE_KEY_PLACEMENT */, key.loc));\r\n                            return true;\r\n                        }\r\n                    }\r\n                });\r\n            }\r\n            const needFragmentWrapper = children.length !== 1 || children[0].type !== 1 /* ELEMENT */;\r\n            const slotOutlet = isSlotOutlet(node)\r\n                ? node\r\n                : isTemplate &&\r\n                    node.children.length === 1 &&\r\n                    isSlotOutlet(node.children[0])\r\n                    ? node.children[0] // api-extractor somehow fails to infer this\r\n                    : null;\r\n            if (slotOutlet) {\r\n                // <slot v-for=\"...\"> or <template v-for=\"...\"><slot/></template>\r\n                childBlock = slotOutlet.codegenNode;\r\n                if (isTemplate && keyProperty) {\r\n                    // <template v-for=\"...\" :key=\"...\"><slot/></template>\r\n                    // we need to inject the key to the renderSlot() call.\r\n                    // the props for renderSlot is passed as the 3rd argument.\r\n                    injectProp(childBlock, keyProperty, context);\r\n                }\r\n            }\r\n            else if (needFragmentWrapper) {\r\n                // <template v-for=\"...\"> with text or multi-elements\r\n                // should generate a fragment block for each loop\r\n                childBlock = createVNodeCall(context, helper(FRAGMENT), keyProperty ? createObjectExpression([keyProperty]) : undefined, node.children, 64 /* STABLE_FRAGMENT */ +\r\n                    ((process.env.NODE_ENV !== 'production')\r\n                        ? ` /* ${PatchFlagNames[64 /* STABLE_FRAGMENT */]} */`\r\n                        : ``), undefined, undefined, true, undefined, false /* isComponent */);\r\n            }\r\n            else {\r\n                // Normal element v-for. Directly use the child's codegenNode\r\n                // but mark it as a block.\r\n                childBlock = children[0]\r\n                    .codegenNode;\r\n                if (isTemplate && keyProperty) {\r\n                    injectProp(childBlock, keyProperty, context);\r\n                }\r\n                if (childBlock.isBlock !== !isStableFragment) {\r\n                    if (childBlock.isBlock) {\r\n                        // switch from block to vnode\r\n                        removeHelper(OPEN_BLOCK);\r\n                        removeHelper(getVNodeBlockHelper(context.inSSR, childBlock.isComponent));\r\n                    }\r\n                    else {\r\n                        // switch from vnode to block\r\n                        removeHelper(getVNodeHelper(context.inSSR, childBlock.isComponent));\r\n                    }\r\n                }\r\n                childBlock.isBlock = !isStableFragment;\r\n                if (childBlock.isBlock) {\r\n                    helper(OPEN_BLOCK);\r\n                    helper(getVNodeBlockHelper(context.inSSR, childBlock.isComponent));\r\n                }\r\n                else {\r\n                    helper(getVNodeHelper(context.inSSR, childBlock.isComponent));\r\n                }\r\n            }\r\n            if (memo) {\r\n                const loop = createFunctionExpression(createForLoopParams(forNode.parseResult, [\r\n                    createSimpleExpression(`_cached`)\r\n                ]));\r\n                loop.body = createBlockStatement([\r\n                    createCompoundExpression([`const _memo = (`, memo.exp, `)`]),\r\n                    createCompoundExpression([\r\n                        `if (_cached`,\r\n                        ...(keyExp ? [` && _cached.key === `, keyExp] : []),\r\n                        ` && ${context.helperString(IS_MEMO_SAME)}(_cached, _memo)) return _cached`\r\n                    ]),\r\n                    createCompoundExpression([`const _item = `, childBlock]),\r\n                    createSimpleExpression(`_item.memo = _memo`),\r\n                    createSimpleExpression(`return _item`)\r\n                ]);\r\n                renderExp.arguments.push(loop, createSimpleExpression(`_cache`), createSimpleExpression(String(context.cached++)));\r\n            }\r\n            else {\r\n                renderExp.arguments.push(createFunctionExpression(createForLoopParams(forNode.parseResult), childBlock, true /* force newline */));\r\n            }\r\n        };\r\n    });\r\n});\r\n// target-agnostic transform used for both Client and SSR\r\nfunction processFor(node, dir, context, processCodegen) {\r\n    if (!dir.exp) {\r\n        context.onError(createCompilerError(31 /* X_V_FOR_NO_EXPRESSION */, dir.loc));\r\n        return;\r\n    }\r\n    const parseResult = parseForExpression(\r\n    // can only be simple expression because vFor transform is applied\r\n    // before expression transform.\r\n    dir.exp, context);\r\n    if (!parseResult) {\r\n        context.onError(createCompilerError(32 /* X_V_FOR_MALFORMED_EXPRESSION */, dir.loc));\r\n        return;\r\n    }\r\n    const { addIdentifiers, removeIdentifiers, scopes } = context;\r\n    const { source, value, key, index } = parseResult;\r\n    const forNode = {\r\n        type: 11 /* FOR */,\r\n        loc: dir.loc,\r\n        source,\r\n        valueAlias: value,\r\n        keyAlias: key,\r\n        objectIndexAlias: index,\r\n        parseResult,\r\n        children: isTemplateNode(node) ? node.children : [node]\r\n    };\r\n    context.replaceNode(forNode);\r\n    // bookkeeping\r\n    scopes.vFor++;\r\n    const onExit = processCodegen && processCodegen(forNode);\r\n    return () => {\r\n        scopes.vFor--;\r\n        if (onExit)\r\n            onExit();\r\n    };\r\n}\r\nconst forAliasRE = /([\\s\\S]*?)\\s+(?:in|of)\\s+([\\s\\S]*)/;\r\n// This regex doesn't cover the case if key or index aliases have destructuring,\r\n// but those do not make sense in the first place, so this works in practice.\r\nconst forIteratorRE = /,([^,\\}\\]]*)(?:,([^,\\}\\]]*))?$/;\r\nconst stripParensRE = /^\\(|\\)$/g;\r\nfunction parseForExpression(input, context) {\r\n    const loc = input.loc;\r\n    const exp = input.content;\r\n    const inMatch = exp.match(forAliasRE);\r\n    if (!inMatch)\r\n        return;\r\n    const [, LHS, RHS] = inMatch;\r\n    const result = {\r\n        source: createAliasExpression(loc, RHS.trim(), exp.indexOf(RHS, LHS.length)),\r\n        value: undefined,\r\n        key: undefined,\r\n        index: undefined\r\n    };\r\n    if ((process.env.NODE_ENV !== 'production') && true) {\r\n        validateBrowserExpression(result.source, context);\r\n    }\r\n    let valueContent = LHS.trim().replace(stripParensRE, '').trim();\r\n    const trimmedOffset = LHS.indexOf(valueContent);\r\n    const iteratorMatch = valueContent.match(forIteratorRE);\r\n    if (iteratorMatch) {\r\n        valueContent = valueContent.replace(forIteratorRE, '').trim();\r\n        const keyContent = iteratorMatch[1].trim();\r\n        let keyOffset;\r\n        if (keyContent) {\r\n            keyOffset = exp.indexOf(keyContent, trimmedOffset + valueContent.length);\r\n            result.key = createAliasExpression(loc, keyContent, keyOffset);\r\n            if ((process.env.NODE_ENV !== 'production') && true) {\r\n                validateBrowserExpression(result.key, context, true);\r\n            }\r\n        }\r\n        if (iteratorMatch[2]) {\r\n            const indexContent = iteratorMatch[2].trim();\r\n            if (indexContent) {\r\n                result.index = createAliasExpression(loc, indexContent, exp.indexOf(indexContent, result.key\r\n                    ? keyOffset + keyContent.length\r\n                    : trimmedOffset + valueContent.length));\r\n                if ((process.env.NODE_ENV !== 'production') && true) {\r\n                    validateBrowserExpression(result.index, context, true);\r\n                }\r\n            }\r\n        }\r\n    }\r\n    if (valueContent) {\r\n        result.value = createAliasExpression(loc, valueContent, trimmedOffset);\r\n        if ((process.env.NODE_ENV !== 'production') && true) {\r\n            validateBrowserExpression(result.value, context, true);\r\n        }\r\n    }\r\n    return result;\r\n}\r\nfunction createAliasExpression(range, content, offset) {\r\n    return createSimpleExpression(content, false, getInnerRange(range, offset, content.length));\r\n}\r\nfunction createForLoopParams({ value, key, index }, memoArgs = []) {\r\n    return createParamsList([value, key, index, ...memoArgs]);\r\n}\r\nfunction createParamsList(args) {\r\n    let i = args.length;\r\n    while (i--) {\r\n        if (args[i])\r\n            break;\r\n    }\r\n    return args\r\n        .slice(0, i + 1)\r\n        .map((arg, i) => arg || createSimpleExpression(`_`.repeat(i + 1), false));\r\n}\n\nconst defaultFallback = createSimpleExpression(`undefined`, false);\r\n// A NodeTransform that:\r\n// 1. Tracks scope identifiers for scoped slots so that they don't get prefixed\r\n//    by transformExpression. This is only applied in non-browser builds with\r\n//    { prefixIdentifiers: true }.\r\n// 2. Track v-slot depths so that we know a slot is inside another slot.\r\n//    Note the exit callback is executed before buildSlots() on the same node,\r\n//    so only nested slots see positive numbers.\r\nconst trackSlotScopes = (node, context) => {\r\n    if (node.type === 1 /* ELEMENT */ &&\r\n        (node.tagType === 1 /* COMPONENT */ ||\r\n            node.tagType === 3 /* TEMPLATE */)) {\r\n        // We are only checking non-empty v-slot here\r\n        // since we only care about slots that introduce scope variables.\r\n        const vSlot = findDir(node, 'slot');\r\n        if (vSlot) {\r\n            vSlot.exp;\r\n            context.scopes.vSlot++;\r\n            return () => {\r\n                context.scopes.vSlot--;\r\n            };\r\n        }\r\n    }\r\n};\r\n// A NodeTransform that tracks scope identifiers for scoped slots with v-for.\r\n// This transform is only applied in non-browser builds with { prefixIdentifiers: true }\r\nconst trackVForSlotScopes = (node, context) => {\r\n    let vFor;\r\n    if (isTemplateNode(node) &&\r\n        node.props.some(isVSlot) &&\r\n        (vFor = findDir(node, 'for'))) {\r\n        const result = (vFor.parseResult = parseForExpression(vFor.exp, context));\r\n        if (result) {\r\n            const { value, key, index } = result;\r\n            const { addIdentifiers, removeIdentifiers } = context;\r\n            value && addIdentifiers(value);\r\n            key && addIdentifiers(key);\r\n            index && addIdentifiers(index);\r\n            return () => {\r\n                value && removeIdentifiers(value);\r\n                key && removeIdentifiers(key);\r\n                index && removeIdentifiers(index);\r\n            };\r\n        }\r\n    }\r\n};\r\nconst buildClientSlotFn = (props, children, loc) => createFunctionExpression(props, children, false /* newline */, true /* isSlot */, children.length ? children[0].loc : loc);\r\n// Instead of being a DirectiveTransform, v-slot processing is called during\r\n// transformElement to build the slots object for a component.\r\nfunction buildSlots(node, context, buildSlotFn = buildClientSlotFn) {\r\n    context.helper(WITH_CTX);\r\n    const { children, loc } = node;\r\n    const slotsProperties = [];\r\n    const dynamicSlots = [];\r\n    // If the slot is inside a v-for or another v-slot, force it to be dynamic\r\n    // since it likely uses a scope variable.\r\n    let hasDynamicSlots = context.scopes.vSlot > 0 || context.scopes.vFor > 0;\r\n    // 1. Check for slot with slotProps on component itself.\r\n    //    <Comp v-slot=\"{ prop }\"/>\r\n    const onComponentSlot = findDir(node, 'slot', true);\r\n    if (onComponentSlot) {\r\n        const { arg, exp } = onComponentSlot;\r\n        if (arg && !isStaticExp(arg)) {\r\n            hasDynamicSlots = true;\r\n        }\r\n        slotsProperties.push(createObjectProperty(arg || createSimpleExpression('default', true), buildSlotFn(exp, children, loc)));\r\n    }\r\n    // 2. Iterate through children and check for template slots\r\n    //    <template v-slot:foo=\"{ prop }\">\r\n    let hasTemplateSlots = false;\r\n    let hasNamedDefaultSlot = false;\r\n    const implicitDefaultChildren = [];\r\n    const seenSlotNames = new Set();\r\n    for (let i = 0; i < children.length; i++) {\r\n        const slotElement = children[i];\r\n        let slotDir;\r\n        if (!isTemplateNode(slotElement) ||\r\n            !(slotDir = findDir(slotElement, 'slot', true))) {\r\n            // not a <template v-slot>, skip.\r\n            if (slotElement.type !== 3 /* COMMENT */) {\r\n                implicitDefaultChildren.push(slotElement);\r\n            }\r\n            continue;\r\n        }\r\n        if (onComponentSlot) {\r\n            // already has on-component slot - this is incorrect usage.\r\n            context.onError(createCompilerError(37 /* X_V_SLOT_MIXED_SLOT_USAGE */, slotDir.loc));\r\n            break;\r\n        }\r\n        hasTemplateSlots = true;\r\n        const { children: slotChildren, loc: slotLoc } = slotElement;\r\n        const { arg: slotName = createSimpleExpression(`default`, true), exp: slotProps, loc: dirLoc } = slotDir;\r\n        // check if name is dynamic.\r\n        let staticSlotName;\r\n        if (isStaticExp(slotName)) {\r\n            staticSlotName = slotName ? slotName.content : `default`;\r\n        }\r\n        else {\r\n            hasDynamicSlots = true;\r\n        }\r\n        const slotFunction = buildSlotFn(slotProps, slotChildren, slotLoc);\r\n        // check if this slot is conditional (v-if/v-for)\r\n        let vIf;\r\n        let vElse;\r\n        let vFor;\r\n        if ((vIf = findDir(slotElement, 'if'))) {\r\n            hasDynamicSlots = true;\r\n            dynamicSlots.push(createConditionalExpression(vIf.exp, buildDynamicSlot(slotName, slotFunction), defaultFallback));\r\n        }\r\n        else if ((vElse = findDir(slotElement, /^else(-if)?$/, true /* allowEmpty */))) {\r\n            // find adjacent v-if\r\n            let j = i;\r\n            let prev;\r\n            while (j--) {\r\n                prev = children[j];\r\n                if (prev.type !== 3 /* COMMENT */) {\r\n                    break;\r\n                }\r\n            }\r\n            if (prev && isTemplateNode(prev) && findDir(prev, 'if')) {\r\n                // remove node\r\n                children.splice(i, 1);\r\n                i--;\r\n                // attach this slot to previous conditional\r\n                let conditional = dynamicSlots[dynamicSlots.length - 1];\r\n                while (conditional.alternate.type === 19 /* JS_CONDITIONAL_EXPRESSION */) {\r\n                    conditional = conditional.alternate;\r\n                }\r\n                conditional.alternate = vElse.exp\r\n                    ? createConditionalExpression(vElse.exp, buildDynamicSlot(slotName, slotFunction), defaultFallback)\r\n                    : buildDynamicSlot(slotName, slotFunction);\r\n            }\r\n            else {\r\n                context.onError(createCompilerError(30 /* X_V_ELSE_NO_ADJACENT_IF */, vElse.loc));\r\n            }\r\n        }\r\n        else if ((vFor = findDir(slotElement, 'for'))) {\r\n            hasDynamicSlots = true;\r\n            const parseResult = vFor.parseResult ||\r\n                parseForExpression(vFor.exp, context);\r\n            if (parseResult) {\r\n                // Render the dynamic slots as an array and add it to the createSlot()\r\n                // args. The runtime knows how to handle it appropriately.\r\n                dynamicSlots.push(createCallExpression(context.helper(RENDER_LIST), [\r\n                    parseResult.source,\r\n                    createFunctionExpression(createForLoopParams(parseResult), buildDynamicSlot(slotName, slotFunction), true /* force newline */)\r\n                ]));\r\n            }\r\n            else {\r\n                context.onError(createCompilerError(32 /* X_V_FOR_MALFORMED_EXPRESSION */, vFor.loc));\r\n            }\r\n        }\r\n        else {\r\n            // check duplicate static names\r\n            if (staticSlotName) {\r\n                if (seenSlotNames.has(staticSlotName)) {\r\n                    context.onError(createCompilerError(38 /* X_V_SLOT_DUPLICATE_SLOT_NAMES */, dirLoc));\r\n                    continue;\r\n                }\r\n                seenSlotNames.add(staticSlotName);\r\n                if (staticSlotName === 'default') {\r\n                    hasNamedDefaultSlot = true;\r\n                }\r\n            }\r\n            slotsProperties.push(createObjectProperty(slotName, slotFunction));\r\n        }\r\n    }\r\n    if (!onComponentSlot) {\r\n        const buildDefaultSlotProperty = (props, children) => {\r\n            const fn = buildSlotFn(props, children, loc);\r\n            if (context.compatConfig) {\r\n                fn.isNonScopedSlot = true;\r\n            }\r\n            return createObjectProperty(`default`, fn);\r\n        };\r\n        if (!hasTemplateSlots) {\r\n            // implicit default slot (on component)\r\n            slotsProperties.push(buildDefaultSlotProperty(undefined, children));\r\n        }\r\n        else if (implicitDefaultChildren.length &&\r\n            // #3766\r\n            // with whitespace: 'preserve', whitespaces between slots will end up in\r\n            // implicitDefaultChildren. Ignore if all implicit children are whitespaces.\r\n            implicitDefaultChildren.some(node => isNonWhitespaceContent(node))) {\r\n            // implicit default slot (mixed with named slots)\r\n            if (hasNamedDefaultSlot) {\r\n                context.onError(createCompilerError(39 /* X_V_SLOT_EXTRANEOUS_DEFAULT_SLOT_CHILDREN */, implicitDefaultChildren[0].loc));\r\n            }\r\n            else {\r\n                slotsProperties.push(buildDefaultSlotProperty(undefined, implicitDefaultChildren));\r\n            }\r\n        }\r\n    }\r\n    const slotFlag = hasDynamicSlots\r\n        ? 2 /* DYNAMIC */\r\n        : hasForwardedSlots(node.children)\r\n            ? 3 /* FORWARDED */\r\n            : 1 /* STABLE */;\r\n    let slots = createObjectExpression(slotsProperties.concat(createObjectProperty(`_`, \r\n    // 2 = compiled but dynamic = can skip normalization, but must run diff\r\n    // 1 = compiled and static = can skip normalization AND diff as optimized\r\n    createSimpleExpression(slotFlag + ((process.env.NODE_ENV !== 'production') ? ` /* ${slotFlagsText[slotFlag]} */` : ``), false))), loc);\r\n    if (dynamicSlots.length) {\r\n        slots = createCallExpression(context.helper(CREATE_SLOTS), [\r\n            slots,\r\n            createArrayExpression(dynamicSlots)\r\n        ]);\r\n    }\r\n    return {\r\n        slots,\r\n        hasDynamicSlots\r\n    };\r\n}\r\nfunction buildDynamicSlot(name, fn) {\r\n    return createObjectExpression([\r\n        createObjectProperty(`name`, name),\r\n        createObjectProperty(`fn`, fn)\r\n    ]);\r\n}\r\nfunction hasForwardedSlots(children) {\r\n    for (let i = 0; i < children.length; i++) {\r\n        const child = children[i];\r\n        switch (child.type) {\r\n            case 1 /* ELEMENT */:\r\n                if (child.tagType === 2 /* SLOT */ ||\r\n                    hasForwardedSlots(child.children)) {\r\n                    return true;\r\n                }\r\n                break;\r\n            case 9 /* IF */:\r\n                if (hasForwardedSlots(child.branches))\r\n                    return true;\r\n                break;\r\n            case 10 /* IF_BRANCH */:\r\n            case 11 /* FOR */:\r\n                if (hasForwardedSlots(child.children))\r\n                    return true;\r\n                break;\r\n        }\r\n    }\r\n    return false;\r\n}\r\nfunction isNonWhitespaceContent(node) {\r\n    if (node.type !== 2 /* TEXT */ && node.type !== 12 /* TEXT_CALL */)\r\n        return true;\r\n    return node.type === 2 /* TEXT */\r\n        ? !!node.content.trim()\r\n        : isNonWhitespaceContent(node.content);\r\n}\n\n// some directive transforms (e.g. v-model) may return a symbol for runtime\r\n// import, which should be used instead of a resolveDirective call.\r\nconst directiveImportMap = new WeakMap();\r\n// generate a JavaScript AST for this element's codegen\r\nconst transformElement = (node, context) => {\r\n    // perform the work on exit, after all child expressions have been\r\n    // processed and merged.\r\n    return function postTransformElement() {\r\n        node = context.currentNode;\r\n        if (!(node.type === 1 /* ELEMENT */ &&\r\n            (node.tagType === 0 /* ELEMENT */ ||\r\n                node.tagType === 1 /* COMPONENT */))) {\r\n            return;\r\n        }\r\n        const { tag, props } = node;\r\n        const isComponent = node.tagType === 1 /* COMPONENT */;\r\n        // The goal of the transform is to create a codegenNode implementing the\r\n        // VNodeCall interface.\r\n        let vnodeTag = isComponent\r\n            ? resolveComponentType(node, context)\r\n            : `\"${tag}\"`;\r\n        const isDynamicComponent = isObject(vnodeTag) && vnodeTag.callee === RESOLVE_DYNAMIC_COMPONENT;\r\n        let vnodeProps;\r\n        let vnodeChildren;\r\n        let vnodePatchFlag;\r\n        let patchFlag = 0;\r\n        let vnodeDynamicProps;\r\n        let dynamicPropNames;\r\n        let vnodeDirectives;\r\n        let shouldUseBlock = \r\n        // dynamic component may resolve to plain elements\r\n        isDynamicComponent ||\r\n            vnodeTag === TELEPORT ||\r\n            vnodeTag === SUSPENSE ||\r\n            (!isComponent &&\r\n                // <svg> and <foreignObject> must be forced into blocks so that block\r\n                // updates inside get proper isSVG flag at runtime. (#639, #643)\r\n                // This is technically web-specific, but splitting the logic out of core\r\n                // leads to too much unnecessary complexity.\r\n                (tag === 'svg' || tag === 'foreignObject'));\r\n        // props\r\n        if (props.length > 0) {\r\n            const propsBuildResult = buildProps(node, context);\r\n            vnodeProps = propsBuildResult.props;\r\n            patchFlag = propsBuildResult.patchFlag;\r\n            dynamicPropNames = propsBuildResult.dynamicPropNames;\r\n            const directives = propsBuildResult.directives;\r\n            vnodeDirectives =\r\n                directives && directives.length\r\n                    ? createArrayExpression(directives.map(dir => buildDirectiveArgs(dir, context)))\r\n                    : undefined;\r\n            if (propsBuildResult.shouldUseBlock) {\r\n                shouldUseBlock = true;\r\n            }\r\n        }\r\n        // children\r\n        if (node.children.length > 0) {\r\n            if (vnodeTag === KEEP_ALIVE) {\r\n                // Although a built-in component, we compile KeepAlive with raw children\r\n                // instead of slot functions so that it can be used inside Transition\r\n                // or other Transition-wrapping HOCs.\r\n                // To ensure correct updates with block optimizations, we need to:\r\n                // 1. Force keep-alive into a block. This avoids its children being\r\n                //    collected by a parent block.\r\n                shouldUseBlock = true;\r\n                // 2. Force keep-alive to always be updated, since it uses raw children.\r\n                patchFlag |= 1024 /* DYNAMIC_SLOTS */;\r\n                if ((process.env.NODE_ENV !== 'production') && node.children.length > 1) {\r\n                    context.onError(createCompilerError(45 /* X_KEEP_ALIVE_INVALID_CHILDREN */, {\r\n                        start: node.children[0].loc.start,\r\n                        end: node.children[node.children.length - 1].loc.end,\r\n                        source: ''\r\n                    }));\r\n                }\r\n            }\r\n            const shouldBuildAsSlots = isComponent &&\r\n                // Teleport is not a real component and has dedicated runtime handling\r\n                vnodeTag !== TELEPORT &&\r\n                // explained above.\r\n                vnodeTag !== KEEP_ALIVE;\r\n            if (shouldBuildAsSlots) {\r\n                const { slots, hasDynamicSlots } = buildSlots(node, context);\r\n                vnodeChildren = slots;\r\n                if (hasDynamicSlots) {\r\n                    patchFlag |= 1024 /* DYNAMIC_SLOTS */;\r\n                }\r\n            }\r\n            else if (node.children.length === 1 && vnodeTag !== TELEPORT) {\r\n                const child = node.children[0];\r\n                const type = child.type;\r\n                // check for dynamic text children\r\n                const hasDynamicTextChild = type === 5 /* INTERPOLATION */ ||\r\n                    type === 8 /* COMPOUND_EXPRESSION */;\r\n                if (hasDynamicTextChild &&\r\n                    getConstantType(child, context) === 0 /* NOT_CONSTANT */) {\r\n                    patchFlag |= 1 /* TEXT */;\r\n                }\r\n                // pass directly if the only child is a text node\r\n                // (plain / interpolation / expression)\r\n                if (hasDynamicTextChild || type === 2 /* TEXT */) {\r\n                    vnodeChildren = child;\r\n                }\r\n                else {\r\n                    vnodeChildren = node.children;\r\n                }\r\n            }\r\n            else {\r\n                vnodeChildren = node.children;\r\n            }\r\n        }\r\n        // patchFlag & dynamicPropNames\r\n        if (patchFlag !== 0) {\r\n            if ((process.env.NODE_ENV !== 'production')) {\r\n                if (patchFlag < 0) {\r\n                    // special flags (negative and mutually exclusive)\r\n                    vnodePatchFlag = patchFlag + ` /* ${PatchFlagNames[patchFlag]} */`;\r\n                }\r\n                else {\r\n                    // bitwise flags\r\n                    const flagNames = Object.keys(PatchFlagNames)\r\n                        .map(Number)\r\n                        .filter(n => n > 0 && patchFlag & n)\r\n                        .map(n => PatchFlagNames[n])\r\n                        .join(`, `);\r\n                    vnodePatchFlag = patchFlag + ` /* ${flagNames} */`;\r\n                }\r\n            }\r\n            else {\r\n                vnodePatchFlag = String(patchFlag);\r\n            }\r\n            if (dynamicPropNames && dynamicPropNames.length) {\r\n                vnodeDynamicProps = stringifyDynamicPropNames(dynamicPropNames);\r\n            }\r\n        }\r\n        node.codegenNode = createVNodeCall(context, vnodeTag, vnodeProps, vnodeChildren, vnodePatchFlag, vnodeDynamicProps, vnodeDirectives, !!shouldUseBlock, false /* disableTracking */, isComponent, node.loc);\r\n    };\r\n};\r\nfunction resolveComponentType(node, context, ssr = false) {\r\n    let { tag } = node;\r\n    // 1. dynamic component\r\n    const isExplicitDynamic = isComponentTag(tag);\r\n    const isProp = findProp(node, 'is');\r\n    if (isProp) {\r\n        if (isExplicitDynamic ||\r\n            (isCompatEnabled(\"COMPILER_IS_ON_ELEMENT\" /* COMPILER_IS_ON_ELEMENT */, context))) {\r\n            const exp = isProp.type === 6 /* ATTRIBUTE */\r\n                ? isProp.value && createSimpleExpression(isProp.value.content, true)\r\n                : isProp.exp;\r\n            if (exp) {\r\n                return createCallExpression(context.helper(RESOLVE_DYNAMIC_COMPONENT), [\r\n                    exp\r\n                ]);\r\n            }\r\n        }\r\n        else if (isProp.type === 6 /* ATTRIBUTE */ &&\r\n            isProp.value.content.startsWith('vue:')) {\r\n            // <button is=\"vue:xxx\">\r\n            // if not <component>, only is value that starts with \"vue:\" will be\r\n            // treated as component by the parse phase and reach here, unless it's\r\n            // compat mode where all is values are considered components\r\n            tag = isProp.value.content.slice(4);\r\n        }\r\n    }\r\n    // 1.5 v-is (TODO: Deprecate)\r\n    const isDir = !isExplicitDynamic && findDir(node, 'is');\r\n    if (isDir && isDir.exp) {\r\n        return createCallExpression(context.helper(RESOLVE_DYNAMIC_COMPONENT), [\r\n            isDir.exp\r\n        ]);\r\n    }\r\n    // 2. built-in components (Teleport, Transition, KeepAlive, Suspense...)\r\n    const builtIn = isCoreComponent(tag) || context.isBuiltInComponent(tag);\r\n    if (builtIn) {\r\n        // built-ins are simply fallthroughs / have special handling during ssr\r\n        // so we don't need to import their runtime equivalents\r\n        if (!ssr)\r\n            context.helper(builtIn);\r\n        return builtIn;\r\n    }\r\n    // 5. user component (resolve)\r\n    context.helper(RESOLVE_COMPONENT);\r\n    context.components.add(tag);\r\n    return toValidAssetId(tag, `component`);\r\n}\r\nfunction buildProps(node, context, props = node.props, ssr = false) {\r\n    const { tag, loc: elementLoc, children } = node;\r\n    const isComponent = node.tagType === 1 /* COMPONENT */;\r\n    let properties = [];\r\n    const mergeArgs = [];\r\n    const runtimeDirectives = [];\r\n    const hasChildren = children.length > 0;\r\n    let shouldUseBlock = false;\r\n    // patchFlag analysis\r\n    let patchFlag = 0;\r\n    let hasRef = false;\r\n    let hasClassBinding = false;\r\n    let hasStyleBinding = false;\r\n    let hasHydrationEventBinding = false;\r\n    let hasDynamicKeys = false;\r\n    let hasVnodeHook = false;\r\n    const dynamicPropNames = [];\r\n    const analyzePatchFlag = ({ key, value }) => {\r\n        if (isStaticExp(key)) {\r\n            const name = key.content;\r\n            const isEventHandler = isOn(name);\r\n            if (!isComponent &&\r\n                isEventHandler &&\r\n                // omit the flag for click handlers because hydration gives click\r\n                // dedicated fast path.\r\n                name.toLowerCase() !== 'onclick' &&\r\n                // omit v-model handlers\r\n                name !== 'onUpdate:modelValue' &&\r\n                // omit onVnodeXXX hooks\r\n                !isReservedProp(name)) {\r\n                hasHydrationEventBinding = true;\r\n            }\r\n            if (isEventHandler && isReservedProp(name)) {\r\n                hasVnodeHook = true;\r\n            }\r\n            if (value.type === 20 /* JS_CACHE_EXPRESSION */ ||\r\n                ((value.type === 4 /* SIMPLE_EXPRESSION */ ||\r\n                    value.type === 8 /* COMPOUND_EXPRESSION */) &&\r\n                    getConstantType(value, context) > 0)) {\r\n                // skip if the prop is a cached handler or has constant value\r\n                return;\r\n            }\r\n            if (name === 'ref') {\r\n                hasRef = true;\r\n            }\r\n            else if (name === 'class') {\r\n                hasClassBinding = true;\r\n            }\r\n            else if (name === 'style') {\r\n                hasStyleBinding = true;\r\n            }\r\n            else if (name !== 'key' && !dynamicPropNames.includes(name)) {\r\n                dynamicPropNames.push(name);\r\n            }\r\n            // treat the dynamic class and style binding of the component as dynamic props\r\n            if (isComponent &&\r\n                (name === 'class' || name === 'style') &&\r\n                !dynamicPropNames.includes(name)) {\r\n                dynamicPropNames.push(name);\r\n            }\r\n        }\r\n        else {\r\n            hasDynamicKeys = true;\r\n        }\r\n    };\r\n    for (let i = 0; i < props.length; i++) {\r\n        // static attribute\r\n        const prop = props[i];\r\n        if (prop.type === 6 /* ATTRIBUTE */) {\r\n            const { loc, name, value } = prop;\r\n            let isStatic = true;\r\n            if (name === 'ref') {\r\n                hasRef = true;\r\n                if (context.scopes.vFor > 0) {\r\n                    properties.push(createObjectProperty(createSimpleExpression('ref_for', true), createSimpleExpression('true')));\r\n                }\r\n            }\r\n            // skip is on <component>, or is=\"vue:xxx\"\r\n            if (name === 'is' &&\r\n                (isComponentTag(tag) ||\r\n                    (value && value.content.startsWith('vue:')) ||\r\n                    (isCompatEnabled(\"COMPILER_IS_ON_ELEMENT\" /* COMPILER_IS_ON_ELEMENT */, context)))) {\r\n                continue;\r\n            }\r\n            properties.push(createObjectProperty(createSimpleExpression(name, true, getInnerRange(loc, 0, name.length)), createSimpleExpression(value ? value.content : '', isStatic, value ? value.loc : loc)));\r\n        }\r\n        else {\r\n            // directives\r\n            const { name, arg, exp, loc } = prop;\r\n            const isVBind = name === 'bind';\r\n            const isVOn = name === 'on';\r\n            // skip v-slot - it is handled by its dedicated transform.\r\n            if (name === 'slot') {\r\n                if (!isComponent) {\r\n                    context.onError(createCompilerError(40 /* X_V_SLOT_MISPLACED */, loc));\r\n                }\r\n                continue;\r\n            }\r\n            // skip v-once/v-memo - they are handled by dedicated transforms.\r\n            if (name === 'once' || name === 'memo') {\r\n                continue;\r\n            }\r\n            // skip v-is and :is on <component>\r\n            if (name === 'is' ||\r\n                (isVBind &&\r\n                    isStaticArgOf(arg, 'is') &&\r\n                    (isComponentTag(tag) ||\r\n                        (isCompatEnabled(\"COMPILER_IS_ON_ELEMENT\" /* COMPILER_IS_ON_ELEMENT */, context))))) {\r\n                continue;\r\n            }\r\n            // skip v-on in SSR compilation\r\n            if (isVOn && ssr) {\r\n                continue;\r\n            }\r\n            if (\r\n            // #938: elements with dynamic keys should be forced into blocks\r\n            (isVBind && isStaticArgOf(arg, 'key')) ||\r\n                // inline before-update hooks need to force block so that it is invoked\r\n                // before children\r\n                (isVOn && hasChildren && isStaticArgOf(arg, 'vue:before-update'))) {\r\n                shouldUseBlock = true;\r\n            }\r\n            if (isVBind && isStaticArgOf(arg, 'ref') && context.scopes.vFor > 0) {\r\n                properties.push(createObjectProperty(createSimpleExpression('ref_for', true), createSimpleExpression('true')));\r\n            }\r\n            // special case for v-bind and v-on with no argument\r\n            if (!arg && (isVBind || isVOn)) {\r\n                hasDynamicKeys = true;\r\n                if (exp) {\r\n                    if (properties.length) {\r\n                        mergeArgs.push(createObjectExpression(dedupeProperties(properties), elementLoc));\r\n                        properties = [];\r\n                    }\r\n                    if (isVBind) {\r\n                        {\r\n                            // 2.x v-bind object order compat\r\n                            if ((process.env.NODE_ENV !== 'production')) {\r\n                                const hasOverridableKeys = mergeArgs.some(arg => {\r\n                                    if (arg.type === 15 /* JS_OBJECT_EXPRESSION */) {\r\n                                        return arg.properties.some(({ key }) => {\r\n                                            if (key.type !== 4 /* SIMPLE_EXPRESSION */ ||\r\n                                                !key.isStatic) {\r\n                                                return true;\r\n                                            }\r\n                                            return (key.content !== 'class' &&\r\n                                                key.content !== 'style' &&\r\n                                                !isOn(key.content));\r\n                                        });\r\n                                    }\r\n                                    else {\r\n                                        // dynamic expression\r\n                                        return true;\r\n                                    }\r\n                                });\r\n                                if (hasOverridableKeys) {\r\n                                    checkCompatEnabled(\"COMPILER_V_BIND_OBJECT_ORDER\" /* COMPILER_V_BIND_OBJECT_ORDER */, context, loc);\r\n                                }\r\n                            }\r\n                            if (isCompatEnabled(\"COMPILER_V_BIND_OBJECT_ORDER\" /* COMPILER_V_BIND_OBJECT_ORDER */, context)) {\r\n                                mergeArgs.unshift(exp);\r\n                                continue;\r\n                            }\r\n                        }\r\n                        mergeArgs.push(exp);\r\n                    }\r\n                    else {\r\n                        // v-on=\"obj\" -> toHandlers(obj)\r\n                        mergeArgs.push({\r\n                            type: 14 /* JS_CALL_EXPRESSION */,\r\n                            loc,\r\n                            callee: context.helper(TO_HANDLERS),\r\n                            arguments: [exp]\r\n                        });\r\n                    }\r\n                }\r\n                else {\r\n                    context.onError(createCompilerError(isVBind\r\n                        ? 34 /* X_V_BIND_NO_EXPRESSION */\r\n                        : 35 /* X_V_ON_NO_EXPRESSION */, loc));\r\n                }\r\n                continue;\r\n            }\r\n            const directiveTransform = context.directiveTransforms[name];\r\n            if (directiveTransform) {\r\n                // has built-in directive transform.\r\n                const { props, needRuntime } = directiveTransform(prop, node, context);\r\n                !ssr && props.forEach(analyzePatchFlag);\r\n                properties.push(...props);\r\n                if (needRuntime) {\r\n                    runtimeDirectives.push(prop);\r\n                    if (isSymbol(needRuntime)) {\r\n                        directiveImportMap.set(prop, needRuntime);\r\n                    }\r\n                }\r\n            }\r\n            else if (!isBuiltInDirective(name)) {\r\n                // no built-in transform, this is a user custom directive.\r\n                runtimeDirectives.push(prop);\r\n                // custom dirs may use beforeUpdate so they need to force blocks\r\n                // to ensure before-update gets called before children update\r\n                if (hasChildren) {\r\n                    shouldUseBlock = true;\r\n                }\r\n            }\r\n        }\r\n    }\r\n    let propsExpression = undefined;\r\n    // has v-bind=\"object\" or v-on=\"object\", wrap with mergeProps\r\n    if (mergeArgs.length) {\r\n        if (properties.length) {\r\n            mergeArgs.push(createObjectExpression(dedupeProperties(properties), elementLoc));\r\n        }\r\n        if (mergeArgs.length > 1) {\r\n            propsExpression = createCallExpression(context.helper(MERGE_PROPS), mergeArgs, elementLoc);\r\n        }\r\n        else {\r\n            // single v-bind with nothing else - no need for a mergeProps call\r\n            propsExpression = mergeArgs[0];\r\n        }\r\n    }\r\n    else if (properties.length) {\r\n        propsExpression = createObjectExpression(dedupeProperties(properties), elementLoc);\r\n    }\r\n    // patchFlag analysis\r\n    if (hasDynamicKeys) {\r\n        patchFlag |= 16 /* FULL_PROPS */;\r\n    }\r\n    else {\r\n        if (hasClassBinding && !isComponent) {\r\n            patchFlag |= 2 /* CLASS */;\r\n        }\r\n        if (hasStyleBinding && !isComponent) {\r\n            patchFlag |= 4 /* STYLE */;\r\n        }\r\n        if (dynamicPropNames.length) {\r\n            patchFlag |= 8 /* PROPS */;\r\n        }\r\n        if (hasHydrationEventBinding) {\r\n            patchFlag |= 32 /* HYDRATE_EVENTS */;\r\n        }\r\n    }\r\n    if (!shouldUseBlock &&\r\n        (patchFlag === 0 || patchFlag === 32 /* HYDRATE_EVENTS */) &&\r\n        (hasRef || hasVnodeHook || runtimeDirectives.length > 0)) {\r\n        patchFlag |= 512 /* NEED_PATCH */;\r\n    }\r\n    // pre-normalize props, SSR is skipped for now\r\n    if (!context.inSSR && propsExpression) {\r\n        switch (propsExpression.type) {\r\n            case 15 /* JS_OBJECT_EXPRESSION */:\r\n                // means that there is no v-bind,\r\n                // but still need to deal with dynamic key binding\r\n                let classKeyIndex = -1;\r\n                let styleKeyIndex = -1;\r\n                let hasDynamicKey = false;\r\n                for (let i = 0; i < propsExpression.properties.length; i++) {\r\n                    const key = propsExpression.properties[i].key;\r\n                    if (isStaticExp(key)) {\r\n                        if (key.content === 'class') {\r\n                            classKeyIndex = i;\r\n                        }\r\n                        else if (key.content === 'style') {\r\n                            styleKeyIndex = i;\r\n                        }\r\n                    }\r\n                    else if (!key.isHandlerKey) {\r\n                        hasDynamicKey = true;\r\n                    }\r\n                }\r\n                const classProp = propsExpression.properties[classKeyIndex];\r\n                const styleProp = propsExpression.properties[styleKeyIndex];\r\n                // no dynamic key\r\n                if (!hasDynamicKey) {\r\n                    if (classProp && !isStaticExp(classProp.value)) {\r\n                        classProp.value = createCallExpression(context.helper(NORMALIZE_CLASS), [classProp.value]);\r\n                    }\r\n                    if (styleProp &&\r\n                        !isStaticExp(styleProp.value) &&\r\n                        // the static style is compiled into an object,\r\n                        // so use `hasStyleBinding` to ensure that it is a dynamic style binding\r\n                        (hasStyleBinding ||\r\n                            // v-bind:style and style both exist,\r\n                            // v-bind:style with static literal object\r\n                            styleProp.value.type === 17 /* JS_ARRAY_EXPRESSION */)) {\r\n                        styleProp.value = createCallExpression(context.helper(NORMALIZE_STYLE), [styleProp.value]);\r\n                    }\r\n                }\r\n                else {\r\n                    // dynamic key binding, wrap with `normalizeProps`\r\n                    propsExpression = createCallExpression(context.helper(NORMALIZE_PROPS), [propsExpression]);\r\n                }\r\n                break;\r\n            case 14 /* JS_CALL_EXPRESSION */:\r\n                // mergeProps call, do nothing\r\n                break;\r\n            default:\r\n                // single v-bind\r\n                propsExpression = createCallExpression(context.helper(NORMALIZE_PROPS), [\r\n                    createCallExpression(context.helper(GUARD_REACTIVE_PROPS), [\r\n                        propsExpression\r\n                    ])\r\n                ]);\r\n                break;\r\n        }\r\n    }\r\n    return {\r\n        props: propsExpression,\r\n        directives: runtimeDirectives,\r\n        patchFlag,\r\n        dynamicPropNames,\r\n        shouldUseBlock\r\n    };\r\n}\r\n// Dedupe props in an object literal.\r\n// Literal duplicated attributes would have been warned during the parse phase,\r\n// however, it's possible to encounter duplicated `onXXX` handlers with different\r\n// modifiers. We also need to merge static and dynamic class / style attributes.\r\n// - onXXX handlers / style: merge into array\r\n// - class: merge into single expression with concatenation\r\nfunction dedupeProperties(properties) {\r\n    const knownProps = new Map();\r\n    const deduped = [];\r\n    for (let i = 0; i < properties.length; i++) {\r\n        const prop = properties[i];\r\n        // dynamic keys are always allowed\r\n        if (prop.key.type === 8 /* COMPOUND_EXPRESSION */ || !prop.key.isStatic) {\r\n            deduped.push(prop);\r\n            continue;\r\n        }\r\n        const name = prop.key.content;\r\n        const existing = knownProps.get(name);\r\n        if (existing) {\r\n            if (name === 'style' || name === 'class' || isOn(name)) {\r\n                mergeAsArray(existing, prop);\r\n            }\r\n            // unexpected duplicate, should have emitted error during parse\r\n        }\r\n        else {\r\n            knownProps.set(name, prop);\r\n            deduped.push(prop);\r\n        }\r\n    }\r\n    return deduped;\r\n}\r\nfunction mergeAsArray(existing, incoming) {\r\n    if (existing.value.type === 17 /* JS_ARRAY_EXPRESSION */) {\r\n        existing.value.elements.push(incoming.value);\r\n    }\r\n    else {\r\n        existing.value = createArrayExpression([existing.value, incoming.value], existing.loc);\r\n    }\r\n}\r\nfunction buildDirectiveArgs(dir, context) {\r\n    const dirArgs = [];\r\n    const runtime = directiveImportMap.get(dir);\r\n    if (runtime) {\r\n        // built-in directive with runtime\r\n        dirArgs.push(context.helperString(runtime));\r\n    }\r\n    else {\r\n        {\r\n            // inject statement for resolving directive\r\n            context.helper(RESOLVE_DIRECTIVE);\r\n            context.directives.add(dir.name);\r\n            dirArgs.push(toValidAssetId(dir.name, `directive`));\r\n        }\r\n    }\r\n    const { loc } = dir;\r\n    if (dir.exp)\r\n        dirArgs.push(dir.exp);\r\n    if (dir.arg) {\r\n        if (!dir.exp) {\r\n            dirArgs.push(`void 0`);\r\n        }\r\n        dirArgs.push(dir.arg);\r\n    }\r\n    if (Object.keys(dir.modifiers).length) {\r\n        if (!dir.arg) {\r\n            if (!dir.exp) {\r\n                dirArgs.push(`void 0`);\r\n            }\r\n            dirArgs.push(`void 0`);\r\n        }\r\n        const trueExpression = createSimpleExpression(`true`, false, loc);\r\n        dirArgs.push(createObjectExpression(dir.modifiers.map(modifier => createObjectProperty(modifier, trueExpression)), loc));\r\n    }\r\n    return createArrayExpression(dirArgs, dir.loc);\r\n}\r\nfunction stringifyDynamicPropNames(props) {\r\n    let propsNamesString = `[`;\r\n    for (let i = 0, l = props.length; i < l; i++) {\r\n        propsNamesString += JSON.stringify(props[i]);\r\n        if (i < l - 1)\r\n            propsNamesString += ', ';\r\n    }\r\n    return propsNamesString + `]`;\r\n}\r\nfunction isComponentTag(tag) {\r\n    return tag === 'component' || tag === 'Component';\r\n}\n\n(process.env.NODE_ENV !== 'production')\r\n    ? Object.freeze({})\r\n    : {};\r\n(process.env.NODE_ENV !== 'production') ? Object.freeze([]) : [];\r\nconst cacheStringFunction = (fn) => {\r\n    const cache = Object.create(null);\r\n    return ((str) => {\r\n        const hit = cache[str];\r\n        return hit || (cache[str] = fn(str));\r\n    });\r\n};\r\nconst camelizeRE = /-(\\w)/g;\r\n/**\r\n * @private\r\n */\r\nconst camelize = cacheStringFunction((str) => {\r\n    return str.replace(camelizeRE, (_, c) => (c ? c.toUpperCase() : ''));\r\n});\n\nconst transformSlotOutlet = (node, context) => {\r\n    if (isSlotOutlet(node)) {\r\n        const { children, loc } = node;\r\n        const { slotName, slotProps } = processSlotOutlet(node, context);\r\n        const slotArgs = [\r\n            context.prefixIdentifiers ? `_ctx.$slots` : `$slots`,\r\n            slotName,\r\n            '{}',\r\n            'undefined',\r\n            'true'\r\n        ];\r\n        let expectedLen = 2;\r\n        if (slotProps) {\r\n            slotArgs[2] = slotProps;\r\n            expectedLen = 3;\r\n        }\r\n        if (children.length) {\r\n            slotArgs[3] = createFunctionExpression([], children, false, false, loc);\r\n            expectedLen = 4;\r\n        }\r\n        if (context.scopeId && !context.slotted) {\r\n            expectedLen = 5;\r\n        }\r\n        slotArgs.splice(expectedLen); // remove unused arguments\r\n        node.codegenNode = createCallExpression(context.helper(RENDER_SLOT), slotArgs, loc);\r\n    }\r\n};\r\nfunction processSlotOutlet(node, context) {\r\n    let slotName = `\"default\"`;\r\n    let slotProps = undefined;\r\n    const nonNameProps = [];\r\n    for (let i = 0; i < node.props.length; i++) {\r\n        const p = node.props[i];\r\n        if (p.type === 6 /* ATTRIBUTE */) {\r\n            if (p.value) {\r\n                if (p.name === 'name') {\r\n                    slotName = JSON.stringify(p.value.content);\r\n                }\r\n                else {\r\n                    p.name = camelize(p.name);\r\n                    nonNameProps.push(p);\r\n                }\r\n            }\r\n        }\r\n        else {\r\n            if (p.name === 'bind' && isStaticArgOf(p.arg, 'name')) {\r\n                if (p.exp)\r\n                    slotName = p.exp;\r\n            }\r\n            else {\r\n                if (p.name === 'bind' && p.arg && isStaticExp(p.arg)) {\r\n                    p.arg.content = camelize(p.arg.content);\r\n                }\r\n                nonNameProps.push(p);\r\n            }\r\n        }\r\n    }\r\n    if (nonNameProps.length > 0) {\r\n        const { props, directives } = buildProps(node, context, nonNameProps);\r\n        slotProps = props;\r\n        if (directives.length) {\r\n            context.onError(createCompilerError(36 /* X_V_SLOT_UNEXPECTED_DIRECTIVE_ON_SLOT_OUTLET */, directives[0].loc));\r\n        }\r\n    }\r\n    return {\r\n        slotName,\r\n        slotProps\r\n    };\r\n}\n\nconst fnExpRE = /^\\s*([\\w$_]+|(async\\s*)?\\([^)]*?\\))\\s*=>|^\\s*(async\\s+)?function(?:\\s+[\\w$]+)?\\s*\\(/;\r\nconst transformOn = (dir, node, context, augmentor) => {\r\n    const { loc, modifiers, arg } = dir;\r\n    if (!dir.exp && !modifiers.length) {\r\n        context.onError(createCompilerError(35 /* X_V_ON_NO_EXPRESSION */, loc));\r\n    }\r\n    let eventName;\r\n    if (arg.type === 4 /* SIMPLE_EXPRESSION */) {\r\n        if (arg.isStatic) {\r\n            let rawName = arg.content;\r\n            // TODO deprecate @vnodeXXX usage\r\n            if (rawName.startsWith('vue:')) {\r\n                rawName = `vnode-${rawName.slice(4)}`;\r\n            }\r\n            // for all event listeners, auto convert it to camelCase. See issue #2249\r\n            eventName = createSimpleExpression(toHandlerKey(camelize$1(rawName)), true, arg.loc);\r\n        }\r\n        else {\r\n            // #2388\r\n            eventName = createCompoundExpression([\r\n                `${context.helperString(TO_HANDLER_KEY)}(`,\r\n                arg,\r\n                `)`\r\n            ]);\r\n        }\r\n    }\r\n    else {\r\n        // already a compound expression.\r\n        eventName = arg;\r\n        eventName.children.unshift(`${context.helperString(TO_HANDLER_KEY)}(`);\r\n        eventName.children.push(`)`);\r\n    }\r\n    // handler processing\r\n    let exp = dir.exp;\r\n    if (exp && !exp.content.trim()) {\r\n        exp = undefined;\r\n    }\r\n    let shouldCache = context.cacheHandlers && !exp && !context.inVOnce;\r\n    if (exp) {\r\n        const isMemberExp = isMemberExpression(exp.content);\r\n        const isInlineStatement = !(isMemberExp || fnExpRE.test(exp.content));\r\n        const hasMultipleStatements = exp.content.includes(`;`);\r\n        if ((process.env.NODE_ENV !== 'production') && true) {\r\n            validateBrowserExpression(exp, context, false, hasMultipleStatements);\r\n        }\r\n        if (isInlineStatement || (shouldCache && isMemberExp)) {\r\n            // wrap inline statement in a function expression\r\n            exp = createCompoundExpression([\r\n                `${isInlineStatement\r\n                    ? `$event`\r\n                    : `${``}(...args)`} => ${hasMultipleStatements ? `{` : `(`}`,\r\n                exp,\r\n                hasMultipleStatements ? `}` : `)`\r\n            ]);\r\n        }\r\n    }\r\n    let ret = {\r\n        props: [\r\n            createObjectProperty(eventName, exp || createSimpleExpression(`() => {}`, false, loc))\r\n        ]\r\n    };\r\n    // apply extended compiler augmentor\r\n    if (augmentor) {\r\n        ret = augmentor(ret);\r\n    }\r\n    if (shouldCache) {\r\n        // cache handlers so that it's always the same handler being passed down.\r\n        // this avoids unnecessary re-renders when users use inline handlers on\r\n        // components.\r\n        ret.props[0].value = context.cache(ret.props[0].value);\r\n    }\r\n    // mark the key as handler for props normalization check\r\n    ret.props.forEach(p => (p.key.isHandlerKey = true));\r\n    return ret;\r\n};\n\n// v-bind without arg is handled directly in ./transformElements.ts due to it affecting\r\n// codegen for the entire props object. This transform here is only for v-bind\r\n// *with* args.\r\nconst transformBind = (dir, _node, context) => {\r\n    const { exp, modifiers, loc } = dir;\r\n    const arg = dir.arg;\r\n    if (arg.type !== 4 /* SIMPLE_EXPRESSION */) {\r\n        arg.children.unshift(`(`);\r\n        arg.children.push(`) || \"\"`);\r\n    }\r\n    else if (!arg.isStatic) {\r\n        arg.content = `${arg.content} || \"\"`;\r\n    }\r\n    // .sync is replaced by v-model:arg\r\n    if (modifiers.includes('camel')) {\r\n        if (arg.type === 4 /* SIMPLE_EXPRESSION */) {\r\n            if (arg.isStatic) {\r\n                arg.content = camelize$1(arg.content);\r\n            }\r\n            else {\r\n                arg.content = `${context.helperString(CAMELIZE)}(${arg.content})`;\r\n            }\r\n        }\r\n        else {\r\n            arg.children.unshift(`${context.helperString(CAMELIZE)}(`);\r\n            arg.children.push(`)`);\r\n        }\r\n    }\r\n    if (!context.inSSR) {\r\n        if (modifiers.includes('prop')) {\r\n            injectPrefix(arg, '.');\r\n        }\r\n        if (modifiers.includes('attr')) {\r\n            injectPrefix(arg, '^');\r\n        }\r\n    }\r\n    if (!exp ||\r\n        (exp.type === 4 /* SIMPLE_EXPRESSION */ && !exp.content.trim())) {\r\n        context.onError(createCompilerError(34 /* X_V_BIND_NO_EXPRESSION */, loc));\r\n        return {\r\n            props: [createObjectProperty(arg, createSimpleExpression('', true, loc))]\r\n        };\r\n    }\r\n    return {\r\n        props: [createObjectProperty(arg, exp)]\r\n    };\r\n};\r\nconst injectPrefix = (arg, prefix) => {\r\n    if (arg.type === 4 /* SIMPLE_EXPRESSION */) {\r\n        if (arg.isStatic) {\r\n            arg.content = prefix + arg.content;\r\n        }\r\n        else {\r\n            arg.content = `\\`${prefix}\\${${arg.content}}\\``;\r\n        }\r\n    }\r\n    else {\r\n        arg.children.unshift(`'${prefix}' + (`);\r\n        arg.children.push(`)`);\r\n    }\r\n};\n\n// Merge adjacent text nodes and expressions into a single expression\r\n// e.g. <div>abc {{ d }} {{ e }}</div> should have a single expression node as child.\r\nconst transformText = (node, context) => {\r\n    if (node.type === 0 /* ROOT */ ||\r\n        node.type === 1 /* ELEMENT */ ||\r\n        node.type === 11 /* FOR */ ||\r\n        node.type === 10 /* IF_BRANCH */) {\r\n        // perform the transform on node exit so that all expressions have already\r\n        // been processed.\r\n        return () => {\r\n            const children = node.children;\r\n            let currentContainer = undefined;\r\n            let hasText = false;\r\n            for (let i = 0; i < children.length; i++) {\r\n                const child = children[i];\r\n                if (isText(child)) {\r\n                    hasText = true;\r\n                    for (let j = i + 1; j < children.length; j++) {\r\n                        const next = children[j];\r\n                        if (isText(next)) {\r\n                            if (!currentContainer) {\r\n                                currentContainer = children[i] = {\r\n                                    type: 8 /* COMPOUND_EXPRESSION */,\r\n                                    loc: child.loc,\r\n                                    children: [child]\r\n                                };\r\n                            }\r\n                            // merge adjacent text node into current\r\n                            currentContainer.children.push(` + `, next);\r\n                            children.splice(j, 1);\r\n                            j--;\r\n                        }\r\n                        else {\r\n                            currentContainer = undefined;\r\n                            break;\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n            if (!hasText ||\r\n                // if this is a plain element with a single text child, leave it\r\n                // as-is since the runtime has dedicated fast path for this by directly\r\n                // setting textContent of the element.\r\n                // for component root it's always normalized anyway.\r\n                (children.length === 1 &&\r\n                    (node.type === 0 /* ROOT */ ||\r\n                        (node.type === 1 /* ELEMENT */ &&\r\n                            node.tagType === 0 /* ELEMENT */ &&\r\n                            // #3756\r\n                            // custom directives can potentially add DOM elements arbitrarily,\r\n                            // we need to avoid setting textContent of the element at runtime\r\n                            // to avoid accidentally overwriting the DOM elements added\r\n                            // by the user through custom directives.\r\n                            !node.props.find(p => p.type === 7 /* DIRECTIVE */ &&\r\n                                !context.directiveTransforms[p.name]) &&\r\n                            // in compat mode, <template> tags with no special directives\r\n                            // will be rendered as a fragment so its children must be\r\n                            // converted into vnodes.\r\n                            !(node.tag === 'template'))))) {\r\n                return;\r\n            }\r\n            // pre-convert text nodes into createTextVNode(text) calls to avoid\r\n            // runtime normalization.\r\n            for (let i = 0; i < children.length; i++) {\r\n                const child = children[i];\r\n                if (isText(child) || child.type === 8 /* COMPOUND_EXPRESSION */) {\r\n                    const callArgs = [];\r\n                    // createTextVNode defaults to single whitespace, so if it is a\r\n                    // single space the code could be an empty call to save bytes.\r\n                    if (child.type !== 2 /* TEXT */ || child.content !== ' ') {\r\n                        callArgs.push(child);\r\n                    }\r\n                    // mark dynamic text with flag so it gets patched inside a block\r\n                    if (!context.ssr &&\r\n                        getConstantType(child, context) === 0 /* NOT_CONSTANT */) {\r\n                        callArgs.push(1 /* TEXT */ +\r\n                            ((process.env.NODE_ENV !== 'production') ? ` /* ${PatchFlagNames[1 /* TEXT */]} */` : ``));\r\n                    }\r\n                    children[i] = {\r\n                        type: 12 /* TEXT_CALL */,\r\n                        content: child,\r\n                        loc: child.loc,\r\n                        codegenNode: createCallExpression(context.helper(CREATE_TEXT), callArgs)\r\n                    };\r\n                }\r\n            }\r\n        };\r\n    }\r\n};\n\nconst seen = new WeakSet();\r\nconst transformOnce = (node, context) => {\r\n    if (node.type === 1 /* ELEMENT */ && findDir(node, 'once', true)) {\r\n        if (seen.has(node) || context.inVOnce) {\r\n            return;\r\n        }\r\n        seen.add(node);\r\n        context.inVOnce = true;\r\n        context.helper(SET_BLOCK_TRACKING);\r\n        return () => {\r\n            context.inVOnce = false;\r\n            const cur = context.currentNode;\r\n            if (cur.codegenNode) {\r\n                cur.codegenNode = context.cache(cur.codegenNode, true /* isVNode */);\r\n            }\r\n        };\r\n    }\r\n};\n\nconst transformModel = (dir, node, context) => {\r\n    const { exp, arg } = dir;\r\n    if (!exp) {\r\n        context.onError(createCompilerError(41 /* X_V_MODEL_NO_EXPRESSION */, dir.loc));\r\n        return createTransformProps();\r\n    }\r\n    const rawExp = exp.loc.source;\r\n    const expString = exp.type === 4 /* SIMPLE_EXPRESSION */ ? exp.content : rawExp;\r\n    // im SFC <script setup> inline mode, the exp may have been transformed into\r\n    // _unref(exp)\r\n    context.bindingMetadata[rawExp];\r\n    const maybeRef = !true    /* SETUP_CONST */;\r\n    if (!expString.trim() ||\r\n        (!isMemberExpression(expString) && !maybeRef)) {\r\n        context.onError(createCompilerError(42 /* X_V_MODEL_MALFORMED_EXPRESSION */, exp.loc));\r\n        return createTransformProps();\r\n    }\r\n    const propName = arg ? arg : createSimpleExpression('modelValue', true);\r\n    const eventName = arg\r\n        ? isStaticExp(arg)\r\n            ? `onUpdate:${arg.content}`\r\n            : createCompoundExpression(['\"onUpdate:\" + ', arg])\r\n        : `onUpdate:modelValue`;\r\n    let assignmentExp;\r\n    const eventArg = context.isTS ? `($event: any)` : `$event`;\r\n    {\r\n        assignmentExp = createCompoundExpression([\r\n            `${eventArg} => ((`,\r\n            exp,\r\n            `) = $event)`\r\n        ]);\r\n    }\r\n    const props = [\r\n        // modelValue: foo\r\n        createObjectProperty(propName, dir.exp),\r\n        // \"onUpdate:modelValue\": $event => (foo = $event)\r\n        createObjectProperty(eventName, assignmentExp)\r\n    ];\r\n    // modelModifiers: { foo: true, \"bar-baz\": true }\r\n    if (dir.modifiers.length && node.tagType === 1 /* COMPONENT */) {\r\n        const modifiers = dir.modifiers\r\n            .map(m => (isSimpleIdentifier(m) ? m : JSON.stringify(m)) + `: true`)\r\n            .join(`, `);\r\n        const modifiersKey = arg\r\n            ? isStaticExp(arg)\r\n                ? `${arg.content}Modifiers`\r\n                : createCompoundExpression([arg, ' + \"Modifiers\"'])\r\n            : `modelModifiers`;\r\n        props.push(createObjectProperty(modifiersKey, createSimpleExpression(`{ ${modifiers} }`, false, dir.loc, 2 /* CAN_HOIST */)));\r\n    }\r\n    return createTransformProps(props);\r\n};\r\nfunction createTransformProps(props = []) {\r\n    return { props };\r\n}\n\nconst validDivisionCharRE = /[\\w).+\\-_$\\]]/;\r\nconst transformFilter = (node, context) => {\r\n    if (!isCompatEnabled(\"COMPILER_FILTER\" /* COMPILER_FILTERS */, context)) {\r\n        return;\r\n    }\r\n    if (node.type === 5 /* INTERPOLATION */) {\r\n        // filter rewrite is applied before expression transform so only\r\n        // simple expressions are possible at this stage\r\n        rewriteFilter(node.content, context);\r\n    }\r\n    if (node.type === 1 /* ELEMENT */) {\r\n        node.props.forEach((prop) => {\r\n            if (prop.type === 7 /* DIRECTIVE */ &&\r\n                prop.name !== 'for' &&\r\n                prop.exp) {\r\n                rewriteFilter(prop.exp, context);\r\n            }\r\n        });\r\n    }\r\n};\r\nfunction rewriteFilter(node, context) {\r\n    if (node.type === 4 /* SIMPLE_EXPRESSION */) {\r\n        parseFilter(node, context);\r\n    }\r\n    else {\r\n        for (let i = 0; i < node.children.length; i++) {\r\n            const child = node.children[i];\r\n            if (typeof child !== 'object')\r\n                continue;\r\n            if (child.type === 4 /* SIMPLE_EXPRESSION */) {\r\n                parseFilter(child, context);\r\n            }\r\n            else if (child.type === 8 /* COMPOUND_EXPRESSION */) {\r\n                rewriteFilter(node, context);\r\n            }\r\n            else if (child.type === 5 /* INTERPOLATION */) {\r\n                rewriteFilter(child.content, context);\r\n            }\r\n        }\r\n    }\r\n}\r\nfunction parseFilter(node, context) {\r\n    const exp = node.content;\r\n    let inSingle = false;\r\n    let inDouble = false;\r\n    let inTemplateString = false;\r\n    let inRegex = false;\r\n    let curly = 0;\r\n    let square = 0;\r\n    let paren = 0;\r\n    let lastFilterIndex = 0;\r\n    let c, prev, i, expression, filters = [];\r\n    for (i = 0; i < exp.length; i++) {\r\n        prev = c;\r\n        c = exp.charCodeAt(i);\r\n        if (inSingle) {\r\n            if (c === 0x27 && prev !== 0x5c)\r\n                inSingle = false;\r\n        }\r\n        else if (inDouble) {\r\n            if (c === 0x22 && prev !== 0x5c)\r\n                inDouble = false;\r\n        }\r\n        else if (inTemplateString) {\r\n            if (c === 0x60 && prev !== 0x5c)\r\n                inTemplateString = false;\r\n        }\r\n        else if (inRegex) {\r\n            if (c === 0x2f && prev !== 0x5c)\r\n                inRegex = false;\r\n        }\r\n        else if (c === 0x7c && // pipe\r\n            exp.charCodeAt(i + 1) !== 0x7c &&\r\n            exp.charCodeAt(i - 1) !== 0x7c &&\r\n            !curly &&\r\n            !square &&\r\n            !paren) {\r\n            if (expression === undefined) {\r\n                // first filter, end of expression\r\n                lastFilterIndex = i + 1;\r\n                expression = exp.slice(0, i).trim();\r\n            }\r\n            else {\r\n                pushFilter();\r\n            }\r\n        }\r\n        else {\r\n            switch (c) {\r\n                case 0x22:\r\n                    inDouble = true;\r\n                    break; // \"\r\n                case 0x27:\r\n                    inSingle = true;\r\n                    break; // '\r\n                case 0x60:\r\n                    inTemplateString = true;\r\n                    break; // `\r\n                case 0x28:\r\n                    paren++;\r\n                    break; // (\r\n                case 0x29:\r\n                    paren--;\r\n                    break; // )\r\n                case 0x5b:\r\n                    square++;\r\n                    break; // [\r\n                case 0x5d:\r\n                    square--;\r\n                    break; // ]\r\n                case 0x7b:\r\n                    curly++;\r\n                    break; // {\r\n                case 0x7d:\r\n                    curly--;\r\n                    break; // }\r\n            }\r\n            if (c === 0x2f) {\r\n                // /\r\n                let j = i - 1;\r\n                let p;\r\n                // find first non-whitespace prev char\r\n                for (; j >= 0; j--) {\r\n                    p = exp.charAt(j);\r\n                    if (p !== ' ')\r\n                        break;\r\n                }\r\n                if (!p || !validDivisionCharRE.test(p)) {\r\n                    inRegex = true;\r\n                }\r\n            }\r\n        }\r\n    }\r\n    if (expression === undefined) {\r\n        expression = exp.slice(0, i).trim();\r\n    }\r\n    else if (lastFilterIndex !== 0) {\r\n        pushFilter();\r\n    }\r\n    function pushFilter() {\r\n        filters.push(exp.slice(lastFilterIndex, i).trim());\r\n        lastFilterIndex = i + 1;\r\n    }\r\n    if (filters.length) {\r\n        (process.env.NODE_ENV !== 'production') &&\r\n            warnDeprecation(\"COMPILER_FILTER\" /* COMPILER_FILTERS */, context, node.loc);\r\n        for (i = 0; i < filters.length; i++) {\r\n            expression = wrapFilter(expression, filters[i], context);\r\n        }\r\n        node.content = expression;\r\n    }\r\n}\r\nfunction wrapFilter(exp, filter, context) {\r\n    context.helper(RESOLVE_FILTER);\r\n    const i = filter.indexOf('(');\r\n    if (i < 0) {\r\n        context.filters.add(filter);\r\n        return `${toValidAssetId(filter, 'filter')}(${exp})`;\r\n    }\r\n    else {\r\n        const name = filter.slice(0, i);\r\n        const args = filter.slice(i + 1);\r\n        context.filters.add(name);\r\n        return `${toValidAssetId(name, 'filter')}(${exp}${args !== ')' ? ',' + args : args}`;\r\n    }\r\n}\n\nconst seen$1 = new WeakSet();\r\nconst transformMemo = (node, context) => {\r\n    if (node.type === 1 /* ELEMENT */) {\r\n        const dir = findDir(node, 'memo');\r\n        if (!dir || seen$1.has(node)) {\r\n            return;\r\n        }\r\n        seen$1.add(node);\r\n        return () => {\r\n            const codegenNode = node.codegenNode ||\r\n                context.currentNode.codegenNode;\r\n            if (codegenNode && codegenNode.type === 13 /* VNODE_CALL */) {\r\n                // non-component sub tree should be turned into a block\r\n                if (node.tagType !== 1 /* COMPONENT */) {\r\n                    makeBlock(codegenNode, context);\r\n                }\r\n                node.codegenNode = createCallExpression(context.helper(WITH_MEMO), [\r\n                    dir.exp,\r\n                    createFunctionExpression(undefined, codegenNode),\r\n                    `_cache`,\r\n                    String(context.cached++)\r\n                ]);\r\n            }\r\n        };\r\n    }\r\n};\n\nfunction getBaseTransformPreset(prefixIdentifiers) {\r\n    return [\r\n        [\r\n            transformOnce,\r\n            transformIf,\r\n            transformMemo,\r\n            transformFor,\r\n            ...([transformFilter] ),\r\n            ...((process.env.NODE_ENV !== 'production')\r\n                    ? [transformExpression]\r\n                    : []),\r\n            transformSlotOutlet,\r\n            transformElement,\r\n            trackSlotScopes,\r\n            transformText\r\n        ],\r\n        {\r\n            on: transformOn,\r\n            bind: transformBind,\r\n            model: transformModel\r\n        }\r\n    ];\r\n}\r\n// we name it `baseCompile` so that higher order compilers like\r\n// @vue/compiler-dom can export `compile` while re-exporting everything else.\r\nfunction baseCompile(template, options = {}) {\r\n    const onError = options.onError || defaultOnError;\r\n    const isModuleMode = options.mode === 'module';\r\n    /* istanbul ignore if */\r\n    {\r\n        if (options.prefixIdentifiers === true) {\r\n            onError(createCompilerError(46 /* X_PREFIX_ID_NOT_SUPPORTED */));\r\n        }\r\n        else if (isModuleMode) {\r\n            onError(createCompilerError(47 /* X_MODULE_MODE_NOT_SUPPORTED */));\r\n        }\r\n    }\r\n    const prefixIdentifiers = !true ;\r\n    if (options.cacheHandlers) {\r\n        onError(createCompilerError(48 /* X_CACHE_HANDLER_NOT_SUPPORTED */));\r\n    }\r\n    if (options.scopeId && !isModuleMode) {\r\n        onError(createCompilerError(49 /* X_SCOPE_ID_NOT_SUPPORTED */));\r\n    }\r\n    const ast = isString(template) ? baseParse(template, options) : template;\r\n    const [nodeTransforms, directiveTransforms] = getBaseTransformPreset();\r\n    transform(ast, extend({}, options, {\r\n        prefixIdentifiers,\r\n        nodeTransforms: [\r\n            ...nodeTransforms,\r\n            ...(options.nodeTransforms || []) // user transforms\r\n        ],\r\n        directiveTransforms: extend({}, directiveTransforms, options.directiveTransforms || {} // user transforms\r\n        )\r\n    }));\r\n    return generate(ast, extend({}, options, {\r\n        prefixIdentifiers\r\n    }));\r\n}\n\nconst noopDirectiveTransform = () => ({ props: [] });\n\nexport { BASE_TRANSITION, CAMELIZE, CAPITALIZE, CREATE_BLOCK, CREATE_COMMENT, CREATE_ELEMENT_BLOCK, CREATE_ELEMENT_VNODE, CREATE_SLOTS, CREATE_STATIC, CREATE_TEXT, CREATE_VNODE, FRAGMENT, GUARD_REACTIVE_PROPS, IS_MEMO_SAME, IS_REF, KEEP_ALIVE, MERGE_PROPS, NORMALIZE_CLASS, NORMALIZE_PROPS, NORMALIZE_STYLE, OPEN_BLOCK, POP_SCOPE_ID, PUSH_SCOPE_ID, RENDER_LIST, RENDER_SLOT, RESOLVE_COMPONENT, RESOLVE_DIRECTIVE, RESOLVE_DYNAMIC_COMPONENT, RESOLVE_FILTER, SET_BLOCK_TRACKING, SUSPENSE, TELEPORT, TO_DISPLAY_STRING, TO_HANDLERS, TO_HANDLER_KEY, UNREF, WITH_CTX, WITH_DIRECTIVES, WITH_MEMO, advancePositionWithClone, advancePositionWithMutation, assert, baseCompile, baseParse, buildDirectiveArgs, buildProps, buildSlots, checkCompatEnabled, createArrayExpression, createAssignmentExpression, createBlockStatement, createCacheExpression, createCallExpression, createCompilerError, createCompoundExpression, createConditionalExpression, createForLoopParams, createFunctionExpression, createIfStatement, createInterpolation, createObjectExpression, createObjectProperty, createReturnStatement, createRoot, createSequenceExpression, createSimpleExpression, createStructuralDirectiveTransform, createTemplateLiteral, createTransformContext, createVNodeCall, extractIdentifiers, findDir, findProp, generate, getBaseTransformPreset, getInnerRange, getMemoedVNodeCall, getVNodeBlockHelper, getVNodeHelper, hasDynamicKeyVBind, hasScopeRef, helperNameMap, injectProp, isBuiltInType, isCoreComponent, isFunctionType, isInDestructureAssignment, isMemberExpression, isMemberExpressionBrowser, isMemberExpressionNode, isReferencedIdentifier, isSimpleIdentifier, isSlotOutlet, isStaticArgOf, isStaticExp, isStaticProperty, isStaticPropertyKey, isTemplateNode, isText, isVSlot, locStub, makeBlock, noopDirectiveTransform, processExpression, processFor, processIf, processSlotOutlet, registerRuntimeHelpers, resolveComponentType, toValidAssetId, trackSlotScopes, trackVForSlotScopes, transform, transformBind, transformElement, transformExpression, transformModel, transformOn, traverseNode, walkBlockDeclarations, walkFunctionParams, walkIdentifiers, warnDeprecation };\n","import { registerRuntimeHelpers, isBuiltInType, createSimpleExpression, createCompilerError, createObjectProperty, createCallExpression, TO_DISPLAY_STRING, transformModel as transformModel$1, findProp, hasDynamicKeyVBind, transformOn as transformOn$1, createCompoundExpression, isStaticExp, checkCompatEnabled, noopDirectiveTransform, baseCompile, baseParse } from '@vue/compiler-core';\nexport * from '@vue/compiler-core';\nimport { isVoidTag, isHTMLTag, isSVGTag, makeMap, parseStringStyle, capitalize, extend } from '@vue/shared';\n\nconst V_MODEL_RADIO = Symbol((process.env.NODE_ENV !== 'production') ? `vModelRadio` : ``);\r\nconst V_MODEL_CHECKBOX = Symbol((process.env.NODE_ENV !== 'production') ? `vModelCheckbox` : ``);\r\nconst V_MODEL_TEXT = Symbol((process.env.NODE_ENV !== 'production') ? `vModelText` : ``);\r\nconst V_MODEL_SELECT = Symbol((process.env.NODE_ENV !== 'production') ? `vModelSelect` : ``);\r\nconst V_MODEL_DYNAMIC = Symbol((process.env.NODE_ENV !== 'production') ? `vModelDynamic` : ``);\r\nconst V_ON_WITH_MODIFIERS = Symbol((process.env.NODE_ENV !== 'production') ? `vOnModifiersGuard` : ``);\r\nconst V_ON_WITH_KEYS = Symbol((process.env.NODE_ENV !== 'production') ? `vOnKeysGuard` : ``);\r\nconst V_SHOW = Symbol((process.env.NODE_ENV !== 'production') ? `vShow` : ``);\r\nconst TRANSITION = Symbol((process.env.NODE_ENV !== 'production') ? `Transition` : ``);\r\nconst TRANSITION_GROUP = Symbol((process.env.NODE_ENV !== 'production') ? `TransitionGroup` : ``);\r\nregisterRuntimeHelpers({\r\n    [V_MODEL_RADIO]: `vModelRadio`,\r\n    [V_MODEL_CHECKBOX]: `vModelCheckbox`,\r\n    [V_MODEL_TEXT]: `vModelText`,\r\n    [V_MODEL_SELECT]: `vModelSelect`,\r\n    [V_MODEL_DYNAMIC]: `vModelDynamic`,\r\n    [V_ON_WITH_MODIFIERS]: `withModifiers`,\r\n    [V_ON_WITH_KEYS]: `withKeys`,\r\n    [V_SHOW]: `vShow`,\r\n    [TRANSITION]: `Transition`,\r\n    [TRANSITION_GROUP]: `TransitionGroup`\r\n});\n\n/* eslint-disable no-restricted-globals */\r\nlet decoder;\r\nfunction decodeHtmlBrowser(raw, asAttr = false) {\r\n    if (!decoder) {\r\n        decoder = document.createElement('div');\r\n    }\r\n    if (asAttr) {\r\n        decoder.innerHTML = `<div foo=\"${raw.replace(/\"/g, '&quot;')}\">`;\r\n        return decoder.children[0].getAttribute('foo');\r\n    }\r\n    else {\r\n        decoder.innerHTML = raw;\r\n        return decoder.textContent;\r\n    }\r\n}\n\nconst isRawTextContainer = /*#__PURE__*/ makeMap('style,iframe,script,noscript', true);\r\nconst parserOptions = {\r\n    isVoidTag,\r\n    isNativeTag: tag => isHTMLTag(tag) || isSVGTag(tag),\r\n    isPreTag: tag => tag === 'pre',\r\n    decodeEntities: decodeHtmlBrowser ,\r\n    isBuiltInComponent: (tag) => {\r\n        if (isBuiltInType(tag, `Transition`)) {\r\n            return TRANSITION;\r\n        }\r\n        else if (isBuiltInType(tag, `TransitionGroup`)) {\r\n            return TRANSITION_GROUP;\r\n        }\r\n    },\r\n    // https://html.spec.whatwg.org/multipage/parsing.html#tree-construction-dispatcher\r\n    getNamespace(tag, parent) {\r\n        let ns = parent ? parent.ns : 0 /* HTML */;\r\n        if (parent && ns === 2 /* MATH_ML */) {\r\n            if (parent.tag === 'annotation-xml') {\r\n                if (tag === 'svg') {\r\n                    return 1 /* SVG */;\r\n                }\r\n                if (parent.props.some(a => a.type === 6 /* ATTRIBUTE */ &&\r\n                    a.name === 'encoding' &&\r\n                    a.value != null &&\r\n                    (a.value.content === 'text/html' ||\r\n                        a.value.content === 'application/xhtml+xml'))) {\r\n                    ns = 0 /* HTML */;\r\n                }\r\n            }\r\n            else if (/^m(?:[ions]|text)$/.test(parent.tag) &&\r\n                tag !== 'mglyph' &&\r\n                tag !== 'malignmark') {\r\n                ns = 0 /* HTML */;\r\n            }\r\n        }\r\n        else if (parent && ns === 1 /* SVG */) {\r\n            if (parent.tag === 'foreignObject' ||\r\n                parent.tag === 'desc' ||\r\n                parent.tag === 'title') {\r\n                ns = 0 /* HTML */;\r\n            }\r\n        }\r\n        if (ns === 0 /* HTML */) {\r\n            if (tag === 'svg') {\r\n                return 1 /* SVG */;\r\n            }\r\n            if (tag === 'math') {\r\n                return 2 /* MATH_ML */;\r\n            }\r\n        }\r\n        return ns;\r\n    },\r\n    // https://html.spec.whatwg.org/multipage/parsing.html#parsing-html-fragments\r\n    getTextMode({ tag, ns }) {\r\n        if (ns === 0 /* HTML */) {\r\n            if (tag === 'textarea' || tag === 'title') {\r\n                return 1 /* RCDATA */;\r\n            }\r\n            if (isRawTextContainer(tag)) {\r\n                return 2 /* RAWTEXT */;\r\n            }\r\n        }\r\n        return 0 /* DATA */;\r\n    }\r\n};\n\n// Parse inline CSS strings for static style attributes into an object.\r\n// This is a NodeTransform since it works on the static `style` attribute and\r\n// converts it into a dynamic equivalent:\r\n// style=\"color: red\" -> :style='{ \"color\": \"red\" }'\r\n// It is then processed by `transformElement` and included in the generated\r\n// props.\r\nconst transformStyle = node => {\r\n    if (node.type === 1 /* ELEMENT */) {\r\n        node.props.forEach((p, i) => {\r\n            if (p.type === 6 /* ATTRIBUTE */ && p.name === 'style' && p.value) {\r\n                // replace p with an expression node\r\n                node.props[i] = {\r\n                    type: 7 /* DIRECTIVE */,\r\n                    name: `bind`,\r\n                    arg: createSimpleExpression(`style`, true, p.loc),\r\n                    exp: parseInlineCSS(p.value.content, p.loc),\r\n                    modifiers: [],\r\n                    loc: p.loc\r\n                };\r\n            }\r\n        });\r\n    }\r\n};\r\nconst parseInlineCSS = (cssText, loc) => {\r\n    const normalized = parseStringStyle(cssText);\r\n    return createSimpleExpression(JSON.stringify(normalized), false, loc, 3 /* CAN_STRINGIFY */);\r\n};\n\nfunction createDOMCompilerError(code, loc) {\r\n    return createCompilerError(code, loc, (process.env.NODE_ENV !== 'production') || !true ? DOMErrorMessages : undefined);\r\n}\r\nconst DOMErrorMessages = {\r\n    [50 /* X_V_HTML_NO_EXPRESSION */]: `v-html is missing expression.`,\r\n    [51 /* X_V_HTML_WITH_CHILDREN */]: `v-html will override element children.`,\r\n    [52 /* X_V_TEXT_NO_EXPRESSION */]: `v-text is missing expression.`,\r\n    [53 /* X_V_TEXT_WITH_CHILDREN */]: `v-text will override element children.`,\r\n    [54 /* X_V_MODEL_ON_INVALID_ELEMENT */]: `v-model can only be used on <input>, <textarea> and <select> elements.`,\r\n    [55 /* X_V_MODEL_ARG_ON_ELEMENT */]: `v-model argument is not supported on plain elements.`,\r\n    [56 /* X_V_MODEL_ON_FILE_INPUT_ELEMENT */]: `v-model cannot be used on file inputs since they are read-only. Use a v-on:change listener instead.`,\r\n    [57 /* X_V_MODEL_UNNECESSARY_VALUE */]: `Unnecessary value binding used alongside v-model. It will interfere with v-model's behavior.`,\r\n    [58 /* X_V_SHOW_NO_EXPRESSION */]: `v-show is missing expression.`,\r\n    [59 /* X_TRANSITION_INVALID_CHILDREN */]: `<Transition> expects exactly one child element or component.`,\r\n    [60 /* X_IGNORED_SIDE_EFFECT_TAG */]: `Tags with side effect (<script> and <style>) are ignored in client component templates.`\r\n};\n\nconst transformVHtml = (dir, node, context) => {\r\n    const { exp, loc } = dir;\r\n    if (!exp) {\r\n        context.onError(createDOMCompilerError(50 /* X_V_HTML_NO_EXPRESSION */, loc));\r\n    }\r\n    if (node.children.length) {\r\n        context.onError(createDOMCompilerError(51 /* X_V_HTML_WITH_CHILDREN */, loc));\r\n        node.children.length = 0;\r\n    }\r\n    return {\r\n        props: [\r\n            createObjectProperty(createSimpleExpression(`innerHTML`, true, loc), exp || createSimpleExpression('', true))\r\n        ]\r\n    };\r\n};\n\nconst transformVText = (dir, node, context) => {\r\n    const { exp, loc } = dir;\r\n    if (!exp) {\r\n        context.onError(createDOMCompilerError(52 /* X_V_TEXT_NO_EXPRESSION */, loc));\r\n    }\r\n    if (node.children.length) {\r\n        context.onError(createDOMCompilerError(53 /* X_V_TEXT_WITH_CHILDREN */, loc));\r\n        node.children.length = 0;\r\n    }\r\n    return {\r\n        props: [\r\n            createObjectProperty(createSimpleExpression(`textContent`, true), exp\r\n                ? createCallExpression(context.helperString(TO_DISPLAY_STRING), [exp], loc)\r\n                : createSimpleExpression('', true))\r\n        ]\r\n    };\r\n};\n\nconst transformModel = (dir, node, context) => {\r\n    const baseResult = transformModel$1(dir, node, context);\r\n    // base transform has errors OR component v-model (only need props)\r\n    if (!baseResult.props.length || node.tagType === 1 /* COMPONENT */) {\r\n        return baseResult;\r\n    }\r\n    if (dir.arg) {\r\n        context.onError(createDOMCompilerError(55 /* X_V_MODEL_ARG_ON_ELEMENT */, dir.arg.loc));\r\n    }\r\n    function checkDuplicatedValue() {\r\n        const value = findProp(node, 'value');\r\n        if (value) {\r\n            context.onError(createDOMCompilerError(57 /* X_V_MODEL_UNNECESSARY_VALUE */, value.loc));\r\n        }\r\n    }\r\n    const { tag } = node;\r\n    const isCustomElement = context.isCustomElement(tag);\r\n    if (tag === 'input' ||\r\n        tag === 'textarea' ||\r\n        tag === 'select' ||\r\n        isCustomElement) {\r\n        let directiveToUse = V_MODEL_TEXT;\r\n        let isInvalidType = false;\r\n        if (tag === 'input' || isCustomElement) {\r\n            const type = findProp(node, `type`);\r\n            if (type) {\r\n                if (type.type === 7 /* DIRECTIVE */) {\r\n                    // :type=\"foo\"\r\n                    directiveToUse = V_MODEL_DYNAMIC;\r\n                }\r\n                else if (type.value) {\r\n                    switch (type.value.content) {\r\n                        case 'radio':\r\n                            directiveToUse = V_MODEL_RADIO;\r\n                            break;\r\n                        case 'checkbox':\r\n                            directiveToUse = V_MODEL_CHECKBOX;\r\n                            break;\r\n                        case 'file':\r\n                            isInvalidType = true;\r\n                            context.onError(createDOMCompilerError(56 /* X_V_MODEL_ON_FILE_INPUT_ELEMENT */, dir.loc));\r\n                            break;\r\n                        default:\r\n                            // text type\r\n                            (process.env.NODE_ENV !== 'production') && checkDuplicatedValue();\r\n                            break;\r\n                    }\r\n                }\r\n            }\r\n            else if (hasDynamicKeyVBind(node)) {\r\n                // element has bindings with dynamic keys, which can possibly contain\r\n                // \"type\".\r\n                directiveToUse = V_MODEL_DYNAMIC;\r\n            }\r\n            else {\r\n                // text type\r\n                (process.env.NODE_ENV !== 'production') && checkDuplicatedValue();\r\n            }\r\n        }\r\n        else if (tag === 'select') {\r\n            directiveToUse = V_MODEL_SELECT;\r\n        }\r\n        else {\r\n            // textarea\r\n            (process.env.NODE_ENV !== 'production') && checkDuplicatedValue();\r\n        }\r\n        // inject runtime directive\r\n        // by returning the helper symbol via needRuntime\r\n        // the import will replaced a resolveDirective call.\r\n        if (!isInvalidType) {\r\n            baseResult.needRuntime = context.helper(directiveToUse);\r\n        }\r\n    }\r\n    else {\r\n        context.onError(createDOMCompilerError(54 /* X_V_MODEL_ON_INVALID_ELEMENT */, dir.loc));\r\n    }\r\n    // native vmodel doesn't need the `modelValue` props since they are also\r\n    // passed to the runtime as `binding.value`. removing it reduces code size.\r\n    baseResult.props = baseResult.props.filter(p => !(p.key.type === 4 /* SIMPLE_EXPRESSION */ &&\r\n        p.key.content === 'modelValue'));\r\n    return baseResult;\r\n};\n\nconst isEventOptionModifier = /*#__PURE__*/ makeMap(`passive,once,capture`);\r\nconst isNonKeyModifier = /*#__PURE__*/ makeMap(\r\n// event propagation management\r\n`stop,prevent,self,` +\r\n    // system modifiers + exact\r\n    `ctrl,shift,alt,meta,exact,` +\r\n    // mouse\r\n    `middle`);\r\n// left & right could be mouse or key modifiers based on event type\r\nconst maybeKeyModifier = /*#__PURE__*/ makeMap('left,right');\r\nconst isKeyboardEvent = /*#__PURE__*/ makeMap(`onkeyup,onkeydown,onkeypress`, true);\r\nconst resolveModifiers = (key, modifiers, context, loc) => {\r\n    const keyModifiers = [];\r\n    const nonKeyModifiers = [];\r\n    const eventOptionModifiers = [];\r\n    for (let i = 0; i < modifiers.length; i++) {\r\n        const modifier = modifiers[i];\r\n        if (modifier === 'native' &&\r\n            checkCompatEnabled(\"COMPILER_V_ON_NATIVE\" /* COMPILER_V_ON_NATIVE */, context, loc)) {\r\n            eventOptionModifiers.push(modifier);\r\n        }\r\n        else if (isEventOptionModifier(modifier)) {\r\n            // eventOptionModifiers: modifiers for addEventListener() options,\r\n            // e.g. .passive & .capture\r\n            eventOptionModifiers.push(modifier);\r\n        }\r\n        else {\r\n            // runtimeModifiers: modifiers that needs runtime guards\r\n            if (maybeKeyModifier(modifier)) {\r\n                if (isStaticExp(key)) {\r\n                    if (isKeyboardEvent(key.content)) {\r\n                        keyModifiers.push(modifier);\r\n                    }\r\n                    else {\r\n                        nonKeyModifiers.push(modifier);\r\n                    }\r\n                }\r\n                else {\r\n                    keyModifiers.push(modifier);\r\n                    nonKeyModifiers.push(modifier);\r\n                }\r\n            }\r\n            else {\r\n                if (isNonKeyModifier(modifier)) {\r\n                    nonKeyModifiers.push(modifier);\r\n                }\r\n                else {\r\n                    keyModifiers.push(modifier);\r\n                }\r\n            }\r\n        }\r\n    }\r\n    return {\r\n        keyModifiers,\r\n        nonKeyModifiers,\r\n        eventOptionModifiers\r\n    };\r\n};\r\nconst transformClick = (key, event) => {\r\n    const isStaticClick = isStaticExp(key) && key.content.toLowerCase() === 'onclick';\r\n    return isStaticClick\r\n        ? createSimpleExpression(event, true)\r\n        : key.type !== 4 /* SIMPLE_EXPRESSION */\r\n            ? createCompoundExpression([\r\n                `(`,\r\n                key,\r\n                `) === \"onClick\" ? \"${event}\" : (`,\r\n                key,\r\n                `)`\r\n            ])\r\n            : key;\r\n};\r\nconst transformOn = (dir, node, context) => {\r\n    return transformOn$1(dir, node, context, baseResult => {\r\n        const { modifiers } = dir;\r\n        if (!modifiers.length)\r\n            return baseResult;\r\n        let { key, value: handlerExp } = baseResult.props[0];\r\n        const { keyModifiers, nonKeyModifiers, eventOptionModifiers } = resolveModifiers(key, modifiers, context, dir.loc);\r\n        // normalize click.right and click.middle since they don't actually fire\r\n        if (nonKeyModifiers.includes('right')) {\r\n            key = transformClick(key, `onContextmenu`);\r\n        }\r\n        if (nonKeyModifiers.includes('middle')) {\r\n            key = transformClick(key, `onMouseup`);\r\n        }\r\n        if (nonKeyModifiers.length) {\r\n            handlerExp = createCallExpression(context.helper(V_ON_WITH_MODIFIERS), [\r\n                handlerExp,\r\n                JSON.stringify(nonKeyModifiers)\r\n            ]);\r\n        }\r\n        if (keyModifiers.length &&\r\n            // if event name is dynamic, always wrap with keys guard\r\n            (!isStaticExp(key) || isKeyboardEvent(key.content))) {\r\n            handlerExp = createCallExpression(context.helper(V_ON_WITH_KEYS), [\r\n                handlerExp,\r\n                JSON.stringify(keyModifiers)\r\n            ]);\r\n        }\r\n        if (eventOptionModifiers.length) {\r\n            const modifierPostfix = eventOptionModifiers.map(capitalize).join('');\r\n            key = isStaticExp(key)\r\n                ? createSimpleExpression(`${key.content}${modifierPostfix}`, true)\r\n                : createCompoundExpression([`(`, key, `) + \"${modifierPostfix}\"`]);\r\n        }\r\n        return {\r\n            props: [createObjectProperty(key, handlerExp)]\r\n        };\r\n    });\r\n};\n\nconst transformShow = (dir, node, context) => {\r\n    const { exp, loc } = dir;\r\n    if (!exp) {\r\n        context.onError(createDOMCompilerError(58 /* X_V_SHOW_NO_EXPRESSION */, loc));\r\n    }\r\n    return {\r\n        props: [],\r\n        needRuntime: context.helper(V_SHOW)\r\n    };\r\n};\n\nconst warnTransitionChildren = (node, context) => {\r\n    if (node.type === 1 /* ELEMENT */ &&\r\n        node.tagType === 1 /* COMPONENT */) {\r\n        const component = context.isBuiltInComponent(node.tag);\r\n        if (component === TRANSITION) {\r\n            return () => {\r\n                if (node.children.length && hasMultipleChildren(node)) {\r\n                    context.onError(createDOMCompilerError(59 /* X_TRANSITION_INVALID_CHILDREN */, {\r\n                        start: node.children[0].loc.start,\r\n                        end: node.children[node.children.length - 1].loc.end,\r\n                        source: ''\r\n                    }));\r\n                }\r\n            };\r\n        }\r\n    }\r\n};\r\nfunction hasMultipleChildren(node) {\r\n    // #1352 filter out potential comment nodes.\r\n    const children = (node.children = node.children.filter(c => c.type !== 3 /* COMMENT */ &&\r\n        !(c.type === 2 /* TEXT */ && !c.content.trim())));\r\n    const child = children[0];\r\n    return (children.length !== 1 ||\r\n        child.type === 11 /* FOR */ ||\r\n        (child.type === 9 /* IF */ && child.branches.some(hasMultipleChildren)));\r\n}\n\nconst ignoreSideEffectTags = (node, context) => {\r\n    if (node.type === 1 /* ELEMENT */ &&\r\n        node.tagType === 0 /* ELEMENT */ &&\r\n        (node.tag === 'script' || node.tag === 'style')) {\r\n        context.onError(createDOMCompilerError(60 /* X_IGNORED_SIDE_EFFECT_TAG */, node.loc));\r\n        context.removeNode();\r\n    }\r\n};\n\nconst DOMNodeTransforms = [\r\n    transformStyle,\r\n    ...((process.env.NODE_ENV !== 'production') ? [warnTransitionChildren] : [])\r\n];\r\nconst DOMDirectiveTransforms = {\r\n    cloak: noopDirectiveTransform,\r\n    html: transformVHtml,\r\n    text: transformVText,\r\n    model: transformModel,\r\n    on: transformOn,\r\n    show: transformShow\r\n};\r\nfunction compile(template, options = {}) {\r\n    return baseCompile(template, extend({}, parserOptions, options, {\r\n        nodeTransforms: [\r\n            // ignore <script> and <tag>\r\n            // this is not put inside DOMNodeTransforms because that list is used\r\n            // by compiler-ssr to generate vnode fallback branches\r\n            ignoreSideEffectTags,\r\n            ...DOMNodeTransforms,\r\n            ...(options.nodeTransforms || [])\r\n        ],\r\n        directiveTransforms: extend({}, DOMDirectiveTransforms, options.directiveTransforms || {}),\r\n        transformHoist: null \r\n    }));\r\n}\r\nfunction parse(template, options = {}) {\r\n    return baseParse(template, extend({}, parserOptions, options));\r\n}\n\nexport { DOMDirectiveTransforms, DOMNodeTransforms, TRANSITION, TRANSITION_GROUP, V_MODEL_CHECKBOX, V_MODEL_DYNAMIC, V_MODEL_RADIO, V_MODEL_SELECT, V_MODEL_TEXT, V_ON_WITH_KEYS, V_ON_WITH_MODIFIERS, V_SHOW, compile, createDOMCompilerError, parse, parserOptions, transformStyle };\n","export const HOOK_SETUP = 'devtools-plugin:setup';\nexport const HOOK_PLUGIN_SETTINGS_SET = 'plugin:settings:set';\n","export function getDevtoolsGlobalHook() {\n    return getTarget().__VUE_DEVTOOLS_GLOBAL_HOOK__;\n}\nexport function getTarget() {\n    // @ts-ignore\n    return (typeof navigator !== 'undefined' && typeof window !== 'undefined')\n        ? window\n        : typeof global !== 'undefined'\n            ? global\n            : {};\n}\nexport const isProxyAvailable = typeof Proxy === 'function';\n","import { getTarget, getDevtoolsGlobalHook, isProxyAvailable } from './env';\nimport { HOOK_SETUP } from './const';\nimport { ApiProxy } from './proxy';\nexport * from './api';\nexport * from './plugin';\nexport * from './time';\nexport function setupDevtoolsPlugin(pluginDescriptor, setupFn) {\n    const descriptor = pluginDescriptor;\n    const target = getTarget();\n    const hook = getDevtoolsGlobalHook();\n    const enableProxy = isProxyAvailable && descriptor.enableEarlyProxy;\n    if (hook && (target.__VUE_DEVTOOLS_PLUGIN_API_AVAILABLE__ || !enableProxy)) {\n        hook.emit(HOOK_SETUP, pluginDescriptor, setupFn);\n    }\n    else {\n        const proxy = enableProxy ? new ApiProxy(descriptor, hook) : null;\n        const list = target.__VUE_DEVTOOLS_PLUGINS__ = target.__VUE_DEVTOOLS_PLUGINS__ || [];\n        list.push({\n            pluginDescriptor: descriptor,\n            setupFn,\n            proxy,\n        });\n        if (proxy)\n            setupFn(proxy.proxiedTarget);\n    }\n}\n","import { HOOK_PLUGIN_SETTINGS_SET } from './const';\nimport { now } from './time';\nexport class ApiProxy {\n    constructor(plugin, hook) {\n        this.target = null;\n        this.targetQueue = [];\n        this.onQueue = [];\n        this.plugin = plugin;\n        this.hook = hook;\n        const defaultSettings = {};\n        if (plugin.settings) {\n            for (const id in plugin.settings) {\n                const item = plugin.settings[id];\n                defaultSettings[id] = item.defaultValue;\n            }\n        }\n        const localSettingsSaveId = `__vue-devtools-plugin-settings__${plugin.id}`;\n        let currentSettings = Object.assign({}, defaultSettings);\n        try {\n            const raw = localStorage.getItem(localSettingsSaveId);\n            const data = JSON.parse(raw);\n            Object.assign(currentSettings, data);\n        }\n        catch (e) {\n            // noop\n        }\n        this.fallbacks = {\n            getSettings() {\n                return currentSettings;\n            },\n            setSettings(value) {\n                try {\n                    localStorage.setItem(localSettingsSaveId, JSON.stringify(value));\n                }\n                catch (e) {\n                    // noop\n                }\n                currentSettings = value;\n            },\n            now() {\n                return now();\n            },\n        };\n        if (hook) {\n            hook.on(HOOK_PLUGIN_SETTINGS_SET, (pluginId, value) => {\n                if (pluginId === this.plugin.id) {\n                    this.fallbacks.setSettings(value);\n                }\n            });\n        }\n        this.proxiedOn = new Proxy({}, {\n            get: (_target, prop) => {\n                if (this.target) {\n                    return this.target.on[prop];\n                }\n                else {\n                    return (...args) => {\n                        this.onQueue.push({\n                            method: prop,\n                            args,\n                        });\n                    };\n                }\n            },\n        });\n        this.proxiedTarget = new Proxy({}, {\n            get: (_target, prop) => {\n                if (this.target) {\n                    return this.target[prop];\n                }\n                else if (prop === 'on') {\n                    return this.proxiedOn;\n                }\n                else if (Object.keys(this.fallbacks).includes(prop)) {\n                    return (...args) => {\n                        this.targetQueue.push({\n                            method: prop,\n                            args,\n                            resolve: () => { },\n                        });\n                        return this.fallbacks[prop](...args);\n                    };\n                }\n                else {\n                    return (...args) => {\n                        return new Promise(resolve => {\n                            this.targetQueue.push({\n                                method: prop,\n                                args,\n                                resolve,\n                            });\n                        });\n                    };\n                }\n            },\n        });\n    }\n    async setRealTarget(target) {\n        this.target = target;\n        for (const item of this.onQueue) {\n            this.target.on[item.method](...item.args);\n        }\n        for (const item of this.targetQueue) {\n            item.resolve(await this.target[item.method](...item.args));\n        }\n    }\n}\n","let supported;\nlet perf;\nexport function isPerformanceSupported() {\n    var _a;\n    if (supported !== undefined) {\n        return supported;\n    }\n    if (typeof window !== 'undefined' && window.performance) {\n        supported = true;\n        perf = window.performance;\n    }\n    else if (typeof global !== 'undefined' && ((_a = global.perf_hooks) === null || _a === void 0 ? void 0 : _a.performance)) {\n        supported = true;\n        perf = global.perf_hooks.performance;\n    }\n    else {\n        supported = false;\n    }\n    return supported;\n}\nexport function now() {\n    return isPerformanceSupported() ? perf.now() : Date.now();\n}\n","import * as Vue from 'vue'\n\nvar isVue2 = false\nvar isVue3 = true\nvar Vue2 = undefined\n\nfunction install() {}\n\nexport function set(target, key, val) {\n  if (Array.isArray(target)) {\n    target.length = Math.max(target.length, key)\n    target.splice(key, 1, val)\n    return val\n  }\n  target[key] = val\n  return val\n}\n\nexport function del(target, key) {\n  if (Array.isArray(target)) {\n    target.splice(key, 1)\n    return\n  }\n  delete target[key]\n}\n\nexport * from 'vue'\nexport {\n  Vue,\n  Vue2,\n  isVue2,\n  isVue3,\n  install,\n}\n"],"names":["defaultOnError","error","defaultOnWarn","msg","createCompilerError","code","loc","messages","additionalMessage","SyntaxError","String","FRAGMENT","Symbol","TELEPORT","SUSPENSE","KEEP_ALIVE","BASE_TRANSITION","OPEN_BLOCK","CREATE_BLOCK","CREATE_ELEMENT_BLOCK","CREATE_VNODE","CREATE_ELEMENT_VNODE","CREATE_COMMENT","CREATE_TEXT","CREATE_STATIC","RESOLVE_COMPONENT","RESOLVE_DYNAMIC_COMPONENT","RESOLVE_DIRECTIVE","RESOLVE_FILTER","WITH_DIRECTIVES","RENDER_LIST","RENDER_SLOT","CREATE_SLOTS","TO_DISPLAY_STRING","MERGE_PROPS","NORMALIZE_CLASS","NORMALIZE_STYLE","NORMALIZE_PROPS","GUARD_REACTIVE_PROPS","TO_HANDLERS","CAMELIZE","CAPITALIZE","TO_HANDLER_KEY","SET_BLOCK_TRACKING","PUSH_SCOPE_ID","POP_SCOPE_ID","WITH_CTX","UNREF","IS_REF","WITH_MEMO","IS_MEMO_SAME","helperNameMap","registerRuntimeHelpers","helpers","Object","getOwnPropertySymbols","forEach","s","locStub","source","start","line","column","offset","end","createRoot","children","type","components","directives","hoists","imports","cached","temps","codegenNode","undefined","createVNodeCall","context","tag","props","patchFlag","dynamicProps","isBlock","disableTracking","isComponent","helper","getVNodeBlockHelper","inSSR","getVNodeHelper","createArrayExpression","elements","createObjectExpression","properties","createObjectProperty","key","value","createSimpleExpression","content","isStatic","constType","createCompoundExpression","createCallExpression","callee","args","arguments","createFunctionExpression","params","returns","newline","isSlot","createConditionalExpression","test","consequent","alternate","createCacheExpression","index","isVNode","createBlockStatement","body","isStaticExp","p","isBuiltInType","expected","isCoreComponent","nonIdentifierRE","isSimpleIdentifier","name","validFirstIdentCharRE","validIdentCharRE","whitespaceRE","isMemberExpressionBrowser","path","trim","replace","state","stateStack","currentOpenBracketCount","currentOpenParensCount","currentStringType","i","length","char","charAt","push","pop","isMemberExpression","getInnerRange","slice","newLoc","advancePositionWithClone","pos","numberOfCharacters","advancePositionWithMutation","linesCount","lastNewLinePos","charCodeAt","findDir","node","allowEmpty","exp","findProp","dynamicOnly","isStaticArgOf","arg","hasDynamicKeyVBind","some","isText","isVSlot","isTemplateNode","tagType","isSlotOutlet","ssr","propsHelperSet","Set","getUnnormalizedProps","callPath","has","concat","injectProp","prop","propsWithInjection","parentCall","ret","first","unshift","alreadyExists","propKeyName","toValidAssetId","searchValue","replaceValue","toString","getMemoedVNodeCall","makeBlock","removeHelper","getCompatValue","config","options","compatConfig","isCompatEnabled","mode","checkCompatEnabled","enabled","decodeRE","decodeMap","gt","lt","amp","apos","quot","defaultParserOptions","delimiters","getNamespace","getTextMode","isVoidTag","NO","isPreTag","isCustomElement","decodeEntities","rawText","_","p1","onError","onWarn","comments","createParserContext","getCursor","parseChildren","getSelection","rawOptions","originalSource","inPre","inVPre","ancestors","parent","last","ns","nodes","isEnd","startsWith","parseInterpolation","emitError","parseComment","parseBogusComment","parseCDATA","advanceBy","parseTag","parseElement","isSpecialTemplateDirective","parseText","pushNode","removedWhitespace","shouldCondense","whitespace","prev","next","filter","Boolean","match","exec","prevIndex","nestedIndex","indexOf","contentStart","closeIndex","wasInPre","wasInVPre","element","isPreBoundary","isVPreBoundary","isSelfClosing","inlineTemplateProp","find","startsWithEndTagOpen","toLowerCase","advanceSpaces","cursor","currentSource","parseAttributes","isBuiltInComponent","isNativeTag","attributeNames","attr","parseAttribute","nameSet","add","pattern","m","parseAttributeValue","isPropShorthand","dirName","startOffset","lastIndexOf","getNewPosition","endsWith","isQuoted","valueLoc","modifiers","split","includes","splice","quote","endIndex","parseTextData","unexpectedChars","open","close","innerStart","innerEnd","rawContentLength","rawContent","preTrimContent","endOffset","endTokens","xs","searchString","hoistStatic","root","walk","isSingleElementRoot","child","doNotHoistNode","originalCount","hoistedCount","constantType","getConstantType","hoist","flag","getPatchFlag","getGeneratedPropsConstantType","getNodeProps","scopes","vSlot","branches","transformHoist","constantCache","get","set","returnType","generatedPropsType","childType","expType","allowHoistedHelperSet","getConstantTypeOfHelperCall","keyType","valueType","parseInt","createTransformContext","filename","prefixIdentifiers","cacheHandlers","nodeTransforms","directiveTransforms","expressionPlugins","scopeId","slotted","ssrCssVars","bindingMetadata","inline","isTS","nameMatch","selfName","Map","identifiers","create","vFor","vPre","vOnce","currentNode","childIndex","inVOnce","count","currentCount","delete","helperString","replaceNode","removeNode","list","removalIndex","onNodeRemoved","addIdentifiers","removeIdentifiers","identifier","hoisted","cache","filters","transform","traverseNode","createRootCodegen","keys","traverseChildren","nodeRemoved","exitFns","onExit","createStructuralDirectiveTransform","fn","matches","n","PURE_ANNOTATION","createCodegenContext","ast","sourceMap","optimizeImports","runtimeGlobalName","runtimeModuleName","ssrRuntimeModuleName","indentLevel","pure","map","indent","deindent","withoutNewLine","repeat","generate","onContextCreated","hasHelpers","useWithBlock","preambleContext","genFunctionPreamble","functionName","signature","join","genAssets","genNode","preamble","toJSON","VueBinding","aliasHelper","staticHelpers","genHoists","assets","resolver","id","maybeSelfReference","JSON","stringify","genNodeListAsArray","multilines","genNodeList","comma","genText","genExpression","genInterpolation","genCompoundExpression","genComment","genVNodeCall","genCallExpression","genObjectExpression","genArrayExpression","genFunctionExpression","genConditionalExpression","genCacheExpression","genExpressionAsPropertyKey","text","callHelper","genNullableArgs","isNonScopedSlot","needNewline","needsParens","isNested","RegExp","transformIf","dir","processIf","ifNode","branch","isRoot","siblings","sibling","createCodegenNodeForBranch","parentCondition","getParentCondition","processCodegen","createIfBranch","condition","userKey","keyIndex","createChildrenCodegenNode","keyProperty","firstChild","needFragmentWrapper","vnodeCall","transformFor","processFor","forNode","renderExp","isTemplate","memo","keyProp","keyExp","isStableFragment","fragmentFlag","childBlock","slotOutlet","loop","createForLoopParams","parseResult","parseForExpression","valueAlias","keyAlias","objectIndexAlias","forAliasRE","forIteratorRE","stripParensRE","input","inMatch","LHS","RHS","result","createAliasExpression","valueContent","trimmedOffset","iteratorMatch","keyContent","keyOffset","indexContent","range","memoArgs","createParamsList","defaultFallback","trackSlotScopes","buildClientSlotFn","buildSlots","buildSlotFn","slotsProperties","dynamicSlots","hasDynamicSlots","onComponentSlot","hasTemplateSlots","hasNamedDefaultSlot","implicitDefaultChildren","seenSlotNames","slotElement","slotDir","slotChildren","slotLoc","slotName","slotProps","dirLoc","staticSlotName","slotFunction","vIf","vElse","buildDynamicSlot","j","conditional","buildDefaultSlotProperty","isNonWhitespaceContent","slotFlag","hasForwardedSlots","slots","directiveImportMap","WeakMap","transformElement","vnodeTag","resolveComponentType","isDynamicComponent","vnodeProps","vnodeChildren","vnodePatchFlag","vnodeDynamicProps","dynamicPropNames","vnodeDirectives","shouldUseBlock","propsBuildResult","buildProps","buildDirectiveArgs","shouldBuildAsSlots","hasDynamicTextChild","stringifyDynamicPropNames","isExplicitDynamic","isComponentTag","isProp","isDir","builtIn","elementLoc","mergeArgs","runtimeDirectives","hasChildren","hasRef","hasClassBinding","hasStyleBinding","hasHydrationEventBinding","hasDynamicKeys","hasVnodeHook","analyzePatchFlag","isEventHandler","isVBind","isVOn","dedupeProperties","directiveTransform","needRuntime","propsExpression","classKeyIndex","styleKeyIndex","hasDynamicKey","isHandlerKey","classProp","styleProp","knownProps","deduped","existing","mergeAsArray","incoming","dirArgs","runtime","trueExpression","modifier","propsNamesString","l","cacheStringFunction","str","hit","camelizeRE","camelize","c","toUpperCase","transformSlotOutlet","processSlotOutlet","slotArgs","expectedLen","nonNameProps","fnExpRE","transformOn","augmentor","eventName","rawName","shouldCache","isMemberExp","isInlineStatement","hasMultipleStatements","transformBind","_node","injectPrefix","prefix","transformText","currentContainer","hasText","callArgs","seen","WeakSet","transformOnce","cur","transformModel","createTransformProps","rawExp","expString","maybeRef","propName","assignmentExp","eventArg","modifiersKey","validDivisionCharRE","transformFilter","rewriteFilter","parseFilter","expression","inSingle","inDouble","inTemplateString","inRegex","curly","square","paren","lastFilterIndex","pushFilter","wrapFilter","seen$1","transformMemo","getBaseTransformPreset","on","bind","model","baseCompile","template","isModuleMode","noopDirectiveTransform","V_MODEL_RADIO","V_MODEL_CHECKBOX","V_MODEL_TEXT","V_MODEL_SELECT","V_MODEL_DYNAMIC","V_ON_WITH_MODIFIERS","V_ON_WITH_KEYS","V_SHOW","TRANSITION","TRANSITION_GROUP","decoder","decodeHtmlBrowser","raw","asAttr","document","createElement","innerHTML","getAttribute","textContent","isRawTextContainer","parserOptions","a","transformStyle","parseInlineCSS","cssText","normalized","createDOMCompilerError","transformVHtml","transformVText","baseResult","directiveToUse","isInvalidType","isEventOptionModifier","isNonKeyModifier","maybeKeyModifier","isKeyboardEvent","resolveModifiers","keyModifiers","nonKeyModifiers","eventOptionModifiers","transformClick","event","isStaticClick","handlerExp","modifierPostfix","transformShow","ignoreSideEffectTags","DOMNodeTransforms","DOMDirectiveTransforms","cloak","html","show","compile","HOOK_SETUP","HOOK_PLUGIN_SETTINGS_SET","getDevtoolsGlobalHook","getTarget","__VUE_DEVTOOLS_GLOBAL_HOOK__","navigator","window","g","isProxyAvailable","Proxy","setupDevtoolsPlugin","pluginDescriptor","setupFn","descriptor","target","hook","enableProxy","enableEarlyProxy","__VUE_DEVTOOLS_PLUGIN_API_AVAILABLE__","proxy","__VUE_DEVTOOLS_PLUGINS__","proxiedTarget","emit","ApiProxy","constructor","plugin","this","targetQueue","onQueue","defaultSettings","settings","item","defaultValue","localSettingsSaveId","currentSettings","assign","localStorage","getItem","data","parse","e","fallbacks","getSettings","setSettings","setItem","now","pluginId","proxiedOn","_target","method","resolve","Promise","async","supported","perf","isPerformanceSupported","_a","performance","perf_hooks","Date","isVue2"],"sourceRoot":""}